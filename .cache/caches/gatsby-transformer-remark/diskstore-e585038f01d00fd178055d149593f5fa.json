{"expireTime":9007200911871011000,"key":"transformer-remark-markdown-ast-64a599f8d46630def684556b5f00d5cf-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Objects in JavaScript:","position":{"start":{"line":3,"column":3,"offset":6},"end":{"line":3,"column":25,"offset":28},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":4},"end":{"line":3,"column":25,"offset":28},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Everything else besides primitive data type values is an ","position":{"start":{"line":5,"column":4,"offset":35},"end":{"line":5,"column":61,"offset":92},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"object","position":{"start":{"line":5,"column":62,"offset":93},"end":{"line":5,"column":68,"offset":99},"indent":[]}}],"position":{"start":{"line":5,"column":61,"offset":92},"end":{"line":5,"column":69,"offset":100},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":5,"column":69,"offset":100},"end":{"line":5,"column":70,"offset":101},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":32},"end":{"line":5,"column":70,"offset":101},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Objects are ","position":{"start":{"line":7,"column":1,"offset":105},"end":{"line":7,"column":13,"offset":117},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key-value","position":{"start":{"line":7,"column":14,"offset":118},"end":{"line":7,"column":23,"offset":127},"indent":[]}}],"position":{"start":{"line":7,"column":13,"offset":117},"end":{"line":7,"column":24,"offset":128},"indent":[]}},{"type":"text","value":" stores, more specifically ","position":{"start":{"line":7,"column":24,"offset":128},"end":{"line":7,"column":51,"offset":155},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"stringkey-value","position":{"start":{"line":7,"column":52,"offset":156},"end":{"line":7,"column":67,"offset":171},"indent":[]}}],"position":{"start":{"line":7,"column":51,"offset":155},"end":{"line":7,"column":68,"offset":172},"indent":[]}},{"type":"text","value":" stores. The\n\"keys\" of an object are called ","position":{"start":{"line":7,"column":68,"offset":172},"end":{"line":8,"column":32,"offset":217},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"properties","position":{"start":{"line":8,"column":33,"offset":218},"end":{"line":8,"column":43,"offset":228},"indent":[]}}],"position":{"start":{"line":8,"column":32,"offset":217},"end":{"line":8,"column":44,"offset":229},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":8,"column":44,"offset":229},"end":{"line":8,"column":45,"offset":230},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":105},"end":{"line":8,"column":45,"offset":230},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The syntax to create a plain object is ","position":{"start":{"line":10,"column":1,"offset":234},"end":{"line":10,"column":40,"offset":273},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">{key: value, ...}</code>","position":{"start":{"line":10,"column":40,"offset":273},"end":{"line":10,"column":59,"offset":292},"indent":[]}},{"type":"text","value":", which is called an\nobject literal. For example:","position":{"start":{"line":10,"column":59,"offset":292},"end":{"line":11,"column":29,"offset":342},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":234},"end":{"line":11,"column":29,"offset":342},"indent":[1]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">baz</span><span class=\"token operator\">:</span> <span class=\"token number\">42</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":13,"column":1,"offset":346},"end":{"line":19,"column":4,"offset":407},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that the above example doesn't use ","position":{"start":{"line":21,"column":1,"offset":411},"end":{"line":21,"column":41,"offset":451},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"quotation marks","position":{"start":{"line":21,"column":42,"offset":452},"end":{"line":21,"column":57,"offset":467},"indent":[]}}],"position":{"start":{"line":21,"column":41,"offset":451},"end":{"line":21,"column":58,"offset":468},"indent":[]}},{"type":"text","value":" around the property\nnames. In an object literal, quotation marks can be be omitted if the property\nname would also be a ","position":{"start":{"line":21,"column":58,"offset":468},"end":{"line":23,"column":22,"offset":591},"indent":[1,1]}},{"type":"emphasis","children":[{"type":"text","value":"valid variable name","position":{"start":{"line":23,"column":23,"offset":592},"end":{"line":23,"column":42,"offset":611},"indent":[]}}],"position":{"start":{"line":23,"column":22,"offset":591},"end":{"line":23,"column":43,"offset":612},"indent":[]}},{"type":"text","value":". If not, they need to be quoted.\n","position":{"start":{"line":23,"column":43,"offset":612},"end":{"line":24,"column":1,"offset":647},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"Number literals","position":{"start":{"line":24,"column":2,"offset":648},"end":{"line":24,"column":17,"offset":663},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":647},"end":{"line":24,"column":18,"offset":664},"indent":[]}},{"type":"text","value":" are valid an object literal as well.","position":{"start":{"line":24,"column":18,"offset":664},"end":{"line":24,"column":55,"offset":701},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":411},"end":{"line":24,"column":55,"offset":701},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here are some more examples of valid and invalid property names in object\nliterals:","position":{"start":{"line":26,"column":1,"offset":705},"end":{"line":27,"column":10,"offset":789},"indent":[1]}}],"position":{"start":{"line":26,"column":1,"offset":705},"end":{"line":27,"column":10,"offset":789},"indent":[1]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">foo</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// valid, could be variable name</span>\n  <span class=\"token string-property property\">'bar'</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>      <span class=\"token comment\">// string literals are always valid</span>\n  <span class=\"token number\">123</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// number literals are always valid</span>\n  <span class=\"token number\">1.5</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// ^</span>\n  foo<span class=\"token operator\">-</span>bar<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token comment\">// invalid, would not be a valid variable name</span>\n  <span class=\"token string-property property\">'foo-bar'</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// string literals are alwaus valid</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":29,"column":1,"offset":793},"end":{"line":39,"column":4,"offset":1125},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"<div class=\"callout warning\">","position":{"start":{"line":41,"column":1,"offset":1129},"end":{"line":41,"column":30,"offset":1158},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Important:","position":{"start":{"line":43,"column":3,"offset":1164},"end":{"line":43,"column":13,"offset":1174},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1162},"end":{"line":43,"column":15,"offset":1176},"indent":[]}},{"type":"text","value":" No matter which value or syntax you use for a property name, the\nvalue will always be converted to a ","position":{"start":{"line":43,"column":15,"offset":1176},"end":{"line":44,"column":37,"offset":1279},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"string","position":{"start":{"line":44,"column":39,"offset":1281},"end":{"line":44,"column":45,"offset":1287},"indent":[]}}],"position":{"start":{"line":44,"column":37,"offset":1279},"end":{"line":44,"column":47,"offset":1289},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":44,"column":47,"offset":1289},"end":{"line":44,"column":48,"offset":1290},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1162},"end":{"line":44,"column":48,"offset":1290},"indent":[1]}},{"type":"html","value":"</div>","position":{"start":{"line":46,"column":1,"offset":1294},"end":{"line":46,"column":7,"offset":1300},"indent":[]}},{"type":"html","value":"<div class=\"callout secondary\">","position":{"start":{"line":48,"column":1,"offset":1304},"end":{"line":48,"column":32,"offset":1335},"indent":[]}},{"type":"html","value":"<i class=\"fa fa-info-circle\" aria-hidden=\"true\">\n</i> **ES2015**","position":{"start":{"line":50,"column":1,"offset":1339},"end":{"line":51,"column":16,"offset":1404},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"ES2015 adds two extensions to object values and object literals:","position":{"start":{"line":53,"column":1,"offset":1408},"end":{"line":53,"column":65,"offset":1472},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1408},"end":{"line":53,"column":65,"offset":1472},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"Symbols","position":{"start":{"line":55,"column":4,"offset":1479},"end":{"line":55,"column":11,"offset":1486},"indent":[]}}],"position":{"start":{"line":55,"column":3,"offset":1478},"end":{"line":55,"column":12,"offset":1487},"indent":[]}},{"type":"text","value":" are can be used as property names. They are not converted to\nstrings.","position":{"start":{"line":55,"column":12,"offset":1487},"end":{"line":56,"column":13,"offset":1562},"indent":[5]}}],"position":{"start":{"line":55,"column":3,"offset":1478},"end":{"line":56,"column":13,"offset":1562},"indent":[5]}}],"position":{"start":{"line":55,"column":1,"offset":1476},"end":{"line":57,"column":1,"offset":1564},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Object literals can contain ","position":{"start":{"line":58,"column":3,"offset":1568},"end":{"line":58,"column":31,"offset":1596},"indent":[]}},{"type":"emphasis","children":[{"type":"linkReference","identifier":"computed properties","label":"computed properties","referenceType":"full","children":[{"type":"text","value":"computed property names","position":{"start":{"line":58,"column":33,"offset":1598},"end":{"line":58,"column":56,"offset":1621},"indent":[]}}],"position":{"start":{"line":58,"column":32,"offset":1597},"end":{"line":58,"column":78,"offset":1643},"indent":[]}}],"position":{"start":{"line":58,"column":31,"offset":1596},"end":{"line":58,"column":79,"offset":1644},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":58,"column":79,"offset":1644},"end":{"line":58,"column":80,"offset":1645},"indent":[]}}],"position":{"start":{"line":58,"column":3,"offset":1568},"end":{"line":58,"column":80,"offset":1645},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">var</span> foo <span class=\"token operator\">=</span> <span class=\"token number\">42</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// creates {42: 0}</span></code></pre></div>","position":{"start":{"line":59,"column":2,"offset":1648},"end":{"line":66,"column":5,"offset":1749},"indent":[1,5,5,5,5,5,2]}}],"position":{"start":{"line":58,"column":1,"offset":1566},"end":{"line":66,"column":5,"offset":1749},"indent":[1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":55,"column":1,"offset":1476},"end":{"line":66,"column":5,"offset":1749},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"html","value":"</div>","position":{"start":{"line":68,"column":1,"offset":1753},"end":{"line":68,"column":7,"offset":1759},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"References","position":{"start":{"line":70,"column":4,"offset":1766},"end":{"line":70,"column":14,"offset":1776},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1763},"end":{"line":70,"column":14,"offset":1776},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just like in Java and other object-oriented programming languages, objects are\nrepresented as ","position":{"start":{"line":72,"column":1,"offset":1780},"end":{"line":73,"column":16,"offset":1875},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"references","position":{"start":{"line":73,"column":17,"offset":1876},"end":{"line":73,"column":27,"offset":1886},"indent":[]}}],"position":{"start":{"line":73,"column":16,"offset":1875},"end":{"line":73,"column":28,"offset":1887},"indent":[]}},{"type":"text","value":". That means if a variable has an object as a value,\nit really has a reference to that object.","position":{"start":{"line":73,"column":28,"offset":1887},"end":{"line":74,"column":42,"offset":1982},"indent":[1]}}],"position":{"start":{"line":72,"column":1,"offset":1780},"end":{"line":74,"column":42,"offset":1982},"indent":[1,1]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">var</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Tom'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">:</span></code></pre></div>","position":{"start":{"line":76,"column":1,"offset":1986},"end":{"line":79,"column":4,"offset":2027},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":":::ascii","position":{"start":{"line":81,"column":1,"offset":2031},"end":{"line":81,"column":9,"offset":2039},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2031},"end":{"line":81,"column":9,"offset":2039},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">                         ┌──────────────┐\n┌─────┬──────────┐       │  Object#123  │\n│user │ ref:123 ◆┼──────▶├──────┬───────┤\n└─────┴──────────┘       │ name │ \"Tom\" │\n                         └──────┴───────┘</code></pre></div>","position":{"start":{"line":83,"column":1,"offset":2043},"end":{"line":89,"column":4,"offset":2266},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":":::","position":{"start":{"line":91,"column":1,"offset":2270},"end":{"line":91,"column":4,"offset":2273},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2270},"end":{"line":91,"column":4,"offset":2273},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Assigning the value to another variable makes both variables point to the same\nobject:","position":{"start":{"line":93,"column":1,"offset":2277},"end":{"line":94,"column":8,"offset":2364},"indent":[1]}}],"position":{"start":{"line":93,"column":1,"offset":2277},"end":{"line":94,"column":8,"offset":2364},"indent":[1]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\n<span class=\"token keyword\">var</span> owner <span class=\"token operator\">=</span> user<span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":96,"column":1,"offset":2368},"end":{"line":99,"column":4,"offset":2401},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":":::ascii","position":{"start":{"line":101,"column":1,"offset":2405},"end":{"line":101,"column":9,"offset":2413},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2405},"end":{"line":101,"column":9,"offset":2413},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">┌─────┬──────────┐       ┌──────────────┐\n│user │ ref:123 ◆┼──┐    │  Object#123  │\n├─────┼──────────┤  ├───▶├──────┬───────┤\n│owner│ ref:123 ◆┼──┘    │ name │ \"Tom\" │\n└─────┴──────────┘       └──────┴───────┘</code></pre></div>","position":{"start":{"line":103,"column":1,"offset":2417},"end":{"line":109,"column":4,"offset":2640},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":":::","position":{"start":{"line":111,"column":1,"offset":2644},"end":{"line":111,"column":4,"offset":2647},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":2644},"end":{"line":111,"column":4,"offset":2647},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Assigning to ","position":{"start":{"line":113,"column":1,"offset":2651},"end":{"line":113,"column":14,"offset":2664},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">user.name</code>","position":{"start":{"line":113,"column":14,"offset":2664},"end":{"line":113,"column":25,"offset":2675},"indent":[]}},{"type":"text","value":" will therefore also \"change\" ","position":{"start":{"line":113,"column":25,"offset":2675},"end":{"line":113,"column":55,"offset":2705},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">owner.name</code>","position":{"start":{"line":113,"column":55,"offset":2705},"end":{"line":113,"column":67,"offset":2717},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":113,"column":67,"offset":2717},"end":{"line":113,"column":68,"offset":2718},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2651},"end":{"line":113,"column":68,"offset":2718},"indent":[]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nuser<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Joe'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> owner<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Joe, Joe</span></code></pre></div>","position":{"start":{"line":115,"column":1,"offset":2722},"end":{"line":120,"column":4,"offset":2806},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":":::ascii","position":{"start":{"line":122,"column":1,"offset":2810},"end":{"line":122,"column":9,"offset":2818},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":2810},"end":{"line":122,"column":9,"offset":2818},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">┌─────┬──────────┐       ┌──────────────┐\n│user │ ref:123 ◆┼──┐    │  Object#123  │\n├─────┼──────────┤  ├───▶├──────┬───────┤\n│owner│ ref:123 ◆┼──┘    │ name │ \"Joe\" │\n└─────┴──────────┘       └──────┴───────┘</code></pre></div>","position":{"start":{"line":124,"column":1,"offset":2822},"end":{"line":130,"column":4,"offset":3045},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":":::","position":{"start":{"line":132,"column":1,"offset":3049},"end":{"line":132,"column":4,"offset":3052},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":3049},"end":{"line":132,"column":4,"offset":3052},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"But assigning a new value to either ","position":{"start":{"line":134,"column":1,"offset":3056},"end":{"line":134,"column":37,"offset":3092},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">user</code>","position":{"start":{"line":134,"column":37,"offset":3092},"end":{"line":134,"column":43,"offset":3098},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":134,"column":43,"offset":3098},"end":{"line":134,"column":47,"offset":3102},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">owner</code>","position":{"start":{"line":134,"column":47,"offset":3102},"end":{"line":134,"column":54,"offset":3109},"indent":[]}},{"type":"text","value":" will result in only that\nvariable referring to the new value. The other variable will still refer to the\nsame value.","position":{"start":{"line":134,"column":54,"offset":3109},"end":{"line":136,"column":12,"offset":3228},"indent":[1,1]}}],"position":{"start":{"line":134,"column":1,"offset":3056},"end":{"line":136,"column":12,"offset":3228},"indent":[1,1]}},{"type":"html","lang":"js","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//</span>\nowner <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Kim'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":138,"column":1,"offset":3232},"end":{"line":141,"column":4,"offset":3272},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":":::ascii","position":{"start":{"line":143,"column":1,"offset":3276},"end":{"line":143,"column":9,"offset":3284},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":3276},"end":{"line":143,"column":9,"offset":3284},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">                         ┌──────────────┐\n                         │  Object#123  │\n                    ┌───▶├──────┬───────┤\n┌─────┬──────────┐  │    │ name │ \"Joe\" │\n│user │ ref:123 ◆┼──┘    └──────┴───────┘\n├─────┼──────────┤\n│owner│ ref:456 ◆┼──┐    ┌──────────────┐\n└─────┴──────────┘  │    │  Object#456  │\n                    └───▶├──────┬───────┤\n                         │ name │ \"Kim\" │\n                         └──────┴───────┘</code></pre></div>","position":{"start":{"line":145,"column":1,"offset":3288},"end":{"line":157,"column":4,"offset":3746},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":":::","position":{"start":{"line":159,"column":1,"offset":3750},"end":{"line":159,"column":4,"offset":3753},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":3750},"end":{"line":159,"column":4,"offset":3753},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":161,"column":1,"offset":3757},"end":{"line":161,"column":4,"offset":3760},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The JavaScript standard defines a couple of ","position":{"start":{"line":163,"column":1,"offset":3764},"end":{"line":163,"column":45,"offset":3808},"indent":[]}},{"type":"linkReference","identifier":"built-in objects","label":"built-in objects","referenceType":"collapsed","children":[{"type":"text","value":"built-in objects","position":{"start":{"line":163,"column":46,"offset":3809},"end":{"line":163,"column":62,"offset":3825},"indent":[]}}],"position":{"start":{"line":163,"column":45,"offset":3808},"end":{"line":163,"column":65,"offset":3828},"indent":[]}},{"type":"text","value":" with additional\nproperties and special internal behavior, must notably ","position":{"start":{"line":163,"column":65,"offset":3828},"end":{"line":164,"column":56,"offset":3901},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"arrays","position":{"start":{"line":164,"column":57,"offset":3902},"end":{"line":164,"column":63,"offset":3908},"indent":[]}}],"position":{"start":{"line":164,"column":56,"offset":3901},"end":{"line":164,"column":64,"offset":3909},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":164,"column":64,"offset":3909},"end":{"line":165,"column":1,"offset":3915},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"functions","position":{"start":{"line":165,"column":2,"offset":3916},"end":{"line":165,"column":11,"offset":3925},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":3915},"end":{"line":165,"column":12,"offset":3926},"indent":[]}},{"type":"text","value":", which are explained in the next slides.","position":{"start":{"line":165,"column":12,"offset":3926},"end":{"line":165,"column":53,"offset":3967},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3764},"end":{"line":165,"column":53,"offset":3967},"indent":[1,1]}},{"type":"definition","identifier":"built-in objects","label":"built-in objects","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects","position":{"start":{"line":167,"column":1,"offset":3971},"end":{"line":167,"column":101,"offset":4071},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":168,"column":1,"offset":4073}}}}