{"expireTime":9007200911873656000,"key":"transformer-remark-markdown-html-ast-0dac6bd01c6f6bbb0e44121b7e3bd89f-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[]: # Language: markdown\n[]: # Path: src\\pages\\docs\\python\\length-part3.md</code></pre></div>","position":{"start":{"line":5,"column":1,"offset":12},"end":{"line":6,"column":54,"offset":95}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Classes","position":{"start":{"line":9,"column":3,"offset":103},"end":{"line":9,"column":10,"offset":110}}}],"position":{"start":{"line":9,"column":1,"offset":101},"end":{"line":9,"column":12,"offset":112}}}],"position":{"start":{"line":9,"column":1,"offset":101},"end":{"line":9,"column":12,"offset":112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Classes are a vital component of object-oriented programming. When creating a class, you must use the ","position":{"start":{"line":11,"column":1,"offset":116},"end":{"line":11,"column":103,"offset":218}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":11,"column":103,"offset":218},"end":{"line":11,"column":110,"offset":225}}},{"type":"text","value":" keyword. Other elements are then nested in the class. Here is an example of a Python class.","position":{"start":{"line":11,"column":110,"offset":225},"end":{"line":11,"column":202,"offset":317}}}],"position":{"start":{"line":11,"column":1,"offset":116},"end":{"line":11,"column":202,"offset":317}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Farmer</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># a class with the name farmer</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">\"John\"</span> <span class=\"token comment\"># A variable</span>\n    produce <span class=\"token operator\">=</span> <span class=\"token string\">\"1000kgs\"</span> <span class=\"token comment\"># A variable</span>\n\nfarmer <span class=\"token operator\">=</span> Farmer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#instatiating the class as an object.</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>farmer<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\"># accessing the properties of the Farmer class.</span></code></pre></div>","position":{"start":{"line":13,"column":1,"offset":321},"end":{"line":20,"column":4,"offset":578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Classes can help as group things with similar characteristics. We can also assign values to class variables using the ","position":{"start":{"line":22,"column":1,"offset":582},"end":{"line":22,"column":119,"offset":700}}},{"type":"raw","value":"<code class=\"language-text\">init</code>","position":{"start":{"line":22,"column":119,"offset":700},"end":{"line":22,"column":125,"offset":706}}},{"type":"text","value":" function.","position":{"start":{"line":22,"column":125,"offset":706},"end":{"line":22,"column":135,"offset":716}}}],"position":{"start":{"line":22,"column":1,"offset":582},"end":{"line":22,"column":135,"offset":716}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Farmer</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> farmername<span class=\"token punctuation\">,</span> produce<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>farmername <span class=\"token operator\">=</span> farmername\n    self<span class=\"token punctuation\">.</span>produce <span class=\"token operator\">=</span> produce\n\nfarmer <span class=\"token operator\">=</span> Farmer<span class=\"token punctuation\">(</span><span class=\"token string\">\"Carry Sminson\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10,000kgs\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>farmer<span class=\"token punctuation\">.</span>farmername<span class=\"token punctuation\">,</span> farmer<span class=\"token punctuation\">.</span>produce<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":24,"column":1,"offset":720},"end":{"line":33,"column":4,"offset":948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the above ","position":{"start":{"line":35,"column":1,"offset":952},"end":{"line":35,"column":14,"offset":965}}},{"type":"raw","value":"<code class=\"language-text\">Farmer</code>","position":{"start":{"line":35,"column":14,"offset":965},"end":{"line":35,"column":22,"offset":973}}},{"type":"text","value":" class, the ","position":{"start":{"line":35,"column":22,"offset":973},"end":{"line":35,"column":34,"offset":985}}},{"type":"raw","value":"<code class=\"language-text\">self</code>","position":{"start":{"line":35,"column":34,"offset":985},"end":{"line":35,"column":40,"offset":991}}},{"type":"text","value":" keyword represents an instance of an object. In other words, it allows us to access the different methods and attributes defined in the class.","position":{"start":{"line":35,"column":40,"offset":991},"end":{"line":35,"column":183,"offset":1134}}}],"position":{"start":{"line":35,"column":1,"offset":952},"end":{"line":35,"column":183,"offset":1134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also declare a method in a class and use it later, as shown below.","position":{"start":{"line":37,"column":1,"offset":1138},"end":{"line":37,"column":75,"offset":1212}}}],"position":{"start":{"line":37,"column":1,"offset":1138},"end":{"line":37,"column":75,"offset":1212}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Farmer</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> farmername<span class=\"token punctuation\">,</span> produce<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    self<span class=\"token punctuation\">.</span>farmername <span class=\"token operator\">=</span> farmername\n    self<span class=\"token punctuation\">.</span>produce <span class=\"token operator\">=</span> produce\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">printDetails</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># Method</span>\n      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>farmername<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>produce<span class=\"token punctuation\">)</span>\n\nfarmer <span class=\"token operator\">=</span> Farmer<span class=\"token punctuation\">(</span><span class=\"token string\">\"Carry Sminson\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"10,000kgs\"</span><span class=\"token punctuation\">)</span>\n\nfarmer<span class=\"token punctuation\">.</span>printDetails<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":39,"column":1,"offset":1216},"end":{"line":51,"column":4,"offset":1507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Python syntax was made for readability, and easy editing. For example, the python language uses a ","position":{"start":{"line":53,"column":5,"offset":1515},"end":{"line":53,"column":103,"offset":1613}}},{"type":"raw","value":"<code class=\"language-text\">:</code>","position":{"start":{"line":53,"column":103,"offset":1613},"end":{"line":53,"column":106,"offset":1616}}},{"type":"text","value":" and indented code, while javascript and others generally use ","position":{"start":{"line":53,"column":106,"offset":1616},"end":{"line":53,"column":168,"offset":1678}}},{"type":"raw","value":"<code class=\"language-text\">{}</code>","position":{"start":{"line":53,"column":168,"offset":1678},"end":{"line":53,"column":172,"offset":1682}}},{"type":"text","value":" and indented code","position":{"start":{"line":53,"column":172,"offset":1682},"end":{"line":53,"column":190,"offset":1700}}}],"position":{"start":{"line":53,"column":1,"offset":1511},"end":{"line":53,"column":190,"offset":1700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lets create a ","position":{"start":{"line":55,"column":1,"offset":1704},"end":{"line":55,"column":15,"offset":1718}}},{"type":"element","tagName":"a","properties":{"href":"https://repl.it/languages/python3"},"children":[{"type":"text","value":"python 3","position":{"start":{"line":55,"column":16,"offset":1719},"end":{"line":55,"column":24,"offset":1727}}}],"position":{"start":{"line":55,"column":15,"offset":1718},"end":{"line":55,"column":60,"offset":1763}}},{"type":"text","value":" repl, and call it ","position":{"start":{"line":55,"column":60,"offset":1763},"end":{"line":55,"column":79,"offset":1782}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Hello World","position":{"start":{"line":55,"column":80,"offset":1783},"end":{"line":55,"column":91,"offset":1794}}}],"position":{"start":{"line":55,"column":79,"offset":1782},"end":{"line":55,"column":92,"offset":1795}}},{"type":"text","value":". Now you have a blank file called ","position":{"start":{"line":55,"column":92,"offset":1795},"end":{"line":55,"column":127,"offset":1830}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"main.py","position":{"start":{"line":55,"column":128,"offset":1831},"end":{"line":55,"column":135,"offset":1838}}}],"position":{"start":{"line":55,"column":127,"offset":1830},"end":{"line":55,"column":136,"offset":1839}}},{"type":"text","value":". Now let us write our first line of code:","position":{"start":{"line":55,"column":136,"offset":1839},"end":{"line":55,"column":178,"offset":1881}}}],"position":{"start":{"line":55,"column":1,"offset":1704},"end":{"line":55,"column":178,"offset":1881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"helloworld.py","position":{"start":{"line":57,"column":2,"offset":1886},"end":{"line":57,"column":15,"offset":1899}}}],"position":{"start":{"line":57,"column":1,"offset":1885},"end":{"line":57,"column":16,"offset":1900}}}],"position":{"start":{"line":57,"column":1,"offset":1885},"end":{"line":57,"column":16,"offset":1900}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello world!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":59,"column":1,"offset":1904},"end":{"line":61,"column":4,"offset":1941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Brian Kernighan actually wrote the first \"Hello, World!\" program as part of the documentation for the BCPL programming language developed by Martin Richards.","position":{"start":{"line":63,"column":3,"offset":1947},"end":{"line":63,"column":160,"offset":2104}}}],"position":{"start":{"line":63,"column":3,"offset":1947},"end":{"line":63,"column":160,"offset":2104}}},{"type":"text","value":"\n"}],"position":{"start":{"line":63,"column":1,"offset":1945},"end":{"line":63,"column":160,"offset":2104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, press the run button, which obviously runs the code. If you are not using replit, this will not work. You should research how to run a file with your text editor.","position":{"start":{"line":65,"column":1,"offset":2108},"end":{"line":65,"column":168,"offset":2275}}}],"position":{"start":{"line":65,"column":1,"offset":2108},"end":{"line":65,"column":168,"offset":2275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you look to your left at the console where hello world was just printed, you can see a ","position":{"start":{"line":67,"column":1,"offset":2279},"end":{"line":67,"column":91,"offset":2369}}},{"type":"raw","value":"<code class=\"language-text\">></code>","position":{"start":{"line":67,"column":91,"offset":2369},"end":{"line":67,"column":94,"offset":2372}}},{"type":"text","value":", ","position":{"start":{"line":67,"column":94,"offset":2372},"end":{"line":67,"column":96,"offset":2374}}},{"type":"raw","value":"<code class=\"language-text\">>>></code>","position":{"start":{"line":67,"column":96,"offset":2374},"end":{"line":67,"column":101,"offset":2379}}},{"type":"text","value":", or ","position":{"start":{"line":67,"column":101,"offset":2379},"end":{"line":67,"column":106,"offset":2384}}},{"type":"raw","value":"<code class=\"language-text\">$</code>","position":{"start":{"line":67,"column":106,"offset":2384},"end":{"line":67,"column":109,"offset":2387}}},{"type":"text","value":" depending on what you are using. After the prompt, try typing a line of code.","position":{"start":{"line":67,"column":109,"offset":2387},"end":{"line":67,"column":187,"offset":2465}}}],"position":{"start":{"line":67,"column":1,"offset":2279},"end":{"line":67,"column":187,"offset":2465}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Python <span class=\"token number\">3.6</span><span class=\"token number\">.1</span> <span class=\"token punctuation\">(</span>default<span class=\"token punctuation\">,</span> Jun <span class=\"token number\">21</span> <span class=\"token number\">2017</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">48</span><span class=\"token punctuation\">:</span><span class=\"token number\">35</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>GCC <span class=\"token number\">4.9</span><span class=\"token number\">.2</span><span class=\"token punctuation\">]</span> on linux\nType <span class=\"token string\">\"help\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"copyright\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"credits\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"license\"</span> <span class=\"token keyword\">for</span> more information<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Testing command line'</span><span class=\"token punctuation\">)</span>\nTesting command line\n<span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Are you sure this works?'</span><span class=\"token punctuation\">)</span>\nAre you sure this works?\n<span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":69,"column":1,"offset":2469},"end":{"line":78,"column":4,"offset":2745}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The command line allows you to execute single lines of code at a time. It is often used when trying out a new function or method in the language.","position":{"start":{"line":80,"column":1,"offset":2749},"end":{"line":80,"column":146,"offset":2894}}}],"position":{"start":{"line":80,"column":1,"offset":2749},"end":{"line":80,"column":146,"offset":2894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another cool thing that you can generally do with all languages, are comments. In python, a comment starts with a ","position":{"start":{"line":82,"column":1,"offset":2898},"end":{"line":82,"column":115,"offset":3012}}},{"type":"raw","value":"<code class=\"language-text\">#</code>","position":{"start":{"line":82,"column":115,"offset":3012},"end":{"line":82,"column":118,"offset":3015}}},{"type":"text","value":". The computer ignores all text starting after the ","position":{"start":{"line":82,"column":118,"offset":3015},"end":{"line":82,"column":169,"offset":3066}}},{"type":"raw","value":"<code class=\"language-text\">#</code>","position":{"start":{"line":82,"column":169,"offset":3066},"end":{"line":82,"column":172,"offset":3069}}},{"type":"text","value":".","position":{"start":{"line":82,"column":172,"offset":3069},"end":{"line":82,"column":173,"offset":3070}}}],"position":{"start":{"line":82,"column":1,"offset":2898},"end":{"line":82,"column":173,"offset":3070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"shortcom.py","position":{"start":{"line":84,"column":2,"offset":3075},"end":{"line":84,"column":13,"offset":3086}}}],"position":{"start":{"line":84,"column":1,"offset":3074},"end":{"line":84,"column":14,"offset":3087}}}],"position":{"start":{"line":84,"column":1,"offset":3074},"end":{"line":84,"column":14,"offset":3087}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Write some comments!</span></code></pre></div>","position":{"start":{"line":86,"column":1,"offset":3091},"end":{"line":88,"column":4,"offset":3129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you have a huge comment, do ","position":{"start":{"line":90,"column":1,"offset":3133},"end":{"line":90,"column":32,"offset":3164}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":90,"column":34,"offset":3166},"end":{"line":90,"column":37,"offset":3169}}}],"position":{"start":{"line":90,"column":32,"offset":3164},"end":{"line":90,"column":39,"offset":3171}}},{"type":"text","value":" comment all the 350 lines, just put ","position":{"start":{"line":90,"column":39,"offset":3171},"end":{"line":90,"column":76,"offset":3208}}},{"type":"raw","value":"<code class=\"language-text\">'''</code>","position":{"start":{"line":90,"column":76,"offset":3208},"end":{"line":90,"column":81,"offset":3213}}},{"type":"text","value":" before it, and ","position":{"start":{"line":90,"column":81,"offset":3213},"end":{"line":90,"column":97,"offset":3229}}},{"type":"raw","value":"<code class=\"language-text\">'''</code>","position":{"start":{"line":90,"column":97,"offset":3229},"end":{"line":90,"column":102,"offset":3234}}},{"type":"text","value":" at the end. Technically, this is not a comment but a string, but the computer still ignores it, so we will use it.","position":{"start":{"line":90,"column":102,"offset":3234},"end":{"line":90,"column":217,"offset":3349}}}],"position":{"start":{"line":90,"column":1,"offset":3133},"end":{"line":90,"column":217,"offset":3349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"longcom.py","position":{"start":{"line":92,"column":2,"offset":3354},"end":{"line":92,"column":12,"offset":3364}}}],"position":{"start":{"line":92,"column":1,"offset":3353},"end":{"line":92,"column":13,"offset":3365}}}],"position":{"start":{"line":92,"column":1,"offset":3353},"end":{"line":92,"column":13,"offset":3365}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">'''\nDear PYer,\nI am confused about how you said you could use triple quotes to make\nSUPER\nLONG\nCOMMENTS\n!\n\nI am wondering if this is true,\nand if so,\nI am wondering if this is correct.\n\nCould you help me with this?\n\nThanks,\nRandom guy who used your tutorial.\n'''</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Testing'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":94,"column":1,"offset":3369},"end":{"line":113,"column":4,"offset":3681}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Unlike many other languages, there is no ","position":{"start":{"line":115,"column":1,"offset":3685},"end":{"line":115,"column":42,"offset":3726}}},{"type":"raw","value":"<code class=\"language-text\">var</code>","position":{"start":{"line":115,"column":42,"offset":3726},"end":{"line":115,"column":47,"offset":3731}}},{"type":"text","value":", ","position":{"start":{"line":115,"column":47,"offset":3731},"end":{"line":115,"column":49,"offset":3733}}},{"type":"raw","value":"<code class=\"language-text\">let</code>","position":{"start":{"line":115,"column":49,"offset":3733},"end":{"line":115,"column":54,"offset":3738}}},{"type":"text","value":", or ","position":{"start":{"line":115,"column":54,"offset":3738},"end":{"line":115,"column":59,"offset":3743}}},{"type":"raw","value":"<code class=\"language-text\">const</code>","position":{"start":{"line":115,"column":59,"offset":3743},"end":{"line":115,"column":66,"offset":3750}}},{"type":"text","value":" to declare a variable in python. You simply go ","position":{"start":{"line":115,"column":66,"offset":3750},"end":{"line":115,"column":114,"offset":3798}}},{"type":"raw","value":"<code class=\"language-text\">name = 'value'</code>","position":{"start":{"line":115,"column":114,"offset":3798},"end":{"line":115,"column":130,"offset":3814}}},{"type":"text","value":".","position":{"start":{"line":115,"column":130,"offset":3814},"end":{"line":115,"column":131,"offset":3815}}}],"position":{"start":{"line":115,"column":1,"offset":3685},"end":{"line":115,"column":131,"offset":3815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"vars1.py","position":{"start":{"line":117,"column":2,"offset":3820},"end":{"line":117,"column":10,"offset":3828}}}],"position":{"start":{"line":117,"column":1,"offset":3819},"end":{"line":117,"column":11,"offset":3829}}}],"position":{"start":{"line":117,"column":1,"offset":3819},"end":{"line":117,"column":11,"offset":3829}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\ny <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\nz <span class=\"token operator\">=</span> x<span class=\"token operator\">*</span>y <span class=\"token comment\"># 35</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span> <span class=\"token comment\"># => 35</span></code></pre></div>","position":{"start":{"line":119,"column":1,"offset":3833},"end":{"line":124,"column":4,"offset":3893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Remember, there is a difference between integers and strings. ","position":{"start":{"line":126,"column":1,"offset":3897},"end":{"line":126,"column":63,"offset":3959}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Remember: String = ","position":{"start":{"line":126,"column":64,"offset":3960},"end":{"line":126,"column":83,"offset":3979}}},{"type":"raw","value":"<code class=\"language-text\">\"\"</code>","position":{"start":{"line":126,"column":83,"offset":3979},"end":{"line":126,"column":87,"offset":3983}}},{"type":"text","value":".","position":{"start":{"line":126,"column":87,"offset":3983},"end":{"line":126,"column":88,"offset":3984}}}],"position":{"start":{"line":126,"column":63,"offset":3959},"end":{"line":126,"column":89,"offset":3985}}},{"type":"text","value":" To convert between these two, you can put an int in a ","position":{"start":{"line":126,"column":89,"offset":3985},"end":{"line":126,"column":144,"offset":4040}}},{"type":"raw","value":"<code class=\"language-text\">str()</code>","position":{"start":{"line":126,"column":144,"offset":4040},"end":{"line":126,"column":151,"offset":4047}}},{"type":"text","value":" function, and a string in a ","position":{"start":{"line":126,"column":151,"offset":4047},"end":{"line":126,"column":180,"offset":4076}}},{"type":"raw","value":"<code class=\"language-text\">int()</code>","position":{"start":{"line":126,"column":180,"offset":4076},"end":{"line":126,"column":187,"offset":4083}}},{"type":"text","value":" function. There is also a less used one, called a float. Mainly, these are integers with decimals. Change them using the ","position":{"start":{"line":126,"column":187,"offset":4083},"end":{"line":126,"column":309,"offset":4205}}},{"type":"raw","value":"<code class=\"language-text\">float()</code>","position":{"start":{"line":126,"column":309,"offset":4205},"end":{"line":126,"column":318,"offset":4214}}},{"type":"text","value":" command.","position":{"start":{"line":126,"column":318,"offset":4214},"end":{"line":126,"column":327,"offset":4223}}}],"position":{"start":{"line":126,"column":1,"offset":3897},"end":{"line":126,"column":327,"offset":4223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"vars2.py","position":{"start":{"line":128,"column":2,"offset":4228},"end":{"line":128,"column":10,"offset":4236}}}],"position":{"start":{"line":128,"column":1,"offset":4227},"end":{"line":128,"column":11,"offset":4237}}}],"position":{"start":{"line":128,"column":1,"offset":4227},"end":{"line":128,"column":11,"offset":4237}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> <span class=\"token string\">'5'</span>\nb <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x = '</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> <span class=\"token string\">'; b = '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">';'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># => x = 5; b = 5;</span></code></pre></div>","position":{"start":{"line":130,"column":1,"offset":4241},"end":{"line":136,"column":4,"offset":4355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of using the ","position":{"start":{"line":138,"column":1,"offset":4359},"end":{"line":138,"column":22,"offset":4380}}},{"type":"raw","value":"<code class=\"language-text\">,</code>","position":{"start":{"line":138,"column":22,"offset":4380},"end":{"line":138,"column":25,"offset":4383}}},{"type":"text","value":" in the print function, you can put a ","position":{"start":{"line":138,"column":25,"offset":4383},"end":{"line":138,"column":63,"offset":4421}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":138,"column":63,"offset":4421},"end":{"line":138,"column":66,"offset":4424}}},{"type":"text","value":" to combine the variables and string.","position":{"start":{"line":138,"column":66,"offset":4424},"end":{"line":138,"column":103,"offset":4461}}}],"position":{"start":{"line":138,"column":1,"offset":4359},"end":{"line":138,"column":103,"offset":4461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are many operators in python:","position":{"start":{"line":140,"column":1,"offset":4465},"end":{"line":140,"column":36,"offset":4500}}}],"position":{"start":{"line":140,"column":1,"offset":4465},"end":{"line":140,"column":36,"offset":4500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":142,"column":5,"offset":4508},"end":{"line":142,"column":8,"offset":4511}}}],"position":{"start":{"line":142,"column":1,"offset":4504},"end":{"line":142,"column":8,"offset":4511}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":143,"column":5,"offset":4517},"end":{"line":143,"column":8,"offset":4520}}}],"position":{"start":{"line":143,"column":1,"offset":4513},"end":{"line":143,"column":8,"offset":4520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">/</code>","position":{"start":{"line":144,"column":5,"offset":4526},"end":{"line":144,"column":8,"offset":4529}}}],"position":{"start":{"line":144,"column":1,"offset":4522},"end":{"line":144,"column":8,"offset":4529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":145,"column":5,"offset":4535},"end":{"line":145,"column":8,"offset":4538}}},{"type":"text","value":" These operators are the same in most languages, and allow for addition, subtraction, division, and multiplicaiton. Now, we can look at a few more complicated ones:","position":{"start":{"line":145,"column":8,"offset":4538},"end":{"line":145,"column":172,"offset":4702}}}],"position":{"start":{"line":145,"column":1,"offset":4531},"end":{"line":145,"column":172,"offset":4702}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":146,"column":5,"offset":4708},"end":{"line":146,"column":8,"offset":4711}}}],"position":{"start":{"line":146,"column":1,"offset":4704},"end":{"line":146,"column":8,"offset":4711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">//</code>","position":{"start":{"line":147,"column":5,"offset":4717},"end":{"line":147,"column":9,"offset":4721}}}],"position":{"start":{"line":147,"column":1,"offset":4713},"end":{"line":147,"column":9,"offset":4721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">**</code>","position":{"start":{"line":148,"column":5,"offset":4727},"end":{"line":148,"column":9,"offset":4731}}}],"position":{"start":{"line":148,"column":1,"offset":4723},"end":{"line":148,"column":9,"offset":4731}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">+=</code>","position":{"start":{"line":149,"column":5,"offset":4737},"end":{"line":149,"column":9,"offset":4741}}}],"position":{"start":{"line":149,"column":1,"offset":4733},"end":{"line":149,"column":9,"offset":4741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">-=</code>","position":{"start":{"line":150,"column":5,"offset":4747},"end":{"line":150,"column":9,"offset":4751}}}],"position":{"start":{"line":150,"column":1,"offset":4743},"end":{"line":150,"column":9,"offset":4751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">/=</code>","position":{"start":{"line":151,"column":5,"offset":4757},"end":{"line":151,"column":9,"offset":4761}}}],"position":{"start":{"line":151,"column":1,"offset":4753},"end":{"line":151,"column":9,"offset":4761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">*=</code>","position":{"start":{"line":152,"column":5,"offset":4767},"end":{"line":152,"column":9,"offset":4771}}},{"type":"text","value":" Research these if you want to find out more…","position":{"start":{"line":152,"column":9,"offset":4771},"end":{"line":152,"column":54,"offset":4816}}}],"position":{"start":{"line":152,"column":1,"offset":4763},"end":{"line":152,"column":54,"offset":4816}}},{"type":"text","value":"\n"}],"position":{"start":{"line":142,"column":1,"offset":4504},"end":{"line":152,"column":54,"offset":4816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"simpleops.py","position":{"start":{"line":154,"column":2,"offset":4821},"end":{"line":154,"column":14,"offset":4833}}}],"position":{"start":{"line":154,"column":1,"offset":4820},"end":{"line":154,"column":15,"offset":4834}}}],"position":{"start":{"line":154,"column":1,"offset":4820},"end":{"line":154,"column":15,"offset":4834}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\na <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\na <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\na <span class=\"token operator\">=</span> x <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\na <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":156,"column":1,"offset":4838},"end":{"line":162,"column":4,"offset":4903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You should already know everything shown above, as it is similar to other languages. If you continue down, you will see more complicated ones.","position":{"start":{"line":164,"column":1,"offset":4907},"end":{"line":164,"column":143,"offset":5049}}}],"position":{"start":{"line":164,"column":1,"offset":4907},"end":{"line":164,"column":143,"offset":5049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"complexop.py","position":{"start":{"line":166,"column":2,"offset":5054},"end":{"line":166,"column":14,"offset":5066}}}],"position":{"start":{"line":166,"column":1,"offset":5053},"end":{"line":166,"column":15,"offset":5067}}}],"position":{"start":{"line":166,"column":1,"offset":5053},"end":{"line":166,"column":15,"offset":5067}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">a <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\na <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\na <span class=\"token operator\">*=</span> <span class=\"token number\">2</span>\na <span class=\"token operator\">/=</span> <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":168,"column":1,"offset":5071},"end":{"line":173,"column":4,"offset":5117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ones above are to edit the current value of the variable.","position":{"start":{"line":175,"column":1,"offset":5121},"end":{"line":175,"column":62,"offset":5182}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":175,"column":62,"offset":5182},"end":{"line":176,"column":1,"offset":5186}}},{"type":"text","value":"\n"},{"type":"text","value":"Sorry to JS users, as there is no ","position":{"start":{"line":176,"column":1,"offset":5186},"end":{"line":176,"column":35,"offset":5220}}},{"type":"raw","value":"<code class=\"language-text\">i++;</code>","position":{"start":{"line":176,"column":35,"offset":5220},"end":{"line":176,"column":41,"offset":5226}}},{"type":"text","value":" or anything.","position":{"start":{"line":176,"column":41,"offset":5226},"end":{"line":176,"column":54,"offset":5239}}}],"position":{"start":{"line":175,"column":1,"offset":5121},"end":{"line":176,"column":54,"offset":5239}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Fun Fact:","position":{"start":{"line":178,"column":3,"offset":5245},"end":{"line":178,"column":12,"offset":5254}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":178,"column":12,"offset":5254},"end":{"line":179,"column":3,"offset":5260}}},{"type":"text","value":"\n"},{"type":"text","value":"The python language was named after Monty Python.","position":{"start":{"line":179,"column":3,"offset":5260},"end":{"line":179,"column":52,"offset":5309}}}],"position":{"start":{"line":178,"column":3,"offset":5245},"end":{"line":179,"column":52,"offset":5309}}},{"type":"text","value":"\n"}],"position":{"start":{"line":178,"column":1,"offset":5243},"end":{"line":179,"column":52,"offset":5309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you really want to know about the others, view ","position":{"start":{"line":181,"column":1,"offset":5313},"end":{"line":181,"column":51,"offset":5363}}},{"type":"element","tagName":"a","properties":{"href":"https://www.tutorialspoint.com/python/python_basic_operators.htm"},"children":[{"type":"text","value":"Py Operators","position":{"start":{"line":181,"column":52,"offset":5364},"end":{"line":181,"column":64,"offset":5376}}}],"position":{"start":{"line":181,"column":51,"offset":5363},"end":{"line":181,"column":131,"offset":5443}}}],"position":{"start":{"line":181,"column":1,"offset":5313},"end":{"line":181,"column":131,"offset":5443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Like the title?","position":{"start":{"line":183,"column":1,"offset":5447},"end":{"line":183,"column":16,"offset":5462}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":183,"column":16,"offset":5462},"end":{"line":184,"column":1,"offset":5466}}},{"type":"text","value":"\n"},{"type":"text","value":"Anyways, a ","position":{"start":{"line":184,"column":1,"offset":5466},"end":{"line":184,"column":12,"offset":5477}}},{"type":"raw","value":"<code class=\"language-text\">'</code>","position":{"start":{"line":184,"column":12,"offset":5477},"end":{"line":184,"column":15,"offset":5480}}},{"type":"text","value":" and a ","position":{"start":{"line":184,"column":15,"offset":5480},"end":{"line":184,"column":22,"offset":5487}}},{"type":"raw","value":"<code class=\"language-text\">\"</code>","position":{"start":{"line":184,"column":22,"offset":5487},"end":{"line":184,"column":25,"offset":5490}}},{"type":"text","value":" both indicate a string, but ","position":{"start":{"line":184,"column":25,"offset":5490},"end":{"line":184,"column":54,"offset":5519}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"do not combine them!","position":{"start":{"line":184,"column":56,"offset":5521},"end":{"line":184,"column":76,"offset":5541}}}],"position":{"start":{"line":184,"column":54,"offset":5519},"end":{"line":184,"column":78,"offset":5543}}}],"position":{"start":{"line":183,"column":1,"offset":5447},"end":{"line":184,"column":78,"offset":5543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"quotes.py","position":{"start":{"line":186,"column":2,"offset":5548},"end":{"line":186,"column":11,"offset":5557}}}],"position":{"start":{"line":186,"column":1,"offset":5547},"end":{"line":186,"column":12,"offset":5558}}}],"position":{"start":{"line":186,"column":1,"offset":5547},"end":{"line":186,"column":12,"offset":5558}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span> <span class=\"token comment\"># Good</span>\nx <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span> <span class=\"token comment\"># Good</span>\nx <span class=\"token operator\">=</span> \"hello' <span class=\"token comment\"># ERRORRR!!!</span></code></pre></div>","position":{"start":{"line":188,"column":1,"offset":5562},"end":{"line":192,"column":4,"offset":5642}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"slicing.py","position":{"start":{"line":194,"column":2,"offset":5647},"end":{"line":194,"column":12,"offset":5657}}}],"position":{"start":{"line":194,"column":1,"offset":5646},"end":{"line":194,"column":13,"offset":5658}}}],"position":{"start":{"line":194,"column":1,"offset":5646},"end":{"line":194,"column":13,"offset":5658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"String Slicing","position":{"start":{"line":196,"column":3,"offset":5664},"end":{"line":196,"column":17,"offset":5678}}}],"position":{"start":{"line":196,"column":1,"offset":5662},"end":{"line":196,"column":19,"offset":5680}}}],"position":{"start":{"line":196,"column":1,"offset":5662},"end":{"line":196,"column":19,"offset":5680}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can look at only certain parts of the string by slicing it, using ","position":{"start":{"line":198,"column":1,"offset":5684},"end":{"line":198,"column":71,"offset":5754}}},{"type":"raw","value":"<code class=\"language-text\">[num:num]</code>","position":{"start":{"line":198,"column":71,"offset":5754},"end":{"line":198,"column":82,"offset":5765}}},{"type":"text","value":".","position":{"start":{"line":198,"column":82,"offset":5765},"end":{"line":198,"column":83,"offset":5766}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":198,"column":83,"offset":5766},"end":{"line":199,"column":1,"offset":5770}}},{"type":"text","value":"\n"},{"type":"text","value":"The first number stands for how far in you go from the front, and the second stands for how far in you go from the back.","position":{"start":{"line":199,"column":1,"offset":5770},"end":{"line":199,"column":121,"offset":5890}}}],"position":{"start":{"line":198,"column":1,"offset":5684},"end":{"line":199,"column":121,"offset":5890}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token string\">'Hello everybody!'</span>\nx<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 'e'</span>\nx<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># '!'</span>\nx<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># ' '</span>\nx<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 'ello everybody!'</span>\nx<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 'Hello everybod'</span>\nx<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 'llo everyb'</span></code></pre></div>","position":{"start":{"line":201,"column":1,"offset":5894},"end":{"line":209,"column":4,"offset":6047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Methods and Functions","position":{"start":{"line":211,"column":3,"offset":6053},"end":{"line":211,"column":24,"offset":6074}}}],"position":{"start":{"line":211,"column":1,"offset":6051},"end":{"line":211,"column":26,"offset":6076}}}],"position":{"start":{"line":211,"column":1,"offset":6051},"end":{"line":211,"column":26,"offset":6076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is a list of functions/methods we will go over:","position":{"start":{"line":213,"column":1,"offset":6080},"end":{"line":213,"column":53,"offset":6132}}}],"position":{"start":{"line":213,"column":1,"offset":6080},"end":{"line":213,"column":53,"offset":6132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">.strip()</code>","position":{"start":{"line":215,"column":5,"offset":6140},"end":{"line":215,"column":15,"offset":6150}}}],"position":{"start":{"line":215,"column":1,"offset":6136},"end":{"line":215,"column":15,"offset":6150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">len()</code>","position":{"start":{"line":216,"column":5,"offset":6156},"end":{"line":216,"column":12,"offset":6163}}}],"position":{"start":{"line":216,"column":1,"offset":6152},"end":{"line":216,"column":12,"offset":6163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">.lower()</code>","position":{"start":{"line":217,"column":5,"offset":6169},"end":{"line":217,"column":15,"offset":6179}}}],"position":{"start":{"line":217,"column":1,"offset":6165},"end":{"line":217,"column":15,"offset":6179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">.upper()</code>","position":{"start":{"line":218,"column":5,"offset":6185},"end":{"line":218,"column":15,"offset":6195}}}],"position":{"start":{"line":218,"column":1,"offset":6181},"end":{"line":218,"column":15,"offset":6195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">.replace()</code>","position":{"start":{"line":219,"column":5,"offset":6201},"end":{"line":219,"column":17,"offset":6213}}}],"position":{"start":{"line":219,"column":1,"offset":6197},"end":{"line":219,"column":17,"offset":6213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">.split()</code>","position":{"start":{"line":220,"column":5,"offset":6219},"end":{"line":220,"column":15,"offset":6229}}}],"position":{"start":{"line":220,"column":1,"offset":6215},"end":{"line":220,"column":15,"offset":6229}}},{"type":"text","value":"\n"}],"position":{"start":{"line":215,"column":1,"offset":6136},"end":{"line":220,"column":15,"offset":6229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I will make you try these out yourself. See if you can figure out how they work.","position":{"start":{"line":222,"column":1,"offset":6233},"end":{"line":222,"column":81,"offset":6313}}}],"position":{"start":{"line":222,"column":1,"offset":6233},"end":{"line":222,"column":81,"offset":6313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"strings.py","position":{"start":{"line":224,"column":2,"offset":6318},"end":{"line":224,"column":12,"offset":6328}}}],"position":{"start":{"line":224,"column":1,"offset":6317},"end":{"line":224,"column":13,"offset":6329}}}],"position":{"start":{"line":224,"column":1,"offset":6317},"end":{"line":224,"column":13,"offset":6329}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token string\">\" Testing, testing, testing, testing       \"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'runn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":226,"column":1,"offset":6333},"end":{"line":234,"column":4,"offset":6521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Good luck, see you when you come back!","position":{"start":{"line":236,"column":1,"offset":6525},"end":{"line":236,"column":39,"offset":6563}}}],"position":{"start":{"line":236,"column":1,"offset":6525},"end":{"line":236,"column":39,"offset":6563}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Input is a function that gathers input entered from the user in the command line. It takes one optional parameter, which is the users prompt.","position":{"start":{"line":238,"column":1,"offset":6567},"end":{"line":238,"column":142,"offset":6708}}}],"position":{"start":{"line":238,"column":1,"offset":6567},"end":{"line":238,"column":142,"offset":6708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inp.py","position":{"start":{"line":240,"column":2,"offset":6713},"end":{"line":240,"column":8,"offset":6719}}}],"position":{"start":{"line":240,"column":1,"offset":6712},"end":{"line":240,"column":9,"offset":6720}}}],"position":{"start":{"line":240,"column":1,"offset":6712},"end":{"line":240,"column":9,"offset":6720}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Type something: '</span><span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Here is what you said: '</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":242,"column":1,"offset":6724},"end":{"line":246,"column":4,"offset":6815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you wanted to make it smaller, and look neater to the user, you could do…","position":{"start":{"line":248,"column":1,"offset":6819},"end":{"line":248,"column":77,"offset":6895}}}],"position":{"start":{"line":248,"column":1,"offset":6819},"end":{"line":248,"column":77,"offset":6895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inp2.py","position":{"start":{"line":250,"column":2,"offset":6900},"end":{"line":250,"column":9,"offset":6907}}}],"position":{"start":{"line":250,"column":1,"offset":6899},"end":{"line":250,"column":10,"offset":6908}}}],"position":{"start":{"line":250,"column":1,"offset":6899},"end":{"line":250,"column":10,"offset":6908}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Here is what you said: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Type something: '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":252,"column":1,"offset":6912},"end":{"line":254,"column":4,"offset":6987}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Running:","position":{"start":{"line":256,"column":1,"offset":6991},"end":{"line":256,"column":9,"offset":6999}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":256,"column":9,"offset":6999},"end":{"line":257,"column":1,"offset":7003}}},{"type":"text","value":"\n"},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inp.py","position":{"start":{"line":257,"column":2,"offset":7004},"end":{"line":257,"column":8,"offset":7010}}}],"position":{"start":{"line":257,"column":1,"offset":7003},"end":{"line":257,"column":9,"offset":7011}}}],"position":{"start":{"line":256,"column":1,"offset":6991},"end":{"line":257,"column":9,"offset":7011}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Type something<span class=\"token punctuation\">:</span>\nHello World\nHere <span class=\"token keyword\">is</span> what you said<span class=\"token punctuation\">:</span> Hello World</code></pre></div>","position":{"start":{"line":259,"column":1,"offset":7015},"end":{"line":263,"column":4,"offset":7095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inp2.py","position":{"start":{"line":265,"column":2,"offset":7100},"end":{"line":265,"column":9,"offset":7107}}}],"position":{"start":{"line":265,"column":1,"offset":7099},"end":{"line":265,"column":10,"offset":7108}}}],"position":{"start":{"line":265,"column":1,"offset":7099},"end":{"line":265,"column":10,"offset":7108}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Type something<span class=\"token punctuation\">:</span> Hello World\nHere <span class=\"token keyword\">is</span> what you said<span class=\"token punctuation\">:</span> Hello World</code></pre></div>","position":{"start":{"line":267,"column":1,"offset":7112},"end":{"line":270,"column":4,"offset":7191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python has created a lot of functions that are located in other .py files. You need to import these ","position":{"start":{"line":272,"column":1,"offset":7195},"end":{"line":272,"column":101,"offset":7295}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"modules","position":{"start":{"line":272,"column":103,"offset":7297},"end":{"line":272,"column":110,"offset":7304}}}],"position":{"start":{"line":272,"column":101,"offset":7295},"end":{"line":272,"column":112,"offset":7306}}},{"type":"text","value":" to gain access to the,, You may wonder why python did this. The purpose of separate modules is to make python faster. Instead of storing millions and millions of functions, , it only needs a few basic ones. To import a module, you must write ","position":{"start":{"line":272,"column":112,"offset":7306},"end":{"line":272,"column":355,"offset":7549}}},{"type":"raw","value":"<code class=\"language-text\">input &lt;modulename></code>","position":{"start":{"line":272,"column":355,"offset":7549},"end":{"line":272,"column":375,"offset":7569}}},{"type":"text","value":". Do not add the .py extension to the file name. In this example , we will be using a python created module named random.","position":{"start":{"line":272,"column":375,"offset":7569},"end":{"line":272,"column":496,"offset":7690}}}],"position":{"start":{"line":272,"column":1,"offset":7195},"end":{"line":272,"column":496,"offset":7690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"module.py","position":{"start":{"line":274,"column":2,"offset":7695},"end":{"line":274,"column":11,"offset":7704}}}],"position":{"start":{"line":274,"column":1,"offset":7694},"end":{"line":274,"column":12,"offset":7705}}}],"position":{"start":{"line":274,"column":1,"offset":7694},"end":{"line":274,"column":12,"offset":7705}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random</code></pre></div>","position":{"start":{"line":276,"column":1,"offset":7709},"end":{"line":278,"column":4,"offset":7738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, I have access to all functions in the random.py file. To access a specific function in the module, you would do ","position":{"start":{"line":280,"column":1,"offset":7742},"end":{"line":280,"column":118,"offset":7859}}},{"type":"raw","value":"<code class=\"language-text\">&lt;module>.&lt;function></code>","position":{"start":{"line":280,"column":118,"offset":7859},"end":{"line":280,"column":139,"offset":7880}}},{"type":"text","value":". For example:","position":{"start":{"line":280,"column":139,"offset":7880},"end":{"line":280,"column":153,"offset":7894}}}],"position":{"start":{"line":280,"column":1,"offset":7742},"end":{"line":280,"column":153,"offset":7894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"module2.py","position":{"start":{"line":282,"column":2,"offset":7899},"end":{"line":282,"column":12,"offset":7909}}}],"position":{"start":{"line":282,"column":1,"offset":7898},"end":{"line":282,"column":13,"offset":7910}}}],"position":{"start":{"line":282,"column":1,"offset":7898},"end":{"line":282,"column":13,"offset":7910}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># Prints a random number between 3 and 5</span></code></pre></div>","position":{"start":{"line":284,"column":1,"offset":7914},"end":{"line":287,"column":4,"offset":8012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Pro Tip:","position":{"start":{"line":289,"column":3,"offset":8018},"end":{"line":289,"column":11,"offset":8026}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":289,"column":11,"offset":8026},"end":{"line":290,"column":3,"offset":8032}}},{"type":"text","value":"\n"},{"type":"text","value":"Do ","position":{"start":{"line":290,"column":3,"offset":8032},"end":{"line":290,"column":6,"offset":8035}}},{"type":"raw","value":"<code class=\"language-text\">from random import randint</code>","position":{"start":{"line":290,"column":6,"offset":8035},"end":{"line":290,"column":34,"offset":8063}}},{"type":"text","value":" to not have to do ","position":{"start":{"line":290,"column":34,"offset":8063},"end":{"line":290,"column":53,"offset":8082}}},{"type":"raw","value":"<code class=\"language-text\">random.randint()</code>","position":{"start":{"line":290,"column":53,"offset":8082},"end":{"line":290,"column":71,"offset":8100}}},{"type":"text","value":", just ","position":{"start":{"line":290,"column":71,"offset":8100},"end":{"line":290,"column":78,"offset":8107}}},{"type":"raw","value":"<code class=\"language-text\">randint()</code>","position":{"start":{"line":290,"column":78,"offset":8107},"end":{"line":290,"column":89,"offset":8118}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":290,"column":89,"offset":8118},"end":{"line":291,"column":3,"offset":8124}}},{"type":"text","value":"\n"},{"type":"text","value":"To import all functions from a module, you could do ","position":{"start":{"line":291,"column":3,"offset":8124},"end":{"line":291,"column":55,"offset":8176}}},{"type":"raw","value":"<code class=\"language-text\">from random import *</code>","position":{"start":{"line":291,"column":55,"offset":8176},"end":{"line":291,"column":77,"offset":8198}}}],"position":{"start":{"line":289,"column":3,"offset":8018},"end":{"line":291,"column":77,"offset":8198}}},{"type":"text","value":"\n"}],"position":{"start":{"line":289,"column":1,"offset":8016},"end":{"line":291,"column":77,"offset":8198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Loops allow you to repeat code over and over again. This is useful if you want to print Hi with a delay of one second 100 times.","position":{"start":{"line":293,"column":1,"offset":8202},"end":{"line":293,"column":129,"offset":8330}}}],"position":{"start":{"line":293,"column":1,"offset":8202},"end":{"line":293,"column":129,"offset":8330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"for Loop","position":{"start":{"line":295,"column":3,"offset":8336},"end":{"line":295,"column":11,"offset":8344}}}],"position":{"start":{"line":295,"column":1,"offset":8334},"end":{"line":295,"column":13,"offset":8346}}}],"position":{"start":{"line":295,"column":1,"offset":8334},"end":{"line":295,"column":13,"offset":8346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The for loop goes through a list of variables, making a seperate variable equal one of the list every time.","position":{"start":{"line":297,"column":1,"offset":8350},"end":{"line":297,"column":108,"offset":8457}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":297,"column":108,"offset":8457},"end":{"line":298,"column":1,"offset":8461}}},{"type":"text","value":"\n"},{"type":"text","value":"Let's say we wanted to create the example above.","position":{"start":{"line":298,"column":1,"offset":8461},"end":{"line":298,"column":49,"offset":8509}}}],"position":{"start":{"line":297,"column":1,"offset":8350},"end":{"line":298,"column":49,"offset":8509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loop.py","position":{"start":{"line":300,"column":2,"offset":8514},"end":{"line":300,"column":9,"offset":8521}}}],"position":{"start":{"line":300,"column":1,"offset":8513},"end":{"line":300,"column":10,"offset":8522}}}],"position":{"start":{"line":300,"column":1,"offset":8513},"end":{"line":300,"column":10,"offset":8522}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span>\n     sleep<span class=\"token punctuation\">(</span><span class=\"token number\">.3</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":302,"column":1,"offset":8526},"end":{"line":307,"column":4,"offset":8623}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This will print Hello with a .3 second delay 100 times. This is just one way to use it, but it is usually used like this:","position":{"start":{"line":309,"column":1,"offset":8627},"end":{"line":309,"column":122,"offset":8748}}}],"position":{"start":{"line":309,"column":1,"offset":8627},"end":{"line":309,"column":122,"offset":8748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"loop2.py","position":{"start":{"line":311,"column":2,"offset":8753},"end":{"line":311,"column":10,"offset":8761}}}],"position":{"start":{"line":311,"column":1,"offset":8752},"end":{"line":311,"column":11,"offset":8762}}}],"position":{"start":{"line":311,"column":1,"offset":8752},"end":{"line":311,"column":11,"offset":8762}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">for</span> number <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span>\n     time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">.1</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":313,"column":1,"offset":8766},"end":{"line":318,"column":4,"offset":8861}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"while Loop","position":{"start":{"line":320,"column":3,"offset":8867},"end":{"line":320,"column":13,"offset":8877}}}],"position":{"start":{"line":320,"column":1,"offset":8865},"end":{"line":320,"column":15,"offset":8879}}}],"position":{"start":{"line":320,"column":1,"offset":8865},"end":{"line":320,"column":15,"offset":8879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The while loop runs the code while something stays true. You would put ","position":{"start":{"line":322,"column":1,"offset":8883},"end":{"line":322,"column":72,"offset":8954}}},{"type":"raw","value":"<code class=\"language-text\">while &lt;expression></code>","position":{"start":{"line":322,"column":72,"offset":8954},"end":{"line":322,"column":92,"offset":8974}}},{"type":"text","value":". Every time the loop runs, it evaluates if the expression is True. It it is, it runs the code, if not it continues outside of the loop. For example:","position":{"start":{"line":322,"column":92,"offset":8974},"end":{"line":322,"column":241,"offset":9123}}}],"position":{"start":{"line":322,"column":1,"offset":8883},"end":{"line":322,"column":241,"offset":9123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"while.py","position":{"start":{"line":324,"column":2,"offset":9128},"end":{"line":324,"column":10,"offset":9136}}}],"position":{"start":{"line":324,"column":1,"offset":9127},"end":{"line":324,"column":11,"offset":9137}}}],"position":{"start":{"line":324,"column":1,"offset":9127},"end":{"line":324,"column":11,"offset":9137}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># Runs forever</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":326,"column":1,"offset":9141},"end":{"line":329,"column":4,"offset":9211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Or you could do:","position":{"start":{"line":331,"column":1,"offset":9215},"end":{"line":331,"column":17,"offset":9231}}}],"position":{"start":{"line":331,"column":1,"offset":9215},"end":{"line":331,"column":17,"offset":9231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"while2.py","position":{"start":{"line":333,"column":2,"offset":9236},"end":{"line":333,"column":11,"offset":9245}}}],"position":{"start":{"line":333,"column":1,"offset":9235},"end":{"line":333,"column":12,"offset":9246}}}],"position":{"start":{"line":333,"column":1,"offset":9235},"end":{"line":333,"column":12,"offset":9246}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\nposition <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;placeholder>'</span>\n<span class=\"token keyword\">while</span> position <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># will run at least once</span>\n    position <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":335,"column":1,"offset":9250},"end":{"line":341,"column":4,"offset":9413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The if statement allows you to check if something is True. If so, it runs the code, if not, it continues on. It is kind of like a while loop, but it executes ","position":{"start":{"line":343,"column":1,"offset":9417},"end":{"line":343,"column":159,"offset":9575}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"only once","position":{"start":{"line":343,"column":161,"offset":9577},"end":{"line":343,"column":170,"offset":9586}}}],"position":{"start":{"line":343,"column":159,"offset":9575},"end":{"line":343,"column":172,"offset":9588}}},{"type":"text","value":". An if statement is written:","position":{"start":{"line":343,"column":172,"offset":9588},"end":{"line":343,"column":201,"offset":9617}}}],"position":{"start":{"line":343,"column":1,"offset":9417},"end":{"line":343,"column":201,"offset":9617}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"if.py","position":{"start":{"line":345,"column":2,"offset":9622},"end":{"line":345,"column":7,"offset":9627}}}],"position":{"start":{"line":345,"column":1,"offset":9621},"end":{"line":345,"column":8,"offset":9628}}}],"position":{"start":{"line":345,"column":1,"offset":9621},"end":{"line":345,"column":8,"offset":9628}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\nnum <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'num is 3. Hooray!!!'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Num is greater than 5'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Num is 12, which means that there is a problem with the python language, see if you can figure it out. Extra credit if you can figure it out!'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":347,"column":1,"offset":9632},"end":{"line":356,"column":4,"offset":9961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, you may think that it would be better if you could make it print only one message. Not as many that are True. You can do that with an ","position":{"start":{"line":358,"column":1,"offset":9965},"end":{"line":358,"column":140,"offset":10104}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":358,"column":140,"offset":10104},"end":{"line":358,"column":146,"offset":10110}}},{"type":"text","value":" statement:","position":{"start":{"line":358,"column":146,"offset":10110},"end":{"line":358,"column":157,"offset":10121}}}],"position":{"start":{"line":358,"column":1,"offset":9965},"end":{"line":358,"column":157,"offset":10121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"elif.py","position":{"start":{"line":360,"column":2,"offset":10126},"end":{"line":360,"column":9,"offset":10133}}}],"position":{"start":{"line":360,"column":1,"offset":10125},"end":{"line":360,"column":10,"offset":10134}}}],"position":{"start":{"line":360,"column":1,"offset":10125},"end":{"line":360,"column":10,"offset":10134}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\nnum <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Num is three, this is the only msg you will see.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> num <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Num is not three, but is greater than 1'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":362,"column":1,"offset":10138},"end":{"line":369,"column":4,"offset":10342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, you may wonder how to run code if none work. Well, there is a simple statement called ","position":{"start":{"line":371,"column":1,"offset":10346},"end":{"line":371,"column":92,"offset":10437}}},{"type":"raw","value":"<code class=\"language-text\">else:</code>","position":{"start":{"line":371,"column":92,"offset":10437},"end":{"line":371,"column":99,"offset":10444}}}],"position":{"start":{"line":371,"column":1,"offset":10346},"end":{"line":371,"column":99,"offset":10444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"else.py","position":{"start":{"line":373,"column":2,"offset":10449},"end":{"line":373,"column":9,"offset":10456}}}],"position":{"start":{"line":373,"column":1,"offset":10448},"end":{"line":373,"column":10,"offset":10457}}}],"position":{"start":{"line":373,"column":1,"offset":10448},"end":{"line":373,"column":10,"offset":10457}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\nnum <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Num is three, this is the only msg you will see.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> num <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Num is not three, but is greater than 1'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No category'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":375,"column":1,"offset":10461},"end":{"line":384,"column":4,"offset":10698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So far, you have only seen how to use functions other people have made. Let use the example that you want to print the a random number between 1 and 9, and print different text every time.","position":{"start":{"line":386,"column":1,"offset":10702},"end":{"line":386,"column":189,"offset":10890}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":386,"column":189,"offset":10890},"end":{"line":387,"column":1,"offset":10894}}},{"type":"text","value":"\n"},{"type":"text","value":"It is quite tiring to type:","position":{"start":{"line":387,"column":1,"offset":10894},"end":{"line":387,"column":28,"offset":10921}}}],"position":{"start":{"line":386,"column":1,"offset":10702},"end":{"line":387,"column":28,"offset":10921}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Characters: 389","position":{"start":{"line":389,"column":1,"offset":10925},"end":{"line":389,"column":16,"offset":10940}}}],"position":{"start":{"line":389,"column":1,"offset":10925},"end":{"line":389,"column":16,"offset":10940}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"nofunc.py","position":{"start":{"line":391,"column":2,"offset":10945},"end":{"line":391,"column":11,"offset":10954}}}],"position":{"start":{"line":391,"column":1,"offset":10944},"end":{"line":391,"column":12,"offset":10955}}}],"position":{"start":{"line":391,"column":1,"offset":10944},"end":{"line":391,"column":12,"offset":10955}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Wow that was interesting.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Look at the number above ^'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'All of these have been interesting numbers.'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"these random.randint's are getting annoying to type\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'j'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":393,"column":1,"offset":10959},"end":{"line":407,"column":4,"offset":11376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now with functions, you can seriously lower the amount of characters:","position":{"start":{"line":409,"column":1,"offset":11380},"end":{"line":409,"column":70,"offset":11449}}}],"position":{"start":{"line":409,"column":1,"offset":11380},"end":{"line":409,"column":70,"offset":11449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Characters: 254","position":{"start":{"line":411,"column":1,"offset":11453},"end":{"line":411,"column":16,"offset":11468}}}],"position":{"start":{"line":411,"column":1,"offset":11453},"end":{"line":411,"column":16,"offset":11468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"functions.py","position":{"start":{"line":413,"column":2,"offset":11473},"end":{"line":413,"column":14,"offset":11485}}}],"position":{"start":{"line":413,"column":1,"offset":11472},"end":{"line":413,"column":15,"offset":11486}}}],"position":{"start":{"line":413,"column":1,"offset":11472},"end":{"line":413,"column":15,"offset":11486}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\n<span class=\"token keyword\">def</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">(</span><span class=\"token string\">'Wow that was interesting.'</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">(</span><span class=\"token string\">'Look at the number above ^'</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">(</span><span class=\"token string\">'All of these have been interesting numbers.'</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">(</span><span class=\"token string\">\"these random.randint's are getting annoying to type\"</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">(</span><span class=\"token string\">'Hi'</span><span class=\"token punctuation\">)</span>\nr<span class=\"token punctuation\">(</span><span class=\"token string\">'j'</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":415,"column":1,"offset":11490},"end":{"line":426,"column":4,"offset":11769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Chapter 01 - Getting Ready with Python","position":{"start":{"line":428,"column":6,"offset":11778},"end":{"line":428,"column":44,"offset":11816}}}],"position":{"start":{"line":428,"column":1,"offset":11773},"end":{"line":428,"column":44,"offset":11816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Installing Python 3, And Launching Python Shell","position":{"start":{"line":430,"column":3,"offset":11822},"end":{"line":430,"column":50,"offset":11869}}}],"position":{"start":{"line":430,"column":1,"offset":11820},"end":{"line":430,"column":52,"offset":11871}}}],"position":{"start":{"line":430,"column":1,"offset":11820},"end":{"line":430,"column":52,"offset":11871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This video should help you get up and running with Python 3","position":{"start":{"line":432,"column":1,"offset":11875},"end":{"line":432,"column":60,"offset":11934}}}],"position":{"start":{"line":432,"column":1,"offset":11875},"end":{"line":432,"column":60,"offset":11934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=Ji1WW4Suaww"},"children":[{"type":"text","value":"Installing Python 3 and Launch Python Shell","position":{"start":{"line":434,"column":6,"offset":11943},"end":{"line":434,"column":49,"offset":11986}}}],"position":{"start":{"line":434,"column":5,"offset":11942},"end":{"line":434,"column":95,"offset":12032}}}],"position":{"start":{"line":434,"column":1,"offset":11938},"end":{"line":434,"column":95,"offset":12032}}},{"type":"text","value":"\n"}],"position":{"start":{"line":434,"column":1,"offset":11938},"end":{"line":434,"column":95,"offset":12032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Installing Python is really a cakewalk. Search for \"Python download\" on ","position":{"start":{"line":436,"column":1,"offset":12036},"end":{"line":436,"column":73,"offset":12108}}},{"type":"element","tagName":"a","properties":{"href":"http://www.google.com/"},"children":[{"type":"text","value":"www.google.com","position":{"start":{"line":436,"column":74,"offset":12109},"end":{"line":436,"column":88,"offset":12123}}}],"position":{"start":{"line":436,"column":73,"offset":12108},"end":{"line":436,"column":113,"offset":12148}}},{"type":"text","value":". Download the installable and install it.","position":{"start":{"line":436,"column":113,"offset":12148},"end":{"line":436,"column":155,"offset":12190}}}],"position":{"start":{"line":436,"column":1,"offset":12036},"end":{"line":436,"column":155,"offset":12190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A quick word of caution on Windows","position":{"start":{"line":438,"column":1,"offset":12194},"end":{"line":438,"column":35,"offset":12228}}}],"position":{"start":{"line":438,"column":1,"offset":12194},"end":{"line":438,"column":35,"offset":12228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Make sure that you have the check-box \"Add Python 3.6 to PATH\", checked.","position":{"start":{"line":440,"column":5,"offset":12236},"end":{"line":440,"column":77,"offset":12308}}}],"position":{"start":{"line":440,"column":1,"offset":12232},"end":{"line":440,"column":77,"offset":12308}}},{"type":"text","value":"\n"}],"position":{"start":{"line":440,"column":1,"offset":12232},"end":{"line":440,"column":77,"offset":12308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you have installed Python, you can launch the Python Shell.","position":{"start":{"line":442,"column":1,"offset":12312},"end":{"line":442,"column":65,"offset":12376}}}],"position":{"start":{"line":442,"column":1,"offset":12312},"end":{"line":442,"column":65,"offset":12376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Windows - Launch cmd prompt by typing in 'cmd' command.","position":{"start":{"line":444,"column":5,"offset":12384},"end":{"line":444,"column":60,"offset":12439}}}],"position":{"start":{"line":444,"column":1,"offset":12380},"end":{"line":444,"column":60,"offset":12439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Mac or Linux - Launch up terminal.","position":{"start":{"line":445,"column":5,"offset":12445},"end":{"line":445,"column":39,"offset":12479}}}],"position":{"start":{"line":445,"column":1,"offset":12441},"end":{"line":445,"column":39,"offset":12479}}},{"type":"text","value":"\n"}],"position":{"start":{"line":444,"column":1,"offset":12380},"end":{"line":445,"column":39,"offset":12479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Command to launch Python 3 is different in Mac.","position":{"start":{"line":447,"column":1,"offset":12483},"end":{"line":447,"column":48,"offset":12530}}}],"position":{"start":{"line":447,"column":1,"offset":12483},"end":{"line":447,"column":48,"offset":12530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In Mac, type in ","position":{"start":{"line":449,"column":5,"offset":12538},"end":{"line":449,"column":21,"offset":12554}}},{"type":"raw","value":"<code class=\"language-text\">python3</code>","position":{"start":{"line":449,"column":21,"offset":12554},"end":{"line":449,"column":30,"offset":12563}}}],"position":{"start":{"line":449,"column":1,"offset":12534},"end":{"line":449,"column":30,"offset":12563}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In other operating systems, including windows, type ","position":{"start":{"line":450,"column":5,"offset":12569},"end":{"line":450,"column":57,"offset":12621}}},{"type":"raw","value":"<code class=\"language-text\">python</code>","position":{"start":{"line":450,"column":57,"offset":12621},"end":{"line":450,"column":65,"offset":12629}}}],"position":{"start":{"line":450,"column":1,"offset":12565},"end":{"line":450,"column":65,"offset":12629}}},{"type":"text","value":"\n"}],"position":{"start":{"line":449,"column":1,"offset":12534},"end":{"line":450,"column":65,"offset":12629}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can type code in python shell and code as well!","position":{"start":{"line":452,"column":1,"offset":12633},"end":{"line":452,"column":52,"offset":12684}}}],"position":{"start":{"line":452,"column":1,"offset":12633},"end":{"line":452,"column":52,"offset":12684}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can use ","position":{"start":{"line":454,"column":1,"offset":12688},"end":{"line":454,"column":13,"offset":12700}}},{"type":"raw","value":"<code class=\"language-text\">print(5*4)</code>","position":{"start":{"line":454,"column":13,"offset":12700},"end":{"line":454,"column":25,"offset":12712}}},{"type":"text","value":", and it shows ","position":{"start":{"line":454,"column":25,"offset":12712},"end":{"line":454,"column":40,"offset":12727}}},{"type":"raw","value":"<code class=\"language-text\">20</code>","position":{"start":{"line":454,"column":40,"offset":12727},"end":{"line":454,"column":44,"offset":12731}}},{"type":"text","value":".","position":{"start":{"line":454,"column":44,"offset":12731},"end":{"line":454,"column":45,"offset":12732}}}],"position":{"start":{"line":454,"column":1,"offset":12688},"end":{"line":454,"column":45,"offset":12732}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can execute the code, and the shell would immediately give you output.","position":{"start":{"line":456,"column":1,"offset":12736},"end":{"line":456,"column":75,"offset":12810}}}],"position":{"start":{"line":456,"column":1,"offset":12736},"end":{"line":456,"column":75,"offset":12810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using the the Python Shell is an awesome way to learn Python.","position":{"start":{"line":458,"column":1,"offset":12814},"end":{"line":458,"column":62,"offset":12875}}}],"position":{"start":{"line":458,"column":1,"offset":12814},"end":{"line":458,"column":62,"offset":12875}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Chapter 02 - Introduction To Python Programming","position":{"start":{"line":460,"column":6,"offset":12884},"end":{"line":460,"column":53,"offset":12931}}}],"position":{"start":{"line":460,"column":1,"offset":12879},"end":{"line":460,"column":53,"offset":12931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Most programmers find programming a lot of fun, and besides, it also gets their work done.","position":{"start":{"line":462,"column":1,"offset":12935},"end":{"line":462,"column":91,"offset":13025}}}],"position":{"start":{"line":462,"column":1,"offset":12935},"end":{"line":462,"column":91,"offset":13025}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Programming mainly involves ","position":{"start":{"line":464,"column":1,"offset":13029},"end":{"line":464,"column":29,"offset":13057}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"problem solving","position":{"start":{"line":464,"column":30,"offset":13058},"end":{"line":464,"column":45,"offset":13073}}}],"position":{"start":{"line":464,"column":29,"offset":13057},"end":{"line":464,"column":46,"offset":13074}}},{"type":"text","value":", where one makes use of a computer to solve a real world problem.","position":{"start":{"line":464,"column":46,"offset":13074},"end":{"line":464,"column":112,"offset":13140}}}],"position":{"start":{"line":464,"column":1,"offset":13029},"end":{"line":464,"column":112,"offset":13140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"During our journey here, we will approach programming in a very different way. We will not only introduce you to the Python language, but also help you pick up essential problem solving skills.","position":{"start":{"line":466,"column":1,"offset":13144},"end":{"line":466,"column":194,"offset":13337}}}],"position":{"start":{"line":466,"column":1,"offset":13144},"end":{"line":466,"column":194,"offset":13337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As a programmer, you need to be able to look at a problem, and identify the important programming concepts relevant to solving it. Finally, you need to be able to use the language features and syntax, to express your solution on the computer. While all this looks complex, we want to make it easy for you. Together, we will tackle a variety of programming challenges, using these same steps. We will start with simple challenges ","position":{"start":{"line":468,"column":1,"offset":13341},"end":{"line":468,"column":430,"offset":13770}}},{"type":"text","value":"(","position":{"start":{"line":468,"column":430,"offset":13770},"end":{"line":468,"column":432,"offset":13772}}},{"type":"text","value":"such as a Multiplication Table","position":{"start":{"line":468,"column":432,"offset":13772},"end":{"line":468,"column":462,"offset":13802}}},{"type":"text","value":")","position":{"start":{"line":468,"column":462,"offset":13802},"end":{"line":468,"column":464,"offset":13804}}},{"type":"text","value":", and gradually increase the difficulty level over the duration of this book.","position":{"start":{"line":468,"column":464,"offset":13804},"end":{"line":468,"column":541,"offset":13881}}}],"position":{"start":{"line":468,"column":1,"offset":13341},"end":{"line":468,"column":541,"offset":13881}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Learning to program is a lot like learning to ride a bicycle. The first few steps are the most challenging ones.","position":{"start":{"line":470,"column":1,"offset":13885},"end":{"line":470,"column":113,"offset":13997}}}],"position":{"start":{"line":470,"column":1,"offset":13885},"end":{"line":470,"column":113,"offset":13997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you get over these initial steps, your experience will become more and more enjoyable.","position":{"start":{"line":472,"column":1,"offset":14001},"end":{"line":472,"column":92,"offset":14092}}}],"position":{"start":{"line":472,"column":1,"offset":14001},"end":{"line":472,"column":92,"offset":14092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Are you ready for your first programming challenge? Let's get going now! We wish you all the best.","position":{"start":{"line":474,"column":1,"offset":14096},"end":{"line":474,"column":99,"offset":14194}}}],"position":{"start":{"line":474,"column":1,"offset":14096},"end":{"line":474,"column":99,"offset":14194}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":476,"column":3,"offset":14200},"end":{"line":476,"column":10,"offset":14207}}}],"position":{"start":{"line":476,"column":1,"offset":14198},"end":{"line":476,"column":12,"offset":14209}}}],"position":{"start":{"line":476,"column":1,"offset":14198},"end":{"line":476,"column":12,"offset":14209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":478,"column":1,"offset":14213},"end":{"line":478,"column":18,"offset":14230}}}],"position":{"start":{"line":478,"column":1,"offset":14213},"end":{"line":478,"column":18,"offset":14230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Were introduced to the concept of problem solving","position":{"start":{"line":480,"column":5,"offset":14238},"end":{"line":480,"column":54,"offset":14287}}}],"position":{"start":{"line":480,"column":1,"offset":14234},"end":{"line":480,"column":54,"offset":14287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood how good programmers approach problem solving","position":{"start":{"line":481,"column":5,"offset":14293},"end":{"line":481,"column":61,"offset":14349}}}],"position":{"start":{"line":481,"column":1,"offset":14289},"end":{"line":481,"column":61,"offset":14349}}},{"type":"text","value":"\n"}],"position":{"start":{"line":480,"column":1,"offset":14234},"end":{"line":481,"column":61,"offset":14349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 01: Our First Programming Challenge","position":{"start":{"line":483,"column":3,"offset":14355},"end":{"line":483,"column":43,"offset":14395}}}],"position":{"start":{"line":483,"column":1,"offset":14353},"end":{"line":483,"column":45,"offset":14397}}}],"position":{"start":{"line":483,"column":1,"offset":14353},"end":{"line":483,"column":45,"offset":14397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Our first ","position":{"start":{"line":485,"column":1,"offset":14401},"end":{"line":485,"column":11,"offset":14411}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"programming challenge","position":{"start":{"line":485,"column":12,"offset":14412},"end":{"line":485,"column":33,"offset":14433}}}],"position":{"start":{"line":485,"column":11,"offset":14411},"end":{"line":485,"column":34,"offset":14434}}},{"type":"text","value":" aims to do, what every kid does in math class: read out a multiplication table. We now want to give this task to the computer. Here is the statement of our problem:","position":{"start":{"line":485,"column":34,"offset":14434},"end":{"line":485,"column":199,"offset":14599}}}],"position":{"start":{"line":485,"column":1,"offset":14401},"end":{"line":485,"column":199,"offset":14599}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"The Print Multiplication Table Challenge ","position":{"start":{"line":487,"column":3,"offset":14605},"end":{"line":487,"column":44,"offset":14646}}},{"type":"text","value":"(","position":{"start":{"line":487,"column":44,"offset":14646},"end":{"line":487,"column":46,"offset":14648}}},{"type":"text","value":"PMT-Challenge","position":{"start":{"line":487,"column":46,"offset":14648},"end":{"line":487,"column":59,"offset":14661}}},{"type":"text","value":")","position":{"start":{"line":487,"column":59,"offset":14661},"end":{"line":487,"column":61,"offset":14663}}}],"position":{"start":{"line":487,"column":1,"offset":14603},"end":{"line":487,"column":63,"offset":14665}}}],"position":{"start":{"line":487,"column":1,"offset":14603},"end":{"line":487,"column":63,"offset":14665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Compute the multiplication table for ","position":{"start":{"line":489,"column":4,"offset":14672},"end":{"line":489,"column":41,"offset":14709}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":489,"column":41,"offset":14709},"end":{"line":489,"column":44,"offset":14712}}},{"type":"text","value":", with entries from ","position":{"start":{"line":489,"column":44,"offset":14712},"end":{"line":489,"column":64,"offset":14732}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":489,"column":64,"offset":14732},"end":{"line":489,"column":67,"offset":14735}}},{"type":"text","value":" to ","position":{"start":{"line":489,"column":67,"offset":14735},"end":{"line":489,"column":71,"offset":14739}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":489,"column":71,"offset":14739},"end":{"line":489,"column":75,"offset":14743}}},{"type":"text","value":".","position":{"start":{"line":489,"column":75,"offset":14743},"end":{"line":489,"column":76,"offset":14744}}}],"position":{"start":{"line":489,"column":1,"offset":14669},"end":{"line":489,"column":76,"offset":14744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Display this table.","position":{"start":{"line":490,"column":4,"offset":14749},"end":{"line":490,"column":23,"offset":14768}}}],"position":{"start":{"line":490,"column":1,"offset":14746},"end":{"line":490,"column":23,"offset":14768}}},{"type":"text","value":"\n"}],"position":{"start":{"line":489,"column":1,"offset":14669},"end":{"line":490,"column":23,"offset":14768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The display needs to be:","position":{"start":{"line":492,"column":1,"offset":14772},"end":{"line":492,"column":25,"offset":14796}}}],"position":{"start":{"line":492,"column":1,"offset":14772},"end":{"line":492,"column":25,"offset":14796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":494,"column":4,"offset":14803},"end":{"line":494,"column":6,"offset":14805}}},{"type":"text","value":"*","position":{"start":{"line":494,"column":6,"offset":14805},"end":{"line":494,"column":8,"offset":14807}}},{"type":"text","value":" 1 = 5","position":{"start":{"line":494,"column":8,"offset":14807},"end":{"line":494,"column":14,"offset":14813}}}],"position":{"start":{"line":494,"column":2,"offset":14801},"end":{"line":494,"column":16,"offset":14815}}}],"position":{"start":{"line":494,"column":1,"offset":14800},"end":{"line":494,"column":17,"offset":14816}}}],"position":{"start":{"line":494,"column":1,"offset":14800},"end":{"line":494,"column":17,"offset":14816}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":496,"column":4,"offset":14823},"end":{"line":496,"column":6,"offset":14825}}},{"type":"text","value":"*","position":{"start":{"line":496,"column":6,"offset":14825},"end":{"line":496,"column":8,"offset":14827}}},{"type":"text","value":" 2 = 10","position":{"start":{"line":496,"column":8,"offset":14827},"end":{"line":496,"column":15,"offset":14834}}}],"position":{"start":{"line":496,"column":2,"offset":14821},"end":{"line":496,"column":17,"offset":14836}}}],"position":{"start":{"line":496,"column":1,"offset":14820},"end":{"line":496,"column":18,"offset":14837}}}],"position":{"start":{"line":496,"column":1,"offset":14820},"end":{"line":496,"column":18,"offset":14837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":498,"column":4,"offset":14844},"end":{"line":498,"column":6,"offset":14846}}},{"type":"text","value":"*","position":{"start":{"line":498,"column":6,"offset":14846},"end":{"line":498,"column":8,"offset":14848}}},{"type":"text","value":" 3 = 15","position":{"start":{"line":498,"column":8,"offset":14848},"end":{"line":498,"column":15,"offset":14855}}}],"position":{"start":{"line":498,"column":2,"offset":14842},"end":{"line":498,"column":17,"offset":14857}}}],"position":{"start":{"line":498,"column":1,"offset":14841},"end":{"line":498,"column":18,"offset":14858}}}],"position":{"start":{"line":498,"column":1,"offset":14841},"end":{"line":498,"column":18,"offset":14858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":500,"column":4,"offset":14865},"end":{"line":500,"column":6,"offset":14867}}},{"type":"text","value":"*","position":{"start":{"line":500,"column":6,"offset":14867},"end":{"line":500,"column":8,"offset":14869}}},{"type":"text","value":" 4 = 20","position":{"start":{"line":500,"column":8,"offset":14869},"end":{"line":500,"column":15,"offset":14876}}}],"position":{"start":{"line":500,"column":2,"offset":14863},"end":{"line":500,"column":17,"offset":14878}}}],"position":{"start":{"line":500,"column":1,"offset":14862},"end":{"line":500,"column":18,"offset":14879}}}],"position":{"start":{"line":500,"column":1,"offset":14862},"end":{"line":500,"column":18,"offset":14879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":502,"column":4,"offset":14886},"end":{"line":502,"column":6,"offset":14888}}},{"type":"text","value":"*","position":{"start":{"line":502,"column":6,"offset":14888},"end":{"line":502,"column":8,"offset":14890}}},{"type":"text","value":" 5 = 25","position":{"start":{"line":502,"column":8,"offset":14890},"end":{"line":502,"column":15,"offset":14897}}}],"position":{"start":{"line":502,"column":2,"offset":14884},"end":{"line":502,"column":17,"offset":14899}}}],"position":{"start":{"line":502,"column":1,"offset":14883},"end":{"line":502,"column":18,"offset":14900}}}],"position":{"start":{"line":502,"column":1,"offset":14883},"end":{"line":502,"column":18,"offset":14900}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":504,"column":4,"offset":14907},"end":{"line":504,"column":6,"offset":14909}}},{"type":"text","value":"*","position":{"start":{"line":504,"column":6,"offset":14909},"end":{"line":504,"column":8,"offset":14911}}},{"type":"text","value":" 6 = 30","position":{"start":{"line":504,"column":8,"offset":14911},"end":{"line":504,"column":15,"offset":14918}}}],"position":{"start":{"line":504,"column":2,"offset":14905},"end":{"line":504,"column":17,"offset":14920}}}],"position":{"start":{"line":504,"column":1,"offset":14904},"end":{"line":504,"column":18,"offset":14921}}}],"position":{"start":{"line":504,"column":1,"offset":14904},"end":{"line":504,"column":18,"offset":14921}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":506,"column":4,"offset":14928},"end":{"line":506,"column":6,"offset":14930}}},{"type":"text","value":"*","position":{"start":{"line":506,"column":6,"offset":14930},"end":{"line":506,"column":8,"offset":14932}}},{"type":"text","value":" 7 = 35","position":{"start":{"line":506,"column":8,"offset":14932},"end":{"line":506,"column":15,"offset":14939}}}],"position":{"start":{"line":506,"column":2,"offset":14926},"end":{"line":506,"column":17,"offset":14941}}}],"position":{"start":{"line":506,"column":1,"offset":14925},"end":{"line":506,"column":18,"offset":14942}}}],"position":{"start":{"line":506,"column":1,"offset":14925},"end":{"line":506,"column":18,"offset":14942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":508,"column":4,"offset":14949},"end":{"line":508,"column":6,"offset":14951}}},{"type":"text","value":"*","position":{"start":{"line":508,"column":6,"offset":14951},"end":{"line":508,"column":8,"offset":14953}}},{"type":"text","value":" 8 = 40","position":{"start":{"line":508,"column":8,"offset":14953},"end":{"line":508,"column":15,"offset":14960}}}],"position":{"start":{"line":508,"column":2,"offset":14947},"end":{"line":508,"column":17,"offset":14962}}}],"position":{"start":{"line":508,"column":1,"offset":14946},"end":{"line":508,"column":18,"offset":14963}}}],"position":{"start":{"line":508,"column":1,"offset":14946},"end":{"line":508,"column":18,"offset":14963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":510,"column":4,"offset":14970},"end":{"line":510,"column":6,"offset":14972}}},{"type":"text","value":"*","position":{"start":{"line":510,"column":6,"offset":14972},"end":{"line":510,"column":8,"offset":14974}}},{"type":"text","value":" 9 = 45","position":{"start":{"line":510,"column":8,"offset":14974},"end":{"line":510,"column":15,"offset":14981}}}],"position":{"start":{"line":510,"column":2,"offset":14968},"end":{"line":510,"column":17,"offset":14983}}}],"position":{"start":{"line":510,"column":1,"offset":14967},"end":{"line":510,"column":18,"offset":14984}}}],"position":{"start":{"line":510,"column":1,"offset":14967},"end":{"line":510,"column":18,"offset":14984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5 ","position":{"start":{"line":512,"column":4,"offset":14991},"end":{"line":512,"column":6,"offset":14993}}},{"type":"text","value":"*","position":{"start":{"line":512,"column":6,"offset":14993},"end":{"line":512,"column":8,"offset":14995}}},{"type":"text","value":" 10 = 50","position":{"start":{"line":512,"column":8,"offset":14995},"end":{"line":512,"column":16,"offset":15003}}}],"position":{"start":{"line":512,"column":2,"offset":14989},"end":{"line":512,"column":18,"offset":15005}}}],"position":{"start":{"line":512,"column":1,"offset":14988},"end":{"line":512,"column":19,"offset":15006}}}],"position":{"start":{"line":512,"column":1,"offset":14988},"end":{"line":512,"column":19,"offset":15006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the challenge. For convenience, let's give it a label, say ","position":{"start":{"line":514,"column":1,"offset":15010},"end":{"line":514,"column":68,"offset":15077}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"PMT-Challenge","position":{"start":{"line":514,"column":69,"offset":15078},"end":{"line":514,"column":82,"offset":15091}}}],"position":{"start":{"line":514,"column":68,"offset":15077},"end":{"line":514,"column":83,"offset":15092}}},{"type":"text","value":". What would be the important concepts we need to learn, to solve this challenge? The following list of concepts would be a good starting point:","position":{"start":{"line":514,"column":83,"offset":15092},"end":{"line":514,"column":227,"offset":15236}}}],"position":{"start":{"line":514,"column":1,"offset":15010},"end":{"line":514,"column":227,"offset":15236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Statements","position":{"start":{"line":516,"column":7,"offset":15246},"end":{"line":516,"column":17,"offset":15256}}}],"position":{"start":{"line":516,"column":5,"offset":15244},"end":{"line":516,"column":19,"offset":15258}}}],"position":{"start":{"line":516,"column":1,"offset":15240},"end":{"line":516,"column":19,"offset":15258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Expressions","position":{"start":{"line":517,"column":7,"offset":15266},"end":{"line":517,"column":18,"offset":15277}}}],"position":{"start":{"line":517,"column":5,"offset":15264},"end":{"line":517,"column":20,"offset":15279}}}],"position":{"start":{"line":517,"column":1,"offset":15260},"end":{"line":517,"column":20,"offset":15279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Variables","position":{"start":{"line":518,"column":7,"offset":15287},"end":{"line":518,"column":16,"offset":15296}}}],"position":{"start":{"line":518,"column":5,"offset":15285},"end":{"line":518,"column":18,"offset":15298}}}],"position":{"start":{"line":518,"column":1,"offset":15281},"end":{"line":518,"column":18,"offset":15298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Literals","position":{"start":{"line":519,"column":7,"offset":15306},"end":{"line":519,"column":15,"offset":15314}}}],"position":{"start":{"line":519,"column":5,"offset":15304},"end":{"line":519,"column":17,"offset":15316}}}],"position":{"start":{"line":519,"column":1,"offset":15300},"end":{"line":519,"column":17,"offset":15316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Conditionals","position":{"start":{"line":520,"column":7,"offset":15324},"end":{"line":520,"column":19,"offset":15336}}}],"position":{"start":{"line":520,"column":5,"offset":15322},"end":{"line":520,"column":21,"offset":15338}}}],"position":{"start":{"line":520,"column":1,"offset":15318},"end":{"line":520,"column":21,"offset":15338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Loops","position":{"start":{"line":521,"column":7,"offset":15346},"end":{"line":521,"column":12,"offset":15351}}}],"position":{"start":{"line":521,"column":5,"offset":15344},"end":{"line":521,"column":14,"offset":15353}}}],"position":{"start":{"line":521,"column":1,"offset":15340},"end":{"line":521,"column":14,"offset":15353}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Methods","position":{"start":{"line":522,"column":7,"offset":15361},"end":{"line":522,"column":14,"offset":15368}}}],"position":{"start":{"line":522,"column":5,"offset":15359},"end":{"line":522,"column":16,"offset":15370}}}],"position":{"start":{"line":522,"column":1,"offset":15355},"end":{"line":522,"column":16,"offset":15370}}},{"type":"text","value":"\n"}],"position":{"start":{"line":516,"column":1,"offset":15240},"end":{"line":522,"column":16,"offset":15370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the rest of this chapter, we will introduce these concepts to you, one-by-one. We will also show you how learning each concept, takes us closer to a solution to ","position":{"start":{"line":524,"column":1,"offset":15374},"end":{"line":524,"column":165,"offset":15538}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"PMT-Challenge","position":{"start":{"line":524,"column":166,"offset":15539},"end":{"line":524,"column":179,"offset":15552}}}],"position":{"start":{"line":524,"column":165,"offset":15538},"end":{"line":524,"column":180,"offset":15553}}},{"type":"text","value":".","position":{"start":{"line":524,"column":180,"offset":15553},"end":{"line":524,"column":181,"offset":15554}}}],"position":{"start":{"line":524,"column":1,"offset":15374},"end":{"line":524,"column":181,"offset":15554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":526,"column":3,"offset":15560},"end":{"line":526,"column":10,"offset":15567}}}],"position":{"start":{"line":526,"column":1,"offset":15558},"end":{"line":526,"column":12,"offset":15569}}}],"position":{"start":{"line":526,"column":1,"offset":15558},"end":{"line":526,"column":12,"offset":15569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":528,"column":1,"offset":15573},"end":{"line":528,"column":18,"offset":15590}}}],"position":{"start":{"line":528,"column":1,"offset":15573},"end":{"line":528,"column":18,"offset":15590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Stated our first programming challenge","position":{"start":{"line":530,"column":5,"offset":15598},"end":{"line":530,"column":43,"offset":15636}}}],"position":{"start":{"line":530,"column":1,"offset":15594},"end":{"line":530,"column":43,"offset":15636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Identified what programming concepts we need to learn, to solve this challenge","position":{"start":{"line":531,"column":5,"offset":15642},"end":{"line":531,"column":83,"offset":15720}}}],"position":{"start":{"line":531,"column":1,"offset":15638},"end":{"line":531,"column":83,"offset":15720}}},{"type":"text","value":"\n"}],"position":{"start":{"line":530,"column":1,"offset":15594},"end":{"line":531,"column":83,"offset":15720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 02: Breaking Down PMT-Challenge","position":{"start":{"line":533,"column":3,"offset":15726},"end":{"line":533,"column":39,"offset":15762}}}],"position":{"start":{"line":533,"column":1,"offset":15724},"end":{"line":533,"column":41,"offset":15764}}}],"position":{"start":{"line":533,"column":1,"offset":15724},"end":{"line":533,"column":41,"offset":15764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Typically when we do programming, we have problems. Solving the problem typically need a step-by -step approach. Common sense tells us that to solve a complex problem, we break it into smaller parts, and solve each part one by one. Here is how any good programmer worth her salt, would solve a problem:","position":{"start":{"line":535,"column":1,"offset":15768},"end":{"line":535,"column":303,"offset":16070}}}],"position":{"start":{"line":535,"column":1,"offset":15768},"end":{"line":535,"column":303,"offset":16070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Simplify the problem, by breaking it into sub-problems","position":{"start":{"line":537,"column":5,"offset":16078},"end":{"line":537,"column":59,"offset":16132}}}],"position":{"start":{"line":537,"column":1,"offset":16074},"end":{"line":537,"column":59,"offset":16132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Solve the sub-problems in stages ","position":{"start":{"line":538,"column":5,"offset":16138},"end":{"line":538,"column":38,"offset":16171}}},{"type":"text","value":"(","position":{"start":{"line":538,"column":38,"offset":16171},"end":{"line":538,"column":40,"offset":16173}}},{"type":"text","value":"in some order","position":{"start":{"line":538,"column":40,"offset":16173},"end":{"line":538,"column":53,"offset":16186}}},{"type":"text","value":")","position":{"start":{"line":538,"column":53,"offset":16186},"end":{"line":538,"column":55,"offset":16188}}},{"type":"text","value":", using the language","position":{"start":{"line":538,"column":55,"offset":16188},"end":{"line":538,"column":75,"offset":16208}}}],"position":{"start":{"line":538,"column":1,"offset":16134},"end":{"line":538,"column":75,"offset":16208}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Combine these solutions to get a final solution","position":{"start":{"line":539,"column":5,"offset":16214},"end":{"line":539,"column":52,"offset":16261}}}],"position":{"start":{"line":539,"column":1,"offset":16210},"end":{"line":539,"column":52,"offset":16261}}},{"type":"text","value":"\n"}],"position":{"start":{"line":537,"column":1,"offset":16074},"end":{"line":539,"column":52,"offset":16261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":541,"column":1,"offset":16265},"end":{"line":541,"column":5,"offset":16269}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"PMT-Challenge","position":{"start":{"line":541,"column":6,"offset":16270},"end":{"line":541,"column":19,"offset":16283}}}],"position":{"start":{"line":541,"column":5,"offset":16269},"end":{"line":541,"column":20,"offset":16284}}},{"type":"text","value":" is no different! Now how do we break it down, and where do we really start? Once again, your common sense will reveal a solution. As a first step, we could get the computer to calculate say, ","position":{"start":{"line":541,"column":20,"offset":16284},"end":{"line":541,"column":212,"offset":16476}}},{"type":"raw","value":"<code class=\"language-text\">5 * 3</code>","position":{"start":{"line":541,"column":212,"offset":16476},"end":{"line":541,"column":219,"offset":16483}}},{"type":"text","value":". The second thing we can do, is to try and print the calculated value, in a manner similar to ","position":{"start":{"line":541,"column":219,"offset":16483},"end":{"line":541,"column":314,"offset":16578}}},{"type":"raw","value":"<code class=\"language-text\">5 * 3 = 15</code>","position":{"start":{"line":541,"column":314,"offset":16578},"end":{"line":541,"column":326,"offset":16590}}},{"type":"text","value":". Then, we could repeat what we just did, to print out all the entries of the ","position":{"start":{"line":541,"column":326,"offset":16590},"end":{"line":541,"column":404,"offset":16668}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":541,"column":404,"offset":16668},"end":{"line":541,"column":407,"offset":16671}}},{"type":"text","value":" multiplication table. Let's put it down a little more formally:","position":{"start":{"line":541,"column":407,"offset":16671},"end":{"line":541,"column":471,"offset":16735}}}],"position":{"start":{"line":541,"column":1,"offset":16265},"end":{"line":541,"column":471,"offset":16735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is how our draft steps look like","position":{"start":{"line":543,"column":1,"offset":16739},"end":{"line":543,"column":38,"offset":16776}}}],"position":{"start":{"line":543,"column":1,"offset":16739},"end":{"line":543,"column":38,"offset":16776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Calculate ","position":{"start":{"line":545,"column":5,"offset":16784},"end":{"line":545,"column":15,"offset":16794}}},{"type":"raw","value":"<code class=\"language-text\">5 * 3</code>","position":{"start":{"line":545,"column":15,"offset":16794},"end":{"line":545,"column":22,"offset":16801}}},{"type":"text","value":" and print result as ","position":{"start":{"line":545,"column":22,"offset":16801},"end":{"line":545,"column":43,"offset":16822}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":545,"column":43,"offset":16822},"end":{"line":545,"column":47,"offset":16826}}}],"position":{"start":{"line":545,"column":1,"offset":16780},"end":{"line":545,"column":47,"offset":16826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Print ","position":{"start":{"line":546,"column":5,"offset":16832},"end":{"line":546,"column":11,"offset":16838}}},{"type":"raw","value":"<code class=\"language-text\">5 * 3 = 15</code>","position":{"start":{"line":546,"column":11,"offset":16838},"end":{"line":546,"column":23,"offset":16850}}},{"type":"text","value":" ","position":{"start":{"line":546,"column":23,"offset":16850},"end":{"line":546,"column":24,"offset":16851}}},{"type":"text","value":"(","position":{"start":{"line":546,"column":24,"offset":16851},"end":{"line":546,"column":26,"offset":16853}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":546,"column":26,"offset":16853},"end":{"line":546,"column":30,"offset":16857}}},{"type":"text","value":" is result of previous calculation","position":{"start":{"line":546,"column":30,"offset":16857},"end":{"line":546,"column":64,"offset":16891}}},{"type":"text","value":")","position":{"start":{"line":546,"column":64,"offset":16891},"end":{"line":546,"column":66,"offset":16893}}}],"position":{"start":{"line":546,"column":1,"offset":16828},"end":{"line":546,"column":66,"offset":16893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Do this ten times, once for each table entry ","position":{"start":{"line":547,"column":5,"offset":16899},"end":{"line":547,"column":50,"offset":16944}}},{"type":"text","value":"(","position":{"start":{"line":547,"column":50,"offset":16944},"end":{"line":547,"column":52,"offset":16946}}},{"type":"text","value":"going from ","position":{"start":{"line":547,"column":52,"offset":16946},"end":{"line":547,"column":63,"offset":16957}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":547,"column":63,"offset":16957},"end":{"line":547,"column":66,"offset":16960}}},{"type":"text","value":" to ","position":{"start":{"line":547,"column":66,"offset":16960},"end":{"line":547,"column":70,"offset":16964}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":547,"column":70,"offset":16964},"end":{"line":547,"column":74,"offset":16968}}},{"type":"text","value":")","position":{"start":{"line":547,"column":74,"offset":16968},"end":{"line":547,"column":76,"offset":16970}}}],"position":{"start":{"line":547,"column":1,"offset":16895},"end":{"line":547,"column":76,"offset":16970}}},{"type":"text","value":"\n"}],"position":{"start":{"line":545,"column":1,"offset":16780},"end":{"line":547,"column":76,"offset":16970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start with that kind of a game plan, and see where it takes us.","position":{"start":{"line":549,"column":1,"offset":16974},"end":{"line":549,"column":70,"offset":17043}}}],"position":{"start":{"line":549,"column":1,"offset":16974},"end":{"line":549,"column":70,"offset":17043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":551,"column":3,"offset":17049},"end":{"line":551,"column":10,"offset":17056}}}],"position":{"start":{"line":551,"column":1,"offset":17047},"end":{"line":551,"column":12,"offset":17058}}}],"position":{"start":{"line":551,"column":1,"offset":17047},"end":{"line":551,"column":12,"offset":17058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":553,"column":1,"offset":17062},"end":{"line":553,"column":18,"offset":17079}}}],"position":{"start":{"line":553,"column":1,"offset":17062},"end":{"line":553,"column":18,"offset":17079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned that breaking down a problem into sub-problems is a great help","position":{"start":{"line":555,"column":5,"offset":17087},"end":{"line":555,"column":75,"offset":17157}}}],"position":{"start":{"line":555,"column":1,"offset":17083},"end":{"line":555,"column":75,"offset":17157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Found a way to break down the ","position":{"start":{"line":556,"column":5,"offset":17163},"end":{"line":556,"column":35,"offset":17193}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"PMT-Challenge","position":{"start":{"line":556,"column":36,"offset":17194},"end":{"line":556,"column":49,"offset":17207}}}],"position":{"start":{"line":556,"column":35,"offset":17193},"end":{"line":556,"column":50,"offset":17208}}},{"type":"text","value":" problem","position":{"start":{"line":556,"column":50,"offset":17208},"end":{"line":556,"column":58,"offset":17216}}}],"position":{"start":{"line":556,"column":1,"offset":17159},"end":{"line":556,"column":58,"offset":17216}}},{"type":"text","value":"\n"}],"position":{"start":{"line":555,"column":1,"offset":17083},"end":{"line":556,"column":58,"offset":17216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 03: Introducing Operators And Expressions","position":{"start":{"line":558,"column":3,"offset":17222},"end":{"line":558,"column":49,"offset":17268}}}],"position":{"start":{"line":558,"column":1,"offset":17220},"end":{"line":558,"column":51,"offset":17270}}}],"position":{"start":{"line":558,"column":1,"offset":17220},"end":{"line":558,"column":51,"offset":17270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's focus on solving the first sub-problem of ","position":{"start":{"line":560,"column":1,"offset":17274},"end":{"line":560,"column":49,"offset":17322}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"PMT-Challenge","position":{"start":{"line":560,"column":50,"offset":17323},"end":{"line":560,"column":63,"offset":17336}}}],"position":{"start":{"line":560,"column":49,"offset":17322},"end":{"line":560,"column":64,"offset":17337}}},{"type":"text","value":", the numeric computation. We want the computer to calculate ","position":{"start":{"line":560,"column":64,"offset":17337},"end":{"line":560,"column":125,"offset":17398}}},{"type":"raw","value":"<code class=\"language-text\">5 * 5</code>","position":{"start":{"line":560,"column":125,"offset":17398},"end":{"line":560,"column":132,"offset":17405}}},{"type":"text","value":" for example, and print ","position":{"start":{"line":560,"column":132,"offset":17405},"end":{"line":560,"column":156,"offset":17429}}},{"type":"raw","value":"<code class=\"language-text\">25</code>","position":{"start":{"line":560,"column":156,"offset":17429},"end":{"line":560,"column":160,"offset":17433}}},{"type":"text","value":" for us. How do we get it to do that? That's what we would be looking at in this step.","position":{"start":{"line":560,"column":160,"offset":17433},"end":{"line":560,"column":246,"offset":17519}}}],"position":{"start":{"line":560,"column":1,"offset":17274},"end":{"line":560,"column":246,"offset":17519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01: Introducing Operators","position":{"start":{"line":562,"column":3,"offset":17525},"end":{"line":562,"column":36,"offset":17558}}}],"position":{"start":{"line":562,"column":1,"offset":17523},"end":{"line":562,"column":38,"offset":17560}}}],"position":{"start":{"line":562,"column":1,"offset":17523},"end":{"line":562,"column":38,"offset":17560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Launch up Python shell. We want to calculate ","position":{"start":{"line":564,"column":1,"offset":17564},"end":{"line":564,"column":46,"offset":17609}}},{"type":"raw","value":"<code class=\"language-text\">5 * 5</code>","position":{"start":{"line":564,"column":46,"offset":17609},"end":{"line":564,"column":53,"offset":17616}}},{"type":"text","value":". How do we do that?","position":{"start":{"line":564,"column":53,"offset":17616},"end":{"line":564,"column":73,"offset":17636}}}],"position":{"start":{"line":564,"column":1,"offset":17564},"end":{"line":564,"column":73,"offset":17636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Using our knowledge of school math, let's try ","position":{"start":{"line":566,"column":1,"offset":17640},"end":{"line":566,"column":47,"offset":17686}}},{"type":"raw","value":"<code class=\"language-text\">5 X 5</code>","position":{"start":{"line":566,"column":47,"offset":17686},"end":{"line":566,"column":54,"offset":17693}}},{"type":"text","value":".","position":{"start":{"line":566,"column":54,"offset":17693},"end":{"line":566,"column":55,"offset":17694}}}],"position":{"start":{"line":566,"column":1,"offset":17640},"end":{"line":566,"column":55,"offset":17694}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> X <span class=\"token number\">5</span>\n    File <span class=\"token string\">\"&lt; stdin >\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n    <span class=\"token number\">5</span> X <span class=\"token number\">5</span>\n      <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax</code></pre></div>","position":{"start":{"line":568,"column":1,"offset":17698},"end":{"line":574,"column":4,"offset":17810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Python Shell hits back at us, saying \"","position":{"start":{"line":576,"column":1,"offset":17814},"end":{"line":576,"column":43,"offset":17856}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"invalid syntax","position":{"start":{"line":576,"column":44,"offset":17857},"end":{"line":576,"column":58,"offset":17871}}}],"position":{"start":{"line":576,"column":43,"offset":17856},"end":{"line":576,"column":59,"offset":17872}}},{"type":"text","value":"\". This is how Python complains, when it doesn't fully understand the code you type in. Here, it says our code has a \"","position":{"start":{"line":576,"column":59,"offset":17872},"end":{"line":576,"column":177,"offset":17990}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"SyntaxError","position":{"start":{"line":576,"column":179,"offset":17992},"end":{"line":576,"column":190,"offset":18003}}}],"position":{"start":{"line":576,"column":177,"offset":17990},"end":{"line":576,"column":192,"offset":18005}}},{"type":"text","value":"\".","position":{"start":{"line":576,"column":192,"offset":18005},"end":{"line":576,"column":194,"offset":18007}}}],"position":{"start":{"line":576,"column":1,"offset":17814},"end":{"line":576,"column":194,"offset":18007}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The reason why it complains, is because '","position":{"start":{"line":578,"column":1,"offset":18011},"end":{"line":578,"column":42,"offset":18052}}},{"type":"raw","value":"<code class=\"language-text\">X</code>","position":{"start":{"line":578,"column":42,"offset":18052},"end":{"line":578,"column":45,"offset":18055}}},{"type":"text","value":"' is not a valid ","position":{"start":{"line":578,"column":45,"offset":18055},"end":{"line":578,"column":62,"offset":18072}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"operator","position":{"start":{"line":578,"column":64,"offset":18074},"end":{"line":578,"column":72,"offset":18082}}}],"position":{"start":{"line":578,"column":62,"offset":18072},"end":{"line":578,"column":74,"offset":18084}}},{"type":"text","value":" in Python.","position":{"start":{"line":578,"column":74,"offset":18084},"end":{"line":578,"column":85,"offset":18095}}}],"position":{"start":{"line":578,"column":1,"offset":18011},"end":{"line":578,"column":85,"offset":18095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The way you can do multiplication is by using the '","position":{"start":{"line":580,"column":1,"offset":18099},"end":{"line":580,"column":52,"offset":18150}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":580,"column":52,"offset":18150},"end":{"line":580,"column":55,"offset":18153}}},{"type":"text","value":"' ","position":{"start":{"line":580,"column":55,"offset":18153},"end":{"line":580,"column":57,"offset":18155}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"operator","position":{"start":{"line":580,"column":58,"offset":18156},"end":{"line":580,"column":66,"offset":18164}}}],"position":{"start":{"line":580,"column":57,"offset":18155},"end":{"line":580,"column":67,"offset":18165}}},{"type":"text","value":" .","position":{"start":{"line":580,"column":67,"offset":18165},"end":{"line":580,"column":69,"offset":18167}}}],"position":{"start":{"line":580,"column":1,"offset":18099},"end":{"line":580,"column":69,"offset":18167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"\"","position":{"start":{"line":582,"column":1,"offset":18171},"end":{"line":582,"column":2,"offset":18172}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"5 into 5","position":{"start":{"line":582,"column":3,"offset":18173},"end":{"line":582,"column":11,"offset":18181}}}],"position":{"start":{"line":582,"column":2,"offset":18172},"end":{"line":582,"column":12,"offset":18182}}},{"type":"text","value":"\" is achieved by the code ","position":{"start":{"line":582,"column":12,"offset":18182},"end":{"line":582,"column":38,"offset":18208}}},{"type":"raw","value":"<code class=\"language-text\">5 * 5</code>","position":{"start":{"line":582,"column":38,"offset":18208},"end":{"line":582,"column":45,"offset":18215}}},{"type":"text","value":", and you can see the result ","position":{"start":{"line":582,"column":45,"offset":18215},"end":{"line":582,"column":74,"offset":18244}}},{"type":"raw","value":"<code class=\"language-text\">25</code>","position":{"start":{"line":582,"column":74,"offset":18244},"end":{"line":582,"column":78,"offset":18248}}},{"type":"text","value":" being printed. Similarly, ","position":{"start":{"line":582,"column":78,"offset":18248},"end":{"line":582,"column":105,"offset":18275}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6</code>","position":{"start":{"line":582,"column":105,"offset":18275},"end":{"line":582,"column":112,"offset":18282}}},{"type":"text","value":" gives us ","position":{"start":{"line":582,"column":112,"offset":18282},"end":{"line":582,"column":122,"offset":18292}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":582,"column":122,"offset":18292},"end":{"line":582,"column":126,"offset":18296}}},{"type":"text","value":".","position":{"start":{"line":582,"column":126,"offset":18296},"end":{"line":582,"column":127,"offset":18297}}}],"position":{"start":{"line":582,"column":1,"offset":18171},"end":{"line":582,"column":127,"offset":18297}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span>\n    <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":584,"column":1,"offset":18301},"end":{"line":587,"column":4,"offset":18338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are a wide range of other operators in Python:","position":{"start":{"line":589,"column":1,"offset":18342},"end":{"line":589,"column":53,"offset":18394}}}],"position":{"start":{"line":589,"column":1,"offset":18342},"end":{"line":589,"column":53,"offset":18394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">5 + 6</code>","position":{"start":{"line":591,"column":5,"offset":18402},"end":{"line":591,"column":12,"offset":18409}}},{"type":"text","value":" gives a result of ","position":{"start":{"line":591,"column":12,"offset":18409},"end":{"line":591,"column":31,"offset":18428}}},{"type":"raw","value":"<code class=\"language-text\">11</code>","position":{"start":{"line":591,"column":31,"offset":18428},"end":{"line":591,"column":35,"offset":18432}}},{"type":"text","value":".","position":{"start":{"line":591,"column":35,"offset":18432},"end":{"line":591,"column":36,"offset":18433}}}],"position":{"start":{"line":591,"column":1,"offset":18398},"end":{"line":591,"column":36,"offset":18433}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">5 - 6</code>","position":{"start":{"line":592,"column":5,"offset":18439},"end":{"line":592,"column":12,"offset":18446}}},{"type":"text","value":" leads to ","position":{"start":{"line":592,"column":12,"offset":18446},"end":{"line":592,"column":22,"offset":18456}}},{"type":"raw","value":"<code class=\"language-text\">-1</code>","position":{"start":{"line":592,"column":22,"offset":18456},"end":{"line":592,"column":26,"offset":18460}}},{"type":"text","value":".","position":{"start":{"line":592,"column":26,"offset":18460},"end":{"line":592,"column":27,"offset":18461}}}],"position":{"start":{"line":592,"column":1,"offset":18435},"end":{"line":592,"column":27,"offset":18461}}},{"type":"text","value":"\n"}],"position":{"start":{"line":591,"column":1,"offset":18398},"end":{"line":592,"column":27,"offset":18461}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">   <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span>\n   <span class=\"token number\">11</span>\n   <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">6</span>\n   <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":594,"column":1,"offset":18465},"end":{"line":599,"column":5,"offset":18527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">10 / 2</code>","position":{"start":{"line":601,"column":1,"offset":18531},"end":{"line":601,"column":9,"offset":18539}}},{"type":"text","value":", gives an output of ","position":{"start":{"line":601,"column":9,"offset":18539},"end":{"line":601,"column":30,"offset":18560}}},{"type":"raw","value":"<code class=\"language-text\">5.0</code>","position":{"start":{"line":601,"column":30,"offset":18560},"end":{"line":601,"column":35,"offset":18565}}},{"type":"text","value":" . There is one interesting operator, ","position":{"start":{"line":601,"column":35,"offset":18565},"end":{"line":601,"column":73,"offset":18603}}},{"type":"raw","value":"<code class=\"language-text\">**</code>","position":{"start":{"line":601,"column":73,"offset":18603},"end":{"line":601,"column":77,"offset":18607}}},{"type":"text","value":". Let's try ","position":{"start":{"line":601,"column":77,"offset":18607},"end":{"line":601,"column":89,"offset":18619}}},{"type":"raw","value":"<code class=\"language-text\">10 ** 3</code>","position":{"start":{"line":601,"column":89,"offset":18619},"end":{"line":601,"column":98,"offset":18628}}},{"type":"text","value":". We ran this code, and the result we get is ","position":{"start":{"line":601,"column":98,"offset":18628},"end":{"line":601,"column":143,"offset":18673}}},{"type":"raw","value":"<code class=\"language-text\">1000</code>","position":{"start":{"line":601,"column":143,"offset":18673},"end":{"line":601,"column":149,"offset":18679}}},{"type":"text","value":". Yes you guessed right, the operator performs \"to the power of\". \"","position":{"start":{"line":601,"column":149,"offset":18679},"end":{"line":601,"column":216,"offset":18746}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":601,"column":216,"offset":18746},"end":{"line":601,"column":220,"offset":18750}}},{"type":"text","value":" to the power of ","position":{"start":{"line":601,"column":220,"offset":18750},"end":{"line":601,"column":237,"offset":18767}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":601,"column":237,"offset":18767},"end":{"line":601,"column":240,"offset":18770}}},{"type":"text","value":"\" is ","position":{"start":{"line":601,"column":240,"offset":18770},"end":{"line":601,"column":245,"offset":18775}}},{"type":"raw","value":"<code class=\"language-text\">10 * 10 * 10</code>","position":{"start":{"line":601,"column":245,"offset":18775},"end":{"line":601,"column":259,"offset":18789}}},{"type":"text","value":", or ","position":{"start":{"line":601,"column":259,"offset":18789},"end":{"line":601,"column":264,"offset":18794}}},{"type":"raw","value":"<code class=\"language-text\">1000</code>","position":{"start":{"line":601,"column":264,"offset":18794},"end":{"line":601,"column":270,"offset":18800}}},{"type":"text","value":".","position":{"start":{"line":601,"column":270,"offset":18800},"end":{"line":601,"column":271,"offset":18801}}}],"position":{"start":{"line":601,"column":1,"offset":18531},"end":{"line":601,"column":271,"offset":18801}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n    <span class=\"token number\">5.0</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">3</span>\n    <span class=\"token number\">1000</span></code></pre></div>","position":{"start":{"line":603,"column":1,"offset":18805},"end":{"line":608,"column":4,"offset":18871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another interesting operator is ","position":{"start":{"line":610,"column":1,"offset":18875},"end":{"line":610,"column":33,"offset":18907}}},{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":610,"column":33,"offset":18907},"end":{"line":610,"column":36,"offset":18910}}},{"type":"text","value":", called \"","position":{"start":{"line":610,"column":36,"offset":18910},"end":{"line":610,"column":46,"offset":18920}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"modulo","position":{"start":{"line":610,"column":47,"offset":18921},"end":{"line":610,"column":53,"offset":18927}}}],"position":{"start":{"line":610,"column":46,"offset":18920},"end":{"line":610,"column":54,"offset":18928}}},{"type":"text","value":"\", which computes the remainder on integer division. If we do ","position":{"start":{"line":610,"column":54,"offset":18928},"end":{"line":610,"column":116,"offset":18990}}},{"type":"raw","value":"<code class=\"language-text\">10 % 3</code>","position":{"start":{"line":610,"column":116,"offset":18990},"end":{"line":610,"column":124,"offset":18998}}},{"type":"text","value":", what is the remainder when ","position":{"start":{"line":610,"column":124,"offset":18998},"end":{"line":610,"column":153,"offset":19027}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":610,"column":153,"offset":19027},"end":{"line":610,"column":157,"offset":19031}}},{"type":"text","value":" is divided by ","position":{"start":{"line":610,"column":157,"offset":19031},"end":{"line":610,"column":172,"offset":19046}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":610,"column":172,"offset":19046},"end":{"line":610,"column":175,"offset":19049}}},{"type":"text","value":"? ","position":{"start":{"line":610,"column":175,"offset":19049},"end":{"line":610,"column":177,"offset":19051}}},{"type":"raw","value":"<code class=\"language-text\">3 * 3</code>","position":{"start":{"line":610,"column":177,"offset":19051},"end":{"line":610,"column":184,"offset":19058}}},{"type":"text","value":" is ","position":{"start":{"line":610,"column":184,"offset":19058},"end":{"line":610,"column":188,"offset":19062}}},{"type":"raw","value":"<code class=\"language-text\">9</code>","position":{"start":{"line":610,"column":188,"offset":19062},"end":{"line":610,"column":191,"offset":19065}}},{"type":"text","value":", and ","position":{"start":{"line":610,"column":191,"offset":19065},"end":{"line":610,"column":197,"offset":19071}}},{"type":"raw","value":"<code class=\"language-text\">10 - 9</code>","position":{"start":{"line":610,"column":197,"offset":19071},"end":{"line":610,"column":205,"offset":19079}}},{"type":"text","value":" is ","position":{"start":{"line":610,"column":205,"offset":19079},"end":{"line":610,"column":209,"offset":19083}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":610,"column":209,"offset":19083},"end":{"line":610,"column":212,"offset":19086}}},{"type":"text","value":", which is what ","position":{"start":{"line":610,"column":212,"offset":19086},"end":{"line":610,"column":228,"offset":19102}}},{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":610,"column":228,"offset":19102},"end":{"line":610,"column":231,"offset":19105}}},{"type":"text","value":" returns in this case.","position":{"start":{"line":610,"column":231,"offset":19105},"end":{"line":610,"column":253,"offset":19127}}}],"position":{"start":{"line":610,"column":1,"offset":18875},"end":{"line":610,"column":253,"offset":19127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at some terminology:","position":{"start":{"line":612,"column":1,"offset":19131},"end":{"line":612,"column":32,"offset":19162}}}],"position":{"start":{"line":612,"column":1,"offset":19131},"end":{"line":612,"column":32,"offset":19162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Whatever pieces of code we gave Python shell to run, are called ","position":{"start":{"line":614,"column":5,"offset":19170},"end":{"line":614,"column":69,"offset":19234}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"expressions","position":{"start":{"line":614,"column":71,"offset":19236},"end":{"line":614,"column":82,"offset":19247}}}],"position":{"start":{"line":614,"column":69,"offset":19234},"end":{"line":614,"column":84,"offset":19249}}},{"type":"text","value":". So, ","position":{"start":{"line":614,"column":84,"offset":19249},"end":{"line":614,"column":90,"offset":19255}}},{"type":"raw","value":"<code class=\"language-text\">5 * 5</code>","position":{"start":{"line":614,"column":90,"offset":19255},"end":{"line":614,"column":97,"offset":19262}}},{"type":"text","value":", ","position":{"start":{"line":614,"column":97,"offset":19262},"end":{"line":614,"column":99,"offset":19264}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6</code>","position":{"start":{"line":614,"column":99,"offset":19264},"end":{"line":614,"column":106,"offset":19271}}},{"type":"text","value":" and ","position":{"start":{"line":614,"column":106,"offset":19271},"end":{"line":614,"column":111,"offset":19276}}},{"type":"raw","value":"<code class=\"language-text\">5 - 6</code>","position":{"start":{"line":614,"column":111,"offset":19276},"end":{"line":614,"column":118,"offset":19283}}},{"type":"text","value":" are all ","position":{"start":{"line":614,"column":118,"offset":19283},"end":{"line":614,"column":127,"offset":19292}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"expressions","position":{"start":{"line":614,"column":128,"offset":19293},"end":{"line":614,"column":139,"offset":19304}}}],"position":{"start":{"line":614,"column":127,"offset":19292},"end":{"line":614,"column":140,"offset":19305}}},{"type":"text","value":". An expression is composed of ","position":{"start":{"line":614,"column":140,"offset":19305},"end":{"line":614,"column":171,"offset":19336}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"operators","position":{"start":{"line":614,"column":172,"offset":19337},"end":{"line":614,"column":181,"offset":19346}}}],"position":{"start":{"line":614,"column":171,"offset":19336},"end":{"line":614,"column":182,"offset":19347}}},{"type":"text","value":" and ","position":{"start":{"line":614,"column":182,"offset":19347},"end":{"line":614,"column":187,"offset":19352}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"operands","position":{"start":{"line":614,"column":189,"offset":19354},"end":{"line":614,"column":197,"offset":19362}}}],"position":{"start":{"line":614,"column":187,"offset":19352},"end":{"line":614,"column":199,"offset":19364}}},{"type":"text","value":".","position":{"start":{"line":614,"column":199,"offset":19364},"end":{"line":614,"column":200,"offset":19365}}}],"position":{"start":{"line":614,"column":1,"offset":19166},"end":{"line":614,"column":200,"offset":19365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In the expression ","position":{"start":{"line":615,"column":5,"offset":19371},"end":{"line":615,"column":23,"offset":19389}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6</code>","position":{"start":{"line":615,"column":23,"offset":19389},"end":{"line":615,"column":30,"offset":19396}}},{"type":"text","value":", the two values ","position":{"start":{"line":615,"column":30,"offset":19396},"end":{"line":615,"column":47,"offset":19413}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":615,"column":47,"offset":19413},"end":{"line":615,"column":50,"offset":19416}}},{"type":"text","value":" and ","position":{"start":{"line":615,"column":50,"offset":19416},"end":{"line":615,"column":55,"offset":19421}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":615,"column":55,"offset":19421},"end":{"line":615,"column":58,"offset":19424}}},{"type":"text","value":" are called operands, and the ","position":{"start":{"line":615,"column":58,"offset":19424},"end":{"line":615,"column":88,"offset":19454}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":615,"column":88,"offset":19454},"end":{"line":615,"column":91,"offset":19457}}},{"type":"text","value":" operator ","position":{"start":{"line":615,"column":91,"offset":19457},"end":{"line":615,"column":101,"offset":19467}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"operates","position":{"start":{"line":615,"column":102,"offset":19468},"end":{"line":615,"column":110,"offset":19476}}}],"position":{"start":{"line":615,"column":101,"offset":19467},"end":{"line":615,"column":111,"offset":19477}}},{"type":"text","value":" on them.","position":{"start":{"line":615,"column":111,"offset":19477},"end":{"line":615,"column":120,"offset":19486}}}],"position":{"start":{"line":615,"column":1,"offset":19367},"end":{"line":615,"column":120,"offset":19486}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The values ","position":{"start":{"line":616,"column":5,"offset":19492},"end":{"line":616,"column":16,"offset":19503}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":616,"column":16,"offset":19503},"end":{"line":616,"column":19,"offset":19506}}},{"type":"text","value":" and ","position":{"start":{"line":616,"column":19,"offset":19506},"end":{"line":616,"column":24,"offset":19511}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":616,"column":24,"offset":19511},"end":{"line":616,"column":27,"offset":19514}}},{"type":"text","value":" are ","position":{"start":{"line":616,"column":27,"offset":19514},"end":{"line":616,"column":32,"offset":19519}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"literals","position":{"start":{"line":616,"column":34,"offset":19521},"end":{"line":616,"column":42,"offset":19529}}}],"position":{"start":{"line":616,"column":32,"offset":19519},"end":{"line":616,"column":44,"offset":19531}}},{"type":"text","value":", because those are constants which cannot be changed.","position":{"start":{"line":616,"column":44,"offset":19531},"end":{"line":616,"column":98,"offset":19585}}}],"position":{"start":{"line":616,"column":1,"offset":19488},"end":{"line":616,"column":98,"offset":19585}}},{"type":"text","value":"\n"}],"position":{"start":{"line":614,"column":1,"offset":19166},"end":{"line":616,"column":98,"offset":19585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The cool thing about Python, is that you can even have expressions with multiple operators. Therefore, you can form an expression with ","position":{"start":{"line":618,"column":1,"offset":19589},"end":{"line":618,"column":136,"offset":19724}}},{"type":"raw","value":"<code class=\"language-text\">5 + 5 + 5</code>","position":{"start":{"line":618,"column":136,"offset":19724},"end":{"line":618,"column":147,"offset":19735}}},{"type":"text","value":", which evaluates to ","position":{"start":{"line":618,"column":147,"offset":19735},"end":{"line":618,"column":168,"offset":19756}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":618,"column":168,"offset":19756},"end":{"line":618,"column":172,"offset":19760}}},{"type":"text","value":". This is an expression which has three operands, and two ","position":{"start":{"line":618,"column":172,"offset":19760},"end":{"line":618,"column":230,"offset":19818}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":618,"column":230,"offset":19818},"end":{"line":618,"column":233,"offset":19821}}},{"type":"text","value":" operators. You can even have expressions with different types of operators, such as in ","position":{"start":{"line":618,"column":233,"offset":19821},"end":{"line":618,"column":321,"offset":19909}}},{"type":"raw","value":"<code class=\"language-text\">5 + 5 * 5</code>","position":{"start":{"line":618,"column":321,"offset":19909},"end":{"line":618,"column":332,"offset":19920}}},{"type":"text","value":".","position":{"start":{"line":618,"column":332,"offset":19920},"end":{"line":618,"column":333,"offset":19921}}}],"position":{"start":{"line":618,"column":1,"offset":19589},"end":{"line":618,"column":333,"offset":19921}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span>\n    <span class=\"token number\">15</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\n    <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":620,"column":1,"offset":19925},"end":{"line":625,"column":4,"offset":19993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Try and play around with the expressions, and understand the output which results.","position":{"start":{"line":627,"column":1,"offset":19997},"end":{"line":627,"column":83,"offset":20079}}}],"position":{"start":{"line":627,"column":1,"offset":19997},"end":{"line":627,"column":83,"offset":20079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":629,"column":3,"offset":20085},"end":{"line":629,"column":10,"offset":20092}}}],"position":{"start":{"line":629,"column":1,"offset":20083},"end":{"line":629,"column":12,"offset":20094}}}],"position":{"start":{"line":629,"column":1,"offset":20083},"end":{"line":629,"column":12,"offset":20094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":631,"column":1,"offset":20098},"end":{"line":631,"column":18,"offset":20115}}}],"position":{"start":{"line":631,"column":1,"offset":20098},"end":{"line":631,"column":18,"offset":20115}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned how to give code input to the Python Shell","position":{"start":{"line":633,"column":5,"offset":20123},"end":{"line":633,"column":55,"offset":20173}}}],"position":{"start":{"line":633,"column":1,"offset":20119},"end":{"line":633,"column":55,"offset":20173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood that Python has a predefined set of operators","position":{"start":{"line":634,"column":5,"offset":20179},"end":{"line":634,"column":61,"offset":20235}}}],"position":{"start":{"line":634,"column":1,"offset":20175},"end":{"line":634,"column":61,"offset":20235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Used a few types of basic operators and their operands, to form expressions","position":{"start":{"line":635,"column":5,"offset":20241},"end":{"line":635,"column":80,"offset":20316}}}],"position":{"start":{"line":635,"column":1,"offset":20237},"end":{"line":635,"column":80,"offset":20316}}},{"type":"text","value":"\n"}],"position":{"start":{"line":633,"column":1,"offset":20119},"end":{"line":635,"column":80,"offset":20316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 04: Programming Exercise IN-PE-01","position":{"start":{"line":637,"column":3,"offset":20322},"end":{"line":637,"column":41,"offset":20360}}}],"position":{"start":{"line":637,"column":1,"offset":20320},"end":{"line":637,"column":43,"offset":20362}}}],"position":{"start":{"line":637,"column":1,"offset":20320},"end":{"line":637,"column":43,"offset":20362}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At this stage, your smile tells us that you enjoy evaluating Python expressions. What if we tickle your mind a bit, to make sure it hasn't fallen asleep? Here is your first programming exercise.","position":{"start":{"line":639,"column":1,"offset":20366},"end":{"line":639,"column":195,"offset":20560}}}],"position":{"start":{"line":639,"column":1,"offset":20366},"end":{"line":639,"column":195,"offset":20560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":641,"column":3,"offset":20566},"end":{"line":641,"column":12,"offset":20575}}}],"position":{"start":{"line":641,"column":1,"offset":20564},"end":{"line":641,"column":14,"offset":20577}}}],"position":{"start":{"line":641,"column":1,"offset":20564},"end":{"line":641,"column":14,"offset":20577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write an expression to calculate the number of minutes in a day.","position":{"start":{"line":643,"column":4,"offset":20584},"end":{"line":643,"column":68,"offset":20648}}}],"position":{"start":{"line":643,"column":1,"offset":20581},"end":{"line":643,"column":68,"offset":20648}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write an expression to calculate the number of seconds in a day.","position":{"start":{"line":644,"column":4,"offset":20653},"end":{"line":644,"column":68,"offset":20717}}}],"position":{"start":{"line":644,"column":1,"offset":20650},"end":{"line":644,"column":68,"offset":20717}}},{"type":"text","value":"\n"}],"position":{"start":{"line":643,"column":1,"offset":20581},"end":{"line":644,"column":68,"offset":20717}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":646,"column":3,"offset":20723},"end":{"line":646,"column":7,"offset":20727}}}],"position":{"start":{"line":646,"column":1,"offset":20721},"end":{"line":646,"column":9,"offset":20729}}}],"position":{"start":{"line":646,"column":1,"offset":20721},"end":{"line":646,"column":9,"offset":20729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You need to solve these problems by yourself. If you are able to work them out, that's fantastic! But if not, that's part of the learning process.","position":{"start":{"line":648,"column":1,"offset":20733},"end":{"line":648,"column":147,"offset":20879}}}],"position":{"start":{"line":648,"column":1,"offset":20733},"end":{"line":648,"column":147,"offset":20879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solutions","position":{"start":{"line":650,"column":3,"offset":20885},"end":{"line":650,"column":12,"offset":20894}}}],"position":{"start":{"line":650,"column":1,"offset":20883},"end":{"line":650,"column":14,"offset":20896}}}],"position":{"start":{"line":650,"column":1,"offset":20883},"end":{"line":650,"column":14,"offset":20896}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 1","position":{"start":{"line":652,"column":3,"offset":20902},"end":{"line":652,"column":13,"offset":20912}}}],"position":{"start":{"line":652,"column":1,"offset":20900},"end":{"line":652,"column":15,"offset":20914}}}],"position":{"start":{"line":652,"column":1,"offset":20900},"end":{"line":652,"column":15,"offset":20914}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span>\n\n    <span class=\"token number\">1440</span></code></pre></div>","position":{"start":{"line":654,"column":1,"offset":20918},"end":{"line":658,"column":4,"offset":20961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We wanted to calculate the number of minutes in a day. How do we do that? Think about this…","position":{"start":{"line":660,"column":1,"offset":20965},"end":{"line":660,"column":92,"offset":21056}}}],"position":{"start":{"line":660,"column":1,"offset":20965},"end":{"line":660,"column":92,"offset":21056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"How many number of hours are there in a day? ","position":{"start":{"line":662,"column":5,"offset":21064},"end":{"line":662,"column":50,"offset":21109}}},{"type":"raw","value":"<code class=\"language-text\">24</code>","position":{"start":{"line":662,"column":50,"offset":21109},"end":{"line":662,"column":54,"offset":21113}}},{"type":"text","value":".","position":{"start":{"line":662,"column":54,"offset":21113},"end":{"line":662,"column":55,"offset":21114}}}],"position":{"start":{"line":662,"column":1,"offset":21060},"end":{"line":662,"column":55,"offset":21114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"And how many minutes does each hour have? It's ","position":{"start":{"line":663,"column":5,"offset":21120},"end":{"line":663,"column":52,"offset":21167}}},{"type":"raw","value":"<code class=\"language-text\">60</code>","position":{"start":{"line":663,"column":52,"offset":21167},"end":{"line":663,"column":56,"offset":21171}}},{"type":"text","value":".","position":{"start":{"line":663,"column":56,"offset":21171},"end":{"line":663,"column":57,"offset":21172}}}],"position":{"start":{"line":663,"column":1,"offset":21116},"end":{"line":663,"column":57,"offset":21172}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"So if you want to find out the number of minutes in a day, it's ","position":{"start":{"line":664,"column":5,"offset":21178},"end":{"line":664,"column":69,"offset":21242}}},{"type":"raw","value":"<code class=\"language-text\">24 * 60</code>","position":{"start":{"line":664,"column":69,"offset":21242},"end":{"line":664,"column":78,"offset":21251}}},{"type":"text","value":", which is ","position":{"start":{"line":664,"column":78,"offset":21251},"end":{"line":664,"column":89,"offset":21262}}},{"type":"raw","value":"<code class=\"language-text\">1440</code>","position":{"start":{"line":664,"column":89,"offset":21262},"end":{"line":664,"column":95,"offset":21268}}},{"type":"text","value":".","position":{"start":{"line":664,"column":95,"offset":21268},"end":{"line":664,"column":96,"offset":21269}}}],"position":{"start":{"line":664,"column":1,"offset":21174},"end":{"line":664,"column":96,"offset":21269}}},{"type":"text","value":"\n"}],"position":{"start":{"line":662,"column":1,"offset":21060},"end":{"line":664,"column":96,"offset":21269}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 2","position":{"start":{"line":666,"column":3,"offset":21275},"end":{"line":666,"column":13,"offset":21285}}}],"position":{"start":{"line":666,"column":1,"offset":21273},"end":{"line":666,"column":15,"offset":21287}}}],"position":{"start":{"line":666,"column":1,"offset":21273},"end":{"line":666,"column":15,"offset":21287}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span>\n\n    <span class=\"token number\">86400</span></code></pre></div>","position":{"start":{"line":668,"column":1,"offset":21291},"end":{"line":672,"column":4,"offset":21340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How many seconds are there in a day?","position":{"start":{"line":674,"column":1,"offset":21344},"end":{"line":674,"column":37,"offset":21380}}}],"position":{"start":{"line":674,"column":1,"offset":21344},"end":{"line":674,"column":37,"offset":21380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Let's start with the number of hours, ","position":{"start":{"line":676,"column":5,"offset":21388},"end":{"line":676,"column":43,"offset":21426}}},{"type":"raw","value":"<code class=\"language-text\">24</code>","position":{"start":{"line":676,"column":43,"offset":21426},"end":{"line":676,"column":47,"offset":21430}}},{"type":"text","value":".","position":{"start":{"line":676,"column":47,"offset":21430},"end":{"line":676,"column":48,"offset":21431}}}],"position":{"start":{"line":676,"column":1,"offset":21384},"end":{"line":676,"column":48,"offset":21431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of minutes in an hour is ","position":{"start":{"line":677,"column":5,"offset":21437},"end":{"line":677,"column":41,"offset":21473}}},{"type":"raw","value":"<code class=\"language-text\">60</code>","position":{"start":{"line":677,"column":41,"offset":21473},"end":{"line":677,"column":45,"offset":21477}}},{"type":"text","value":", and","position":{"start":{"line":677,"column":45,"offset":21477},"end":{"line":677,"column":50,"offset":21482}}}],"position":{"start":{"line":677,"column":1,"offset":21433},"end":{"line":677,"column":50,"offset":21482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of seconds in a minute is ","position":{"start":{"line":678,"column":5,"offset":21488},"end":{"line":678,"column":42,"offset":21525}}},{"type":"raw","value":"<code class=\"language-text\">60</code>","position":{"start":{"line":678,"column":42,"offset":21525},"end":{"line":678,"column":46,"offset":21529}}},{"type":"text","value":" as well.","position":{"start":{"line":678,"column":46,"offset":21529},"end":{"line":678,"column":55,"offset":21538}}}],"position":{"start":{"line":678,"column":1,"offset":21484},"end":{"line":678,"column":55,"offset":21538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"So it's ","position":{"start":{"line":679,"column":5,"offset":21544},"end":{"line":679,"column":13,"offset":21552}}},{"type":"raw","value":"<code class=\"language-text\">24 * 60 * 60</code>","position":{"start":{"line":679,"column":13,"offset":21552},"end":{"line":679,"column":27,"offset":21566}}},{"type":"text","value":", or ","position":{"start":{"line":679,"column":27,"offset":21566},"end":{"line":679,"column":32,"offset":21571}}},{"type":"raw","value":"<code class=\"language-text\">86400</code>","position":{"start":{"line":679,"column":32,"offset":21571},"end":{"line":679,"column":39,"offset":21578}}},{"type":"text","value":".","position":{"start":{"line":679,"column":39,"offset":21578},"end":{"line":679,"column":40,"offset":21579}}}],"position":{"start":{"line":679,"column":1,"offset":21540},"end":{"line":679,"column":40,"offset":21579}}},{"type":"text","value":"\n"}],"position":{"start":{"line":676,"column":1,"offset":21384},"end":{"line":679,"column":40,"offset":21579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":681,"column":3,"offset":21585},"end":{"line":681,"column":10,"offset":21592}}}],"position":{"start":{"line":681,"column":1,"offset":21583},"end":{"line":681,"column":12,"offset":21594}}}],"position":{"start":{"line":681,"column":1,"offset":21583},"end":{"line":681,"column":12,"offset":21594}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":683,"column":1,"offset":21598},"end":{"line":683,"column":18,"offset":21615}}}],"position":{"start":{"line":683,"column":1,"offset":21598},"end":{"line":683,"column":18,"offset":21615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Solved a Programming Exercise involving common scenarios, using Python code involving:","position":{"start":{"line":685,"column":5,"offset":21623},"end":{"line":685,"column":91,"offset":21709}}}],"position":{"start":{"line":685,"column":5,"offset":21623},"end":{"line":685,"column":91,"offset":21709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Expressions","position":{"start":{"line":686,"column":9,"offset":21719},"end":{"line":686,"column":20,"offset":21730}}}],"position":{"start":{"line":686,"column":5,"offset":21715},"end":{"line":686,"column":20,"offset":21730}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Operators","position":{"start":{"line":687,"column":9,"offset":21740},"end":{"line":687,"column":18,"offset":21749}}}],"position":{"start":{"line":687,"column":5,"offset":21736},"end":{"line":687,"column":18,"offset":21749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Literals","position":{"start":{"line":688,"column":9,"offset":21759},"end":{"line":688,"column":17,"offset":21767}}}],"position":{"start":{"line":688,"column":5,"offset":21755},"end":{"line":688,"column":17,"offset":21767}}},{"type":"text","value":"\n"}],"position":{"start":{"line":686,"column":5,"offset":21715},"end":{"line":688,"column":17,"offset":21767}}},{"type":"text","value":"\n"}],"position":{"start":{"line":685,"column":1,"offset":21619},"end":{"line":688,"column":17,"offset":21767}}},{"type":"text","value":"\n"}],"position":{"start":{"line":685,"column":1,"offset":21619},"end":{"line":688,"column":17,"offset":21767}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 05: Puzzles On Expressions","position":{"start":{"line":690,"column":3,"offset":21773},"end":{"line":690,"column":34,"offset":21804}}}],"position":{"start":{"line":690,"column":1,"offset":21771},"end":{"line":690,"column":36,"offset":21806}}}],"position":{"start":{"line":690,"column":1,"offset":21771},"end":{"line":690,"column":36,"offset":21806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at a few puzzles related to expressions, in this step. Before that, let's revise some of the terminology we had learned earlier.","position":{"start":{"line":692,"column":1,"offset":21810},"end":{"line":692,"column":140,"offset":21949}}}],"position":{"start":{"line":692,"column":1,"offset":21810},"end":{"line":692,"column":140,"offset":21949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">5 + 6 + 10</code>","position":{"start":{"line":694,"column":1,"offset":21953},"end":{"line":694,"column":13,"offset":21965}}},{"type":"text","value":" is an example of an expression. In this expression, ","position":{"start":{"line":694,"column":13,"offset":21965},"end":{"line":694,"column":66,"offset":22018}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":694,"column":66,"offset":22018},"end":{"line":694,"column":69,"offset":22021}}},{"type":"text","value":", ","position":{"start":{"line":694,"column":69,"offset":22021},"end":{"line":694,"column":71,"offset":22023}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":694,"column":71,"offset":22023},"end":{"line":694,"column":74,"offset":22026}}},{"type":"text","value":" and ","position":{"start":{"line":694,"column":74,"offset":22026},"end":{"line":694,"column":79,"offset":22031}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":694,"column":79,"offset":22031},"end":{"line":694,"column":83,"offset":22035}}},{"type":"text","value":" are operands. The ","position":{"start":{"line":694,"column":83,"offset":22035},"end":{"line":694,"column":102,"offset":22054}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":694,"column":102,"offset":22054},"end":{"line":694,"column":105,"offset":22057}}},{"type":"text","value":" here is the operator. You can have multiple operators in an expression. We also did mention that the operands, namely ","position":{"start":{"line":694,"column":105,"offset":22057},"end":{"line":694,"column":224,"offset":22176}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":694,"column":224,"offset":22176},"end":{"line":694,"column":228,"offset":22180}}},{"type":"text","value":", ","position":{"start":{"line":694,"column":228,"offset":22180},"end":{"line":694,"column":230,"offset":22182}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":694,"column":230,"offset":22182},"end":{"line":694,"column":233,"offset":22185}}},{"type":"text","value":" and ","position":{"start":{"line":694,"column":233,"offset":22185},"end":{"line":694,"column":238,"offset":22190}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":694,"column":238,"offset":22190},"end":{"line":694,"column":241,"offset":22193}}},{"type":"text","value":", are literals. Their values will not change.","position":{"start":{"line":694,"column":241,"offset":22193},"end":{"line":694,"column":286,"offset":22238}}}],"position":{"start":{"line":694,"column":1,"offset":21953},"end":{"line":694,"column":286,"offset":22238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here are a few puzzles coming up, to explore aspects of expressions.","position":{"start":{"line":696,"column":1,"offset":22242},"end":{"line":696,"column":69,"offset":22310}}}],"position":{"start":{"line":696,"column":1,"offset":22242},"end":{"line":696,"column":69,"offset":22310}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01: Puzzles On Expressions","position":{"start":{"line":698,"column":3,"offset":22316},"end":{"line":698,"column":37,"offset":22350}}}],"position":{"start":{"line":698,"column":1,"offset":22314},"end":{"line":698,"column":39,"offset":22352}}}],"position":{"start":{"line":698,"column":1,"offset":22314},"end":{"line":698,"column":39,"offset":22352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Think about what would happen when you do something of this kind: ","position":{"start":{"line":700,"column":1,"offset":22356},"end":{"line":700,"column":67,"offset":22422}}},{"type":"raw","value":"<code class=\"language-text\">5 $ 2</code>","position":{"start":{"line":700,"column":67,"offset":22422},"end":{"line":700,"column":74,"offset":22429}}},{"type":"text","value":". You're right, it would throw a ","position":{"start":{"line":700,"column":74,"offset":22429},"end":{"line":700,"column":107,"offset":22462}}},{"type":"raw","value":"<code class=\"language-text\">SyntaxError</code>","position":{"start":{"line":700,"column":107,"offset":22462},"end":{"line":700,"column":120,"offset":22475}}},{"type":"text","value":". When Python does not understand the code you type in, it reports an error. Here, the expression we're typing is ","position":{"start":{"line":700,"column":120,"offset":22475},"end":{"line":700,"column":234,"offset":22589}}},{"type":"raw","value":"<code class=\"language-text\">5 $ 2</code>","position":{"start":{"line":700,"column":234,"offset":22589},"end":{"line":700,"column":241,"offset":22596}}},{"type":"text","value":", which does not make sense to Python, hence the ","position":{"start":{"line":700,"column":241,"offset":22596},"end":{"line":700,"column":290,"offset":22645}}},{"type":"raw","value":"<code class=\"language-text\">SyntaxError</code>","position":{"start":{"line":700,"column":290,"offset":22645},"end":{"line":700,"column":303,"offset":22658}}},{"type":"text","value":".","position":{"start":{"line":700,"column":303,"offset":22658},"end":{"line":700,"column":304,"offset":22659}}}],"position":{"start":{"line":700,"column":1,"offset":22356},"end":{"line":700,"column":304,"offset":22659}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> $ <span class=\"token number\">2</span>\n    File <span class=\"token string\">\"&lt; stdin >\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n    <span class=\"token number\">5</span> $ <span class=\"token number\">2</span>\n    <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span>$<span class=\"token number\">2</span>\n    File <span class=\"token string\">\"&lt; stdin >\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n    <span class=\"token number\">5</span> $ <span class=\"token number\">2</span>\n    <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax</code></pre></div>","position":{"start":{"line":702,"column":1,"offset":22663},"end":{"line":713,"column":4,"offset":22867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we type in ","position":{"start":{"line":715,"column":1,"offset":22871},"end":{"line":715,"column":22,"offset":22892}}},{"type":"raw","value":"<code class=\"language-text\">5+6+10</code>","position":{"start":{"line":715,"column":22,"offset":22892},"end":{"line":715,"column":30,"offset":22900}}},{"type":"text","value":", without any spaces between the operands, and the operators. What do you think will happen? Surprisingly, the Python Shell does calculate the value!","position":{"start":{"line":715,"column":30,"offset":22900},"end":{"line":715,"column":179,"offset":23049}}}],"position":{"start":{"line":715,"column":1,"offset":22871},"end":{"line":715,"column":179,"offset":23049}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token operator\">+</span><span class=\"token number\">10</span>\n    <span class=\"token number\">21</span></code></pre></div>","position":{"start":{"line":717,"column":1,"offset":23053},"end":{"line":720,"column":4,"offset":23091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In an expression, using spaces makes it easier for you to read it, but it's not mandatory. ","position":{"start":{"line":722,"column":1,"offset":23095},"end":{"line":722,"column":92,"offset":23186}}},{"type":"raw","value":"<code class=\"language-text\">5 + 6 + 10</code>","position":{"start":{"line":722,"column":92,"offset":23186},"end":{"line":722,"column":104,"offset":23198}}},{"type":"text","value":" is easier to read than ","position":{"start":{"line":722,"column":104,"offset":23198},"end":{"line":722,"column":128,"offset":23222}}},{"type":"raw","value":"<code class=\"language-text\">5+6+10</code>","position":{"start":{"line":722,"column":128,"offset":23222},"end":{"line":722,"column":136,"offset":23230}}},{"type":"text","value":", but does not make any difference to the Python compiler.","position":{"start":{"line":722,"column":136,"offset":23230},"end":{"line":722,"column":194,"offset":23288}}}],"position":{"start":{"line":722,"column":1,"offset":23095},"end":{"line":722,"column":194,"offset":23288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The next puzzle tries to evaluate ","position":{"start":{"line":724,"column":1,"offset":23292},"end":{"line":724,"column":35,"offset":23326}}},{"type":"raw","value":"<code class=\"language-text\">5 / 2</code>","position":{"start":{"line":724,"column":35,"offset":23326},"end":{"line":724,"column":42,"offset":23333}}},{"type":"text","value":", which is \"","position":{"start":{"line":724,"column":42,"offset":23333},"end":{"line":724,"column":54,"offset":23345}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":724,"column":54,"offset":23345},"end":{"line":724,"column":57,"offset":23348}}},{"type":"text","value":" divided by ","position":{"start":{"line":724,"column":57,"offset":23348},"end":{"line":724,"column":69,"offset":23360}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":724,"column":69,"offset":23360},"end":{"line":724,"column":72,"offset":23363}}},{"type":"text","value":"\". What would be the output? ","position":{"start":{"line":724,"column":72,"offset":23363},"end":{"line":724,"column":101,"offset":23392}}},{"type":"raw","value":"<code class=\"language-text\">2.5</code>","position":{"start":{"line":724,"column":101,"offset":23392},"end":{"line":724,"column":106,"offset":23397}}},{"type":"text","value":".","position":{"start":{"line":724,"column":106,"offset":23397},"end":{"line":724,"column":107,"offset":23398}}}],"position":{"start":{"line":724,"column":1,"offset":23292},"end":{"line":724,"column":107,"offset":23398}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n    <span class=\"token number\">2.5</span></code></pre></div>","position":{"start":{"line":726,"column":1,"offset":23402},"end":{"line":729,"column":4,"offset":23438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're coming from other programming languages like Java or C, this might be a surprising result. If you try this in Java for instance, you would get ","position":{"start":{"line":731,"column":1,"offset":23442},"end":{"line":731,"column":154,"offset":23595}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":731,"column":154,"offset":23595},"end":{"line":731,"column":157,"offset":23598}}},{"type":"text","value":" as the output. Note that even though both operands are integers, the result of the ","position":{"start":{"line":731,"column":157,"offset":23598},"end":{"line":731,"column":241,"offset":23682}}},{"type":"raw","value":"<code class=\"language-text\">/</code>","position":{"start":{"line":731,"column":241,"offset":23682},"end":{"line":731,"column":244,"offset":23685}}},{"type":"text","value":" operation is a floating point value, ","position":{"start":{"line":731,"column":244,"offset":23685},"end":{"line":731,"column":282,"offset":23723}}},{"type":"raw","value":"<code class=\"language-text\">2.5</code>","position":{"start":{"line":731,"column":282,"offset":23723},"end":{"line":731,"column":287,"offset":23728}}},{"type":"text","value":" . Python does what is expected by a programmer!","position":{"start":{"line":731,"column":287,"offset":23728},"end":{"line":731,"column":335,"offset":23776}}}],"position":{"start":{"line":731,"column":1,"offset":23442},"end":{"line":731,"column":335,"offset":23776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The puzzle after that tries to play with ","position":{"start":{"line":733,"column":1,"offset":23780},"end":{"line":733,"column":42,"offset":23821}}},{"type":"raw","value":"<code class=\"language-text\">5 + 5 * 6</code>","position":{"start":{"line":733,"column":42,"offset":23821},"end":{"line":733,"column":53,"offset":23832}}},{"type":"text","value":". What would be the result of this expression? Will it be ","position":{"start":{"line":733,"column":53,"offset":23832},"end":{"line":733,"column":111,"offset":23890}}},{"type":"raw","value":"<code class=\"language-text\">5 + 5</code>","position":{"start":{"line":733,"column":111,"offset":23890},"end":{"line":733,"column":118,"offset":23897}}},{"type":"text","value":" or ","position":{"start":{"line":733,"column":118,"offset":23897},"end":{"line":733,"column":122,"offset":23901}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":733,"column":122,"offset":23901},"end":{"line":733,"column":126,"offset":23905}}},{"type":"text","value":", then ","position":{"start":{"line":733,"column":126,"offset":23905},"end":{"line":733,"column":133,"offset":23912}}},{"type":"raw","value":"<code class=\"language-text\">10 * 6</code>","position":{"start":{"line":733,"column":133,"offset":23912},"end":{"line":733,"column":141,"offset":23920}}},{"type":"text","value":", which is ","position":{"start":{"line":733,"column":141,"offset":23920},"end":{"line":733,"column":152,"offset":23931}}},{"type":"raw","value":"<code class=\"language-text\">60</code>","position":{"start":{"line":733,"column":152,"offset":23931},"end":{"line":733,"column":156,"offset":23935}}},{"type":"text","value":"? Or, will it be ","position":{"start":{"line":733,"column":156,"offset":23935},"end":{"line":733,"column":173,"offset":23952}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":733,"column":173,"offset":23952},"end":{"line":733,"column":176,"offset":23955}}},{"type":"text","value":" plus ","position":{"start":{"line":733,"column":176,"offset":23955},"end":{"line":733,"column":182,"offset":23961}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6</code>","position":{"start":{"line":733,"column":182,"offset":23961},"end":{"line":733,"column":189,"offset":23968}}},{"type":"text","value":", which is ","position":{"start":{"line":733,"column":189,"offset":23968},"end":{"line":733,"column":200,"offset":23979}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":733,"column":200,"offset":23979},"end":{"line":733,"column":203,"offset":23982}}},{"type":"text","value":" + ","position":{"start":{"line":733,"column":203,"offset":23982},"end":{"line":733,"column":206,"offset":23985}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":733,"column":206,"offset":23985},"end":{"line":733,"column":210,"offset":23989}}},{"type":"text","value":", that's ","position":{"start":{"line":733,"column":210,"offset":23989},"end":{"line":733,"column":219,"offset":23998}}},{"type":"raw","value":"<code class=\"language-text\">35</code>","position":{"start":{"line":733,"column":219,"offset":23998},"end":{"line":733,"column":223,"offset":24002}}},{"type":"text","value":"?","position":{"start":{"line":733,"column":223,"offset":24002},"end":{"line":733,"column":224,"offset":24003}}}],"position":{"start":{"line":733,"column":1,"offset":23780},"end":{"line":733,"column":224,"offset":24003}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span>\n    <span class=\"token number\">35</span></code></pre></div>","position":{"start":{"line":735,"column":1,"offset":24007},"end":{"line":738,"column":4,"offset":24048}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The correct result is ","position":{"start":{"line":740,"column":1,"offset":24052},"end":{"line":740,"column":23,"offset":24074}}},{"type":"raw","value":"<code class=\"language-text\">35</code>","position":{"start":{"line":740,"column":23,"offset":24074},"end":{"line":740,"column":27,"offset":24078}}},{"type":"text","value":".","position":{"start":{"line":740,"column":27,"offset":24078},"end":{"line":740,"column":28,"offset":24079}}}],"position":{"start":{"line":740,"column":1,"offset":24052},"end":{"line":740,"column":28,"offset":24079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python decides this is based on the ","position":{"start":{"line":742,"column":1,"offset":24083},"end":{"line":742,"column":37,"offset":24119}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"precedence","position":{"start":{"line":742,"column":39,"offset":24121},"end":{"line":742,"column":49,"offset":24131}}}],"position":{"start":{"line":742,"column":37,"offset":24119},"end":{"line":742,"column":51,"offset":24133}}},{"type":"text","value":" of operators.","position":{"start":{"line":742,"column":51,"offset":24133},"end":{"line":742,"column":65,"offset":24147}}}],"position":{"start":{"line":742,"column":1,"offset":24083},"end":{"line":742,"column":65,"offset":24147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Operators in Python are divided into two sets as follows:","position":{"start":{"line":744,"column":1,"offset":24151},"end":{"line":744,"column":58,"offset":24208}}}],"position":{"start":{"line":744,"column":1,"offset":24151},"end":{"line":744,"column":58,"offset":24208}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">**</code>","position":{"start":{"line":746,"column":5,"offset":24216},"end":{"line":746,"column":9,"offset":24220}}},{"type":"text","value":", ","position":{"start":{"line":746,"column":9,"offset":24220},"end":{"line":746,"column":11,"offset":24222}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":746,"column":11,"offset":24222},"end":{"line":746,"column":14,"offset":24225}}},{"type":"text","value":", ","position":{"start":{"line":746,"column":14,"offset":24225},"end":{"line":746,"column":16,"offset":24227}}},{"type":"raw","value":"<code class=\"language-text\">/</code>","position":{"start":{"line":746,"column":16,"offset":24227},"end":{"line":746,"column":19,"offset":24230}}},{"type":"text","value":" and ","position":{"start":{"line":746,"column":19,"offset":24230},"end":{"line":746,"column":24,"offset":24235}}},{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":746,"column":24,"offset":24235},"end":{"line":746,"column":27,"offset":24238}}},{"type":"text","value":" have higher precedence, or priority.","position":{"start":{"line":746,"column":27,"offset":24238},"end":{"line":746,"column":64,"offset":24275}}}],"position":{"start":{"line":746,"column":1,"offset":24212},"end":{"line":746,"column":64,"offset":24275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":747,"column":5,"offset":24281},"end":{"line":747,"column":8,"offset":24284}}},{"type":"text","value":" and ","position":{"start":{"line":747,"column":8,"offset":24284},"end":{"line":747,"column":13,"offset":24289}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":747,"column":13,"offset":24289},"end":{"line":747,"column":16,"offset":24292}}},{"type":"text","value":" have a lower precedence.","position":{"start":{"line":747,"column":16,"offset":24292},"end":{"line":747,"column":41,"offset":24317}}}],"position":{"start":{"line":747,"column":1,"offset":24277},"end":{"line":747,"column":41,"offset":24317}}},{"type":"text","value":"\n"}],"position":{"start":{"line":746,"column":1,"offset":24212},"end":{"line":747,"column":41,"offset":24317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sub-expressions involving operators from {","position":{"start":{"line":749,"column":1,"offset":24321},"end":{"line":749,"column":43,"offset":24363}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":749,"column":43,"offset":24363},"end":{"line":749,"column":46,"offset":24366}}},{"type":"text","value":", ","position":{"start":{"line":749,"column":46,"offset":24366},"end":{"line":749,"column":48,"offset":24368}}},{"type":"raw","value":"<code class=\"language-text\">/</code>","position":{"start":{"line":749,"column":48,"offset":24368},"end":{"line":749,"column":51,"offset":24371}}},{"type":"text","value":", ","position":{"start":{"line":749,"column":51,"offset":24371},"end":{"line":749,"column":53,"offset":24373}}},{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":749,"column":53,"offset":24373},"end":{"line":749,"column":56,"offset":24376}}},{"type":"text","value":", ","position":{"start":{"line":749,"column":56,"offset":24376},"end":{"line":749,"column":58,"offset":24378}}},{"type":"raw","value":"<code class=\"language-text\">**</code>","position":{"start":{"line":749,"column":58,"offset":24378},"end":{"line":749,"column":62,"offset":24382}}},{"type":"text","value":"} are evaluated before those involving operators from {","position":{"start":{"line":749,"column":62,"offset":24382},"end":{"line":749,"column":117,"offset":24437}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":749,"column":117,"offset":24437},"end":{"line":749,"column":120,"offset":24440}}},{"type":"text","value":", ","position":{"start":{"line":749,"column":120,"offset":24440},"end":{"line":749,"column":122,"offset":24442}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":749,"column":122,"offset":24442},"end":{"line":749,"column":125,"offset":24445}}},{"type":"text","value":"}","position":{"start":{"line":749,"column":125,"offset":24445},"end":{"line":749,"column":126,"offset":24446}}}],"position":{"start":{"line":749,"column":1,"offset":24321},"end":{"line":749,"column":126,"offset":24446}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try another small puzzle on precedence, with ","position":{"start":{"line":751,"column":1,"offset":24450},"end":{"line":751,"column":52,"offset":24501}}},{"type":"raw","value":"<code class=\"language-text\">5 - 2 * 2</code>","position":{"start":{"line":751,"column":52,"offset":24501},"end":{"line":751,"column":63,"offset":24512}}},{"type":"text","value":". What would be the result of this? Will it be ","position":{"start":{"line":751,"column":63,"offset":24512},"end":{"line":751,"column":110,"offset":24559}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":751,"column":110,"offset":24559},"end":{"line":751,"column":113,"offset":24562}}},{"type":"text","value":", or ","position":{"start":{"line":751,"column":113,"offset":24562},"end":{"line":751,"column":118,"offset":24567}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":751,"column":118,"offset":24567},"end":{"line":751,"column":121,"offset":24570}}},{"type":"text","value":"? It's ","position":{"start":{"line":751,"column":121,"offset":24570},"end":{"line":751,"column":128,"offset":24577}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":751,"column":128,"offset":24577},"end":{"line":751,"column":131,"offset":24580}}},{"type":"text","value":", because ","position":{"start":{"line":751,"column":131,"offset":24580},"end":{"line":751,"column":141,"offset":24590}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":751,"column":141,"offset":24590},"end":{"line":751,"column":144,"offset":24593}}},{"type":"text","value":" has a higher precedence than ","position":{"start":{"line":751,"column":144,"offset":24593},"end":{"line":751,"column":174,"offset":24623}}},{"type":"raw","value":"<code class=\"language-text\">-</code>","position":{"start":{"line":751,"column":174,"offset":24623},"end":{"line":751,"column":177,"offset":24626}}},{"type":"text","value":". Thus ","position":{"start":{"line":751,"column":177,"offset":24626},"end":{"line":751,"column":184,"offset":24633}}},{"type":"raw","value":"<code class=\"language-text\">2 * 2</code>","position":{"start":{"line":751,"column":184,"offset":24633},"end":{"line":751,"column":191,"offset":24640}}},{"type":"text","value":" is ","position":{"start":{"line":751,"column":191,"offset":24640},"end":{"line":751,"column":195,"offset":24644}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":751,"column":195,"offset":24644},"end":{"line":751,"column":198,"offset":24647}}},{"type":"text","value":", and ","position":{"start":{"line":751,"column":198,"offset":24647},"end":{"line":751,"column":204,"offset":24653}}},{"type":"raw","value":"<code class=\"language-text\">5 - 4</code>","position":{"start":{"line":751,"column":204,"offset":24653},"end":{"line":751,"column":211,"offset":24660}}},{"type":"text","value":" gives us ","position":{"start":{"line":751,"column":211,"offset":24660},"end":{"line":751,"column":221,"offset":24670}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":751,"column":221,"offset":24670},"end":{"line":751,"column":224,"offset":24673}}},{"type":"text","value":".","position":{"start":{"line":751,"column":224,"offset":24673},"end":{"line":751,"column":225,"offset":24674}}}],"position":{"start":{"line":751,"column":1,"offset":24450},"end":{"line":751,"column":225,"offset":24674}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n    <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":753,"column":1,"offset":24678},"end":{"line":756,"column":4,"offset":24718}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we want to execute ","position":{"start":{"line":758,"column":1,"offset":24722},"end":{"line":758,"column":30,"offset":24751}}},{"type":"raw","value":"<code class=\"language-text\">5 - 2</code>","position":{"start":{"line":758,"column":30,"offset":24751},"end":{"line":758,"column":37,"offset":24758}}},{"type":"text","value":", to give an output of ","position":{"start":{"line":758,"column":37,"offset":24758},"end":{"line":758,"column":60,"offset":24781}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":758,"column":60,"offset":24781},"end":{"line":758,"column":63,"offset":24784}}},{"type":"text","value":". How do we change the operator precedence?","position":{"start":{"line":758,"column":63,"offset":24784},"end":{"line":758,"column":106,"offset":24827}}}],"position":{"start":{"line":758,"column":1,"offset":24722},"end":{"line":758,"column":106,"offset":24827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You cannot really change the precedence, but you can add parentheses to group sub-expressions differently.","position":{"start":{"line":760,"column":1,"offset":24831},"end":{"line":760,"column":107,"offset":24937}}}],"position":{"start":{"line":760,"column":1,"offset":24831},"end":{"line":760,"column":107,"offset":24937}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":762,"column":1,"offset":24941},"end":{"line":767,"column":4,"offset":25013}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Parentheses have the highest precedence in Python, and can be used to override operator precedence. ","position":{"start":{"line":769,"column":1,"offset":25017},"end":{"line":769,"column":101,"offset":25117}}},{"type":"raw","value":"<code class=\"language-text\">(5 - 2)</code>","position":{"start":{"line":769,"column":101,"offset":25117},"end":{"line":769,"column":110,"offset":25126}}},{"type":"text","value":" gets calculated first, and the final result of the expression is ","position":{"start":{"line":769,"column":110,"offset":25126},"end":{"line":769,"column":176,"offset":25192}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":769,"column":176,"offset":25192},"end":{"line":769,"column":179,"offset":25195}}},{"type":"text","value":".","position":{"start":{"line":769,"column":179,"offset":25195},"end":{"line":769,"column":180,"offset":25196}}}],"position":{"start":{"line":769,"column":1,"offset":25017},"end":{"line":769,"column":180,"offset":25196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A positive thing about using parentheses is, that it makes expressions more readable. So even in situations such as ","position":{"start":{"line":771,"column":1,"offset":25200},"end":{"line":771,"column":117,"offset":25316}}},{"type":"raw","value":"<code class=\"language-text\">5 - 2 * 2</code>","position":{"start":{"line":771,"column":117,"offset":25316},"end":{"line":771,"column":128,"offset":25327}}},{"type":"text","value":", where we know the result according to precedence, adding parentheses is good.","position":{"start":{"line":771,"column":128,"offset":25327},"end":{"line":771,"column":207,"offset":25406}}}],"position":{"start":{"line":771,"column":1,"offset":25200},"end":{"line":771,"column":207,"offset":25406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":773,"column":3,"offset":25412},"end":{"line":773,"column":10,"offset":25419}}}],"position":{"start":{"line":773,"column":1,"offset":25410},"end":{"line":773,"column":12,"offset":25421}}}],"position":{"start":{"line":773,"column":1,"offset":25410},"end":{"line":773,"column":12,"offset":25421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we went about solving a few puzzles about expressions, touching concepts such as:","position":{"start":{"line":775,"column":1,"offset":25425},"end":{"line":775,"column":96,"offset":25520}}}],"position":{"start":{"line":775,"column":1,"offset":25425},"end":{"line":775,"column":96,"offset":25520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">SyntaxError</code>","position":{"start":{"line":777,"column":5,"offset":25528},"end":{"line":777,"column":18,"offset":25541}}},{"type":"text","value":" for incorrect operators","position":{"start":{"line":777,"column":18,"offset":25541},"end":{"line":777,"column":42,"offset":25565}}}],"position":{"start":{"line":777,"column":1,"offset":25524},"end":{"line":777,"column":42,"offset":25565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"White-space in expressions","position":{"start":{"line":778,"column":5,"offset":25571},"end":{"line":778,"column":31,"offset":25597}}}],"position":{"start":{"line":778,"column":1,"offset":25567},"end":{"line":778,"column":31,"offset":25597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Floating Point division by default","position":{"start":{"line":779,"column":5,"offset":25603},"end":{"line":779,"column":39,"offset":25637}}}],"position":{"start":{"line":779,"column":1,"offset":25599},"end":{"line":779,"column":39,"offset":25637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Operator Precedence","position":{"start":{"line":780,"column":5,"offset":25643},"end":{"line":780,"column":24,"offset":25662}}}],"position":{"start":{"line":780,"column":1,"offset":25639},"end":{"line":780,"column":24,"offset":25662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Using parentheses","position":{"start":{"line":781,"column":5,"offset":25668},"end":{"line":781,"column":22,"offset":25685}}}],"position":{"start":{"line":781,"column":1,"offset":25664},"end":{"line":781,"column":22,"offset":25685}}},{"type":"text","value":"\n"}],"position":{"start":{"line":777,"column":1,"offset":25524},"end":{"line":781,"column":22,"offset":25685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 06: Printing Text","position":{"start":{"line":783,"column":3,"offset":25691},"end":{"line":783,"column":25,"offset":25713}}}],"position":{"start":{"line":783,"column":1,"offset":25689},"end":{"line":783,"column":27,"offset":25715}}}],"position":{"start":{"line":783,"column":1,"offset":25689},"end":{"line":783,"column":27,"offset":25715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step, we learned how to use expressions to compute values. In this step, let's see how we can actually print multiplication table entries, that are readable by the user.","position":{"start":{"line":785,"column":1,"offset":25719},"end":{"line":785,"column":186,"offset":25904}}}],"position":{"start":{"line":785,"column":1,"offset":25719},"end":{"line":785,"column":186,"offset":25904}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01: Printing Text","position":{"start":{"line":787,"column":3,"offset":25910},"end":{"line":787,"column":28,"offset":25935}}}],"position":{"start":{"line":787,"column":1,"offset":25908},"end":{"line":787,"column":30,"offset":25937}}}],"position":{"start":{"line":787,"column":1,"offset":25908},"end":{"line":787,"column":30,"offset":25937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do we go about printing a complete multiplication table entry? We want to print text such as ","position":{"start":{"line":789,"column":1,"offset":25941},"end":{"line":789,"column":98,"offset":26038}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6 = 30</code>","position":{"start":{"line":789,"column":98,"offset":26038},"end":{"line":789,"column":110,"offset":26050}}},{"type":"text","value":" . But trying to do so, as we know it, gives us a ","position":{"start":{"line":789,"column":110,"offset":26050},"end":{"line":789,"column":160,"offset":26100}}},{"type":"raw","value":"<code class=\"language-text\">SyntaxError</code>","position":{"start":{"line":789,"column":160,"offset":26100},"end":{"line":789,"column":173,"offset":26113}}},{"type":"text","value":". Clearly, there is a different way to print text, as compared to an expression.","position":{"start":{"line":789,"column":173,"offset":26113},"end":{"line":789,"column":253,"offset":26193}}}],"position":{"start":{"line":789,"column":1,"offset":25941},"end":{"line":789,"column":253,"offset":26193}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n    SyntaxError<span class=\"token punctuation\">:</span> can't assign to operator</code></pre></div>","position":{"start":{"line":791,"column":1,"offset":26197},"end":{"line":795,"column":4,"offset":26304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's first try to print a simple piece of text, ","position":{"start":{"line":797,"column":1,"offset":26308},"end":{"line":797,"column":50,"offset":26357}}},{"type":"raw","value":"<code class=\"language-text\">Hello</code>","position":{"start":{"line":797,"column":50,"offset":26357},"end":{"line":797,"column":57,"offset":26364}}},{"type":"text","value":". Typing in this piece of code directly on Python Shell also gives us an error.","position":{"start":{"line":797,"column":57,"offset":26364},"end":{"line":797,"column":136,"offset":26443}}}],"position":{"start":{"line":797,"column":1,"offset":26308},"end":{"line":797,"column":136,"offset":26443}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> Hello\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'Hello'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined</code></pre></div>","position":{"start":{"line":799,"column":1,"offset":26447},"end":{"line":804,"column":4,"offset":26603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Only expressions work that way, and ","position":{"start":{"line":806,"column":1,"offset":26607},"end":{"line":806,"column":37,"offset":26643}}},{"type":"raw","value":"<code class=\"language-text\">Hello</code>","position":{"start":{"line":806,"column":37,"offset":26643},"end":{"line":806,"column":44,"offset":26650}}},{"type":"text","value":" is not really an expression.","position":{"start":{"line":806,"column":44,"offset":26650},"end":{"line":806,"column":73,"offset":26679}}}],"position":{"start":{"line":806,"column":1,"offset":26607},"end":{"line":806,"column":73,"offset":26679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":808,"column":1,"offset":26683},"end":{"line":808,"column":10,"offset":26692}}},{"type":"text","value":" is typically called a ","position":{"start":{"line":808,"column":10,"offset":26692},"end":{"line":808,"column":33,"offset":26715}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"string","position":{"start":{"line":808,"column":35,"offset":26717},"end":{"line":808,"column":41,"offset":26723}}}],"position":{"start":{"line":808,"column":33,"offset":26715},"end":{"line":808,"column":43,"offset":26725}}},{"type":"text","value":", and represents the text of letters ","position":{"start":{"line":808,"column":43,"offset":26725},"end":{"line":808,"column":80,"offset":26762}}},{"type":"raw","value":"<code class=\"language-text\">'H'</code>","position":{"start":{"line":808,"column":80,"offset":26762},"end":{"line":808,"column":85,"offset":26767}}},{"type":"text","value":", ","position":{"start":{"line":808,"column":85,"offset":26767},"end":{"line":808,"column":87,"offset":26769}}},{"type":"raw","value":"<code class=\"language-text\">'e'</code>","position":{"start":{"line":808,"column":87,"offset":26769},"end":{"line":808,"column":92,"offset":26774}}},{"type":"text","value":", ","position":{"start":{"line":808,"column":92,"offset":26774},"end":{"line":808,"column":94,"offset":26776}}},{"type":"raw","value":"<code class=\"language-text\">'l'</code>","position":{"start":{"line":808,"column":94,"offset":26776},"end":{"line":808,"column":99,"offset":26781}}},{"type":"text","value":", ","position":{"start":{"line":808,"column":99,"offset":26781},"end":{"line":808,"column":101,"offset":26783}}},{"type":"raw","value":"<code class=\"language-text\">'l'</code>","position":{"start":{"line":808,"column":101,"offset":26783},"end":{"line":808,"column":106,"offset":26788}}},{"type":"text","value":", ","position":{"start":{"line":808,"column":106,"offset":26788},"end":{"line":808,"column":108,"offset":26790}}},{"type":"raw","value":"<code class=\"language-text\">'o'</code>","position":{"start":{"line":808,"column":108,"offset":26790},"end":{"line":808,"column":113,"offset":26795}}},{"type":"text","value":". ","position":{"start":{"line":808,"column":113,"offset":26795},"end":{"line":808,"column":115,"offset":26797}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":808,"column":115,"offset":26797},"end":{"line":808,"column":124,"offset":26806}}},{"type":"text","value":" is hence different from the number ","position":{"start":{"line":808,"column":124,"offset":26806},"end":{"line":808,"column":160,"offset":26842}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":808,"column":160,"offset":26842},"end":{"line":808,"column":163,"offset":26845}}},{"type":"text","value":".","position":{"start":{"line":808,"column":163,"offset":26845},"end":{"line":808,"column":164,"offset":26846}}}],"position":{"start":{"line":808,"column":1,"offset":26683},"end":{"line":808,"column":164,"offset":26846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are a number of in-built functions in Python to help print strings. One of these is the ","position":{"start":{"line":810,"column":1,"offset":26850},"end":{"line":810,"column":95,"offset":26944}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":810,"column":95,"offset":26944},"end":{"line":810,"column":104,"offset":26953}}},{"type":"text","value":" function. Can you just say ","position":{"start":{"line":810,"column":104,"offset":26953},"end":{"line":810,"column":132,"offset":26981}}},{"type":"raw","value":"<code class=\"language-text\">print Hello</code>","position":{"start":{"line":810,"column":132,"offset":26981},"end":{"line":810,"column":145,"offset":26994}}},{"type":"text","value":"?","position":{"start":{"line":810,"column":145,"offset":26994},"end":{"line":810,"column":146,"offset":26995}}}],"position":{"start":{"line":810,"column":1,"offset":26850},"end":{"line":810,"column":146,"offset":26995}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span> Hello\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span> Hello\n                  <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> Missing parentheses <span class=\"token keyword\">in</span> call to <span class=\"token string\">'print'</span><span class=\"token punctuation\">.</span> Did you mean <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Hello<span class=\"token punctuation\">)</span>?</code></pre></div>","position":{"start":{"line":812,"column":1,"offset":26999},"end":{"line":818,"column":4,"offset":27191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Python compiler gives you an error, that says \"missing parentheses\".","position":{"start":{"line":820,"column":1,"offset":27195},"end":{"line":820,"column":73,"offset":27267}}}],"position":{"start":{"line":820,"column":1,"offset":27195},"end":{"line":820,"column":73,"offset":27267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Will ","position":{"start":{"line":822,"column":1,"offset":27271},"end":{"line":822,"column":6,"offset":27276}}},{"type":"raw","value":"<code class=\"language-text\">print(Hello)</code>","position":{"start":{"line":822,"column":6,"offset":27276},"end":{"line":822,"column":20,"offset":27290}}},{"type":"text","value":" work?","position":{"start":{"line":822,"column":20,"offset":27290},"end":{"line":822,"column":26,"offset":27296}}}],"position":{"start":{"line":822,"column":1,"offset":27271},"end":{"line":822,"column":26,"offset":27296}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>Hello<span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'Hello'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined</code></pre></div>","position":{"start":{"line":824,"column":1,"offset":27300},"end":{"line":829,"column":4,"offset":27464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Nope! Again, this one failed because you need to indicate that ","position":{"start":{"line":831,"column":1,"offset":27468},"end":{"line":831,"column":64,"offset":27531}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":831,"column":64,"offset":27531},"end":{"line":831,"column":73,"offset":27540}}},{"type":"text","value":" is a string.","position":{"start":{"line":831,"column":73,"offset":27540},"end":{"line":831,"column":86,"offset":27553}}}],"position":{"start":{"line":831,"column":1,"offset":27468},"end":{"line":831,"column":86,"offset":27553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do I indicate that ","position":{"start":{"line":833,"column":1,"offset":27557},"end":{"line":833,"column":24,"offset":27580}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":833,"column":24,"offset":27580},"end":{"line":833,"column":33,"offset":27589}}},{"type":"text","value":" is a string? By putting it within double quotes.","position":{"start":{"line":833,"column":33,"offset":27589},"end":{"line":833,"column":82,"offset":27638}}}],"position":{"start":{"line":833,"column":1,"offset":27557},"end":{"line":833,"column":82,"offset":27638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try ","position":{"start":{"line":835,"column":1,"offset":27642},"end":{"line":835,"column":11,"offset":27652}}},{"type":"raw","value":"<code class=\"language-text\">print (\"Hello\")</code>","position":{"start":{"line":835,"column":11,"offset":27652},"end":{"line":835,"column":28,"offset":27669}}}],"position":{"start":{"line":835,"column":1,"offset":27642},"end":{"line":835,"column":28,"offset":27669}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n    Hello\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n    Hello</code></pre></div>","position":{"start":{"line":837,"column":1,"offset":27673},"end":{"line":842,"column":4,"offset":27758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print(\"Hello\")</code>","position":{"start":{"line":844,"column":1,"offset":27762},"end":{"line":844,"column":17,"offset":27778}}},{"type":"text","value":" finally results in ","position":{"start":{"line":844,"column":17,"offset":27778},"end":{"line":844,"column":37,"offset":27798}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":844,"column":37,"offset":27798},"end":{"line":844,"column":46,"offset":27807}}},{"type":"text","value":" being printed out. To be able to print ","position":{"start":{"line":844,"column":46,"offset":27807},"end":{"line":844,"column":86,"offset":27847}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":844,"column":86,"offset":27847},"end":{"line":844,"column":95,"offset":27856}}},{"type":"text","value":", the things we need to do are:","position":{"start":{"line":844,"column":95,"offset":27856},"end":{"line":844,"column":126,"offset":27887}}}],"position":{"start":{"line":844,"column":1,"offset":27762},"end":{"line":844,"column":126,"offset":27887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Typing the method name print ,","position":{"start":{"line":846,"column":5,"offset":27895},"end":{"line":846,"column":35,"offset":27925}}}],"position":{"start":{"line":846,"column":1,"offset":27891},"end":{"line":846,"column":35,"offset":27925}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"open parentheses ","position":{"start":{"line":847,"column":5,"offset":27931},"end":{"line":847,"column":22,"offset":27948}}},{"type":"text","value":"(","position":{"start":{"line":847,"column":22,"offset":27948},"end":{"line":847,"column":24,"offset":27950}}},{"type":"text","value":" ,","position":{"start":{"line":847,"column":24,"offset":27950},"end":{"line":847,"column":26,"offset":27952}}}],"position":{"start":{"line":847,"column":1,"offset":27927},"end":{"line":847,"column":26,"offset":27952}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Followed by a double quote \" ,","position":{"start":{"line":848,"column":5,"offset":27958},"end":{"line":848,"column":35,"offset":27988}}}],"position":{"start":{"line":848,"column":1,"offset":27954},"end":{"line":848,"column":35,"offset":27988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The text Hello,","position":{"start":{"line":849,"column":5,"offset":27994},"end":{"line":849,"column":20,"offset":28009}}}],"position":{"start":{"line":849,"column":1,"offset":27990},"end":{"line":849,"column":20,"offset":28009}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"and another double quote \" ,","position":{"start":{"line":850,"column":5,"offset":28015},"end":{"line":850,"column":33,"offset":28043}}}],"position":{"start":{"line":850,"column":1,"offset":28011},"end":{"line":850,"column":33,"offset":28043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"finished off with a closed parentheses ","position":{"start":{"line":851,"column":5,"offset":28049},"end":{"line":851,"column":44,"offset":28088}}},{"type":"text","value":")","position":{"start":{"line":851,"column":44,"offset":28088},"end":{"line":851,"column":46,"offset":28090}}},{"type":"text","value":".","position":{"start":{"line":851,"column":46,"offset":28090},"end":{"line":851,"column":47,"offset":28091}}}],"position":{"start":{"line":851,"column":1,"offset":28045},"end":{"line":851,"column":47,"offset":28091}}},{"type":"text","value":"\n"}],"position":{"start":{"line":846,"column":1,"offset":27891},"end":{"line":851,"column":47,"offset":28091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What we have written here is called a ","position":{"start":{"line":853,"column":1,"offset":28095},"end":{"line":853,"column":39,"offset":28133}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"statement","position":{"start":{"line":853,"column":41,"offset":28135},"end":{"line":853,"column":50,"offset":28144}}}],"position":{"start":{"line":853,"column":39,"offset":28133},"end":{"line":853,"column":52,"offset":28146}}},{"type":"text","value":", a simple piece of code to execute. As part of this statement, we are ","position":{"start":{"line":853,"column":52,"offset":28146},"end":{"line":853,"column":123,"offset":28217}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"calling","position":{"start":{"line":853,"column":125,"offset":28219},"end":{"line":853,"column":132,"offset":28226}}}],"position":{"start":{"line":853,"column":123,"offset":28217},"end":{"line":853,"column":134,"offset":28228}}},{"type":"text","value":" a ","position":{"start":{"line":853,"column":134,"offset":28228},"end":{"line":853,"column":137,"offset":28231}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"function","position":{"start":{"line":853,"column":139,"offset":28233},"end":{"line":853,"column":147,"offset":28241}}}],"position":{"start":{"line":853,"column":137,"offset":28231},"end":{"line":853,"column":149,"offset":28243}}},{"type":"text","value":", named ","position":{"start":{"line":853,"column":149,"offset":28243},"end":{"line":853,"column":157,"offset":28251}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":853,"column":157,"offset":28251},"end":{"line":853,"column":166,"offset":28260}}},{"type":"text","value":".","position":{"start":{"line":853,"column":166,"offset":28260},"end":{"line":853,"column":167,"offset":28261}}}],"position":{"start":{"line":853,"column":1,"offset":28095},"end":{"line":853,"column":167,"offset":28261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What exactly are we trying to print?","position":{"start":{"line":855,"column":1,"offset":28265},"end":{"line":855,"column":37,"offset":28301}}}],"position":{"start":{"line":855,"column":1,"offset":28265},"end":{"line":855,"column":37,"offset":28301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The text ","position":{"start":{"line":857,"column":1,"offset":28305},"end":{"line":857,"column":10,"offset":28314}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":857,"column":10,"offset":28314},"end":{"line":857,"column":19,"offset":28323}}},{"type":"text","value":", which is called a ","position":{"start":{"line":857,"column":19,"offset":28323},"end":{"line":857,"column":39,"offset":28343}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"parameter","position":{"start":{"line":857,"column":41,"offset":28345},"end":{"line":857,"column":50,"offset":28354}}}],"position":{"start":{"line":857,"column":39,"offset":28343},"end":{"line":857,"column":52,"offset":28356}}},{"type":"text","value":" or ","position":{"start":{"line":857,"column":52,"offset":28356},"end":{"line":857,"column":56,"offset":28360}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"argument","position":{"start":{"line":857,"column":58,"offset":28362},"end":{"line":857,"column":66,"offset":28370}}}],"position":{"start":{"line":857,"column":56,"offset":28360},"end":{"line":857,"column":68,"offset":28372}}},{"type":"text","value":", to ","position":{"start":{"line":857,"column":68,"offset":28372},"end":{"line":857,"column":73,"offset":28377}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":857,"column":73,"offset":28377},"end":{"line":857,"column":82,"offset":28386}}},{"type":"text","value":".","position":{"start":{"line":857,"column":82,"offset":28386},"end":{"line":857,"column":83,"offset":28387}}}],"position":{"start":{"line":857,"column":1,"offset":28305},"end":{"line":857,"column":83,"offset":28387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let's get back to what we wanted to do, which is to print ","position":{"start":{"line":859,"column":1,"offset":28391},"end":{"line":859,"column":63,"offset":28453}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6 = 30</code>","position":{"start":{"line":859,"column":63,"offset":28453},"end":{"line":859,"column":75,"offset":28465}}},{"type":"text","value":". The most basic version would be something of this kind, ","position":{"start":{"line":859,"column":75,"offset":28465},"end":{"line":859,"column":133,"offset":28523}}},{"type":"raw","value":"<code class=\"language-text\">print(\"5 * 6 = 30\")</code>","position":{"start":{"line":859,"column":133,"offset":28523},"end":{"line":859,"column":154,"offset":28544}}},{"type":"text","value":". Here, we are passing the entire value in the form of a string.","position":{"start":{"line":859,"column":154,"offset":28544},"end":{"line":859,"column":218,"offset":28608}}}],"position":{"start":{"line":859,"column":1,"offset":28391},"end":{"line":859,"column":218,"offset":28608}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5 * 6 = 30\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":861,"column":1,"offset":28612},"end":{"line":864,"column":4,"offset":28671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This prints the text on the console, as-is. The thing you need to understand here is, we aren't really calculating ","position":{"start":{"line":866,"column":1,"offset":28675},"end":{"line":866,"column":116,"offset":28790}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":866,"column":116,"offset":28790},"end":{"line":866,"column":120,"offset":28794}}},{"type":"text","value":" using the formula ","position":{"start":{"line":866,"column":120,"offset":28794},"end":{"line":866,"column":139,"offset":28813}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6</code>","position":{"start":{"line":866,"column":139,"offset":28813},"end":{"line":866,"column":146,"offset":28820}}},{"type":"text","value":", but directly putting text ","position":{"start":{"line":866,"column":146,"offset":28820},"end":{"line":866,"column":174,"offset":28848}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":866,"column":174,"offset":28848},"end":{"line":866,"column":178,"offset":28852}}},{"type":"text","value":" in here. That's called ","position":{"start":{"line":866,"column":178,"offset":28852},"end":{"line":866,"column":202,"offset":28876}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"hard-coding","position":{"start":{"line":866,"column":204,"offset":28878},"end":{"line":866,"column":215,"offset":28889}}}],"position":{"start":{"line":866,"column":202,"offset":28876},"end":{"line":866,"column":217,"offset":28891}}},{"type":"text","value":".","position":{"start":{"line":866,"column":217,"offset":28891},"end":{"line":866,"column":218,"offset":28892}}}],"position":{"start":{"line":866,"column":1,"offset":28675},"end":{"line":866,"column":218,"offset":28892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In a later step, we will look at how to actually calculate the value and pass it in.","position":{"start":{"line":868,"column":1,"offset":28896},"end":{"line":868,"column":85,"offset":28980}}}],"position":{"start":{"line":868,"column":1,"offset":28896},"end":{"line":868,"column":85,"offset":28980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":870,"column":3,"offset":28986},"end":{"line":870,"column":10,"offset":28993}}}],"position":{"start":{"line":870,"column":1,"offset":28984},"end":{"line":870,"column":12,"offset":28995}}}],"position":{"start":{"line":870,"column":1,"offset":28984},"end":{"line":870,"column":12,"offset":28995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":872,"column":1,"offset":28999},"end":{"line":872,"column":18,"offset":29016}}}],"position":{"start":{"line":872,"column":1,"offset":28999},"end":{"line":872,"column":18,"offset":29016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood that displaying text on the console is not the same as printing an expression value","position":{"start":{"line":874,"column":5,"offset":29024},"end":{"line":874,"column":99,"offset":29118}}}],"position":{"start":{"line":874,"column":1,"offset":29020},"end":{"line":874,"column":99,"offset":29118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned about the ","position":{"start":{"line":875,"column":5,"offset":29124},"end":{"line":875,"column":23,"offset":29142}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":875,"column":23,"offset":29142},"end":{"line":875,"column":32,"offset":29151}}},{"type":"text","value":" function, that is used to print text in Python.","position":{"start":{"line":875,"column":32,"offset":29151},"end":{"line":875,"column":80,"offset":29199}}}],"position":{"start":{"line":875,"column":1,"offset":29120},"end":{"line":875,"column":80,"offset":29199}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Found a way to print the text ","position":{"start":{"line":876,"column":5,"offset":29205},"end":{"line":876,"column":35,"offset":29235}}},{"type":"raw","value":"<code class=\"language-text\">\"5 * 6 = 30\"</code>","position":{"start":{"line":876,"column":35,"offset":29235},"end":{"line":876,"column":49,"offset":29249}}},{"type":"text","value":" on the console, by hard-coding values in a string","position":{"start":{"line":876,"column":49,"offset":29249},"end":{"line":876,"column":99,"offset":29299}}}],"position":{"start":{"line":876,"column":1,"offset":29201},"end":{"line":876,"column":99,"offset":29299}}},{"type":"text","value":"\n"}],"position":{"start":{"line":874,"column":1,"offset":29020},"end":{"line":876,"column":99,"offset":29299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 07: Puzzles On Utility Methods, And Strings","position":{"start":{"line":878,"column":3,"offset":29305},"end":{"line":878,"column":51,"offset":29353}}}],"position":{"start":{"line":878,"column":1,"offset":29303},"end":{"line":878,"column":53,"offset":29355}}}],"position":{"start":{"line":878,"column":1,"offset":29303},"end":{"line":878,"column":53,"offset":29355}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step, we learned how to print ","position":{"start":{"line":880,"column":1,"offset":29359},"end":{"line":880,"column":47,"offset":29405}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6 = 30</code>","position":{"start":{"line":880,"column":47,"offset":29405},"end":{"line":880,"column":59,"offset":29417}}},{"type":"text","value":". It was not a perfect solution, because we hard-coded everything. we used an in-built function named ","position":{"start":{"line":880,"column":59,"offset":29417},"end":{"line":880,"column":161,"offset":29519}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":880,"column":161,"offset":29519},"end":{"line":880,"column":170,"offset":29528}}},{"type":"text","value":", passed a string to it, and invoked the method.","position":{"start":{"line":880,"column":170,"offset":29528},"end":{"line":880,"column":218,"offset":29576}}}],"position":{"start":{"line":880,"column":1,"offset":29359},"end":{"line":880,"column":218,"offset":29576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at a number of puzzles related to in-built methods, their parameters, and strings in general.","position":{"start":{"line":882,"column":1,"offset":29580},"end":{"line":882,"column":119,"offset":29698}}}],"position":{"start":{"line":882,"column":1,"offset":29580},"end":{"line":882,"column":119,"offset":29698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, let's do ","position":{"start":{"line":884,"column":1,"offset":29702},"end":{"line":884,"column":23,"offset":29724}}},{"type":"raw","value":"<code class=\"language-text\">print(\"5 * 6\")</code>","position":{"start":{"line":884,"column":23,"offset":29724},"end":{"line":884,"column":39,"offset":29740}}},{"type":"text","value":", as in the previous step. What does this code result in?","position":{"start":{"line":884,"column":39,"offset":29740},"end":{"line":884,"column":96,"offset":29797}}}],"position":{"start":{"line":884,"column":1,"offset":29702},"end":{"line":884,"column":96,"offset":29797}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5*6\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5*6'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":886,"column":1,"offset":29801},"end":{"line":891,"column":4,"offset":29877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It just prints the string ","position":{"start":{"line":893,"column":1,"offset":29881},"end":{"line":893,"column":27,"offset":29907}}},{"type":"raw","value":"<code class=\"language-text\">\"5 * 6\"</code>","position":{"start":{"line":893,"column":27,"offset":29907},"end":{"line":893,"column":36,"offset":29916}}},{"type":"text","value":".","position":{"start":{"line":893,"column":36,"offset":29916},"end":{"line":893,"column":37,"offset":29917}}}],"position":{"start":{"line":893,"column":1,"offset":29881},"end":{"line":893,"column":37,"offset":29917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we try the code ","position":{"start":{"line":895,"column":1,"offset":29921},"end":{"line":895,"column":27,"offset":29947}}},{"type":"raw","value":"<code class=\"language-text\">print(5 * 6)</code>","position":{"start":{"line":895,"column":27,"offset":29947},"end":{"line":895,"column":41,"offset":29961}}},{"type":"text","value":",","position":{"start":{"line":895,"column":41,"offset":29961},"end":{"line":895,"column":42,"offset":29962}}}],"position":{"start":{"line":895,"column":1,"offset":29921},"end":{"line":895,"column":42,"offset":29962}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":897,"column":1,"offset":29966},"end":{"line":900,"column":4,"offset":30008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without the double quotes, ","position":{"start":{"line":902,"column":1,"offset":30012},"end":{"line":902,"column":28,"offset":30039}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6</code>","position":{"start":{"line":902,"column":28,"offset":30039},"end":{"line":902,"column":35,"offset":30046}}},{"type":"text","value":" is an expression. What will be the output? ","position":{"start":{"line":902,"column":35,"offset":30046},"end":{"line":902,"column":79,"offset":30090}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":902,"column":79,"offset":30090},"end":{"line":902,"column":83,"offset":30094}}},{"type":"text","value":".","position":{"start":{"line":902,"column":83,"offset":30094},"end":{"line":902,"column":84,"offset":30095}}}],"position":{"start":{"line":902,"column":1,"offset":30012},"end":{"line":902,"column":84,"offset":30095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you call ","position":{"start":{"line":904,"column":1,"offset":30099},"end":{"line":904,"column":13,"offset":30111}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":904,"column":13,"offset":30111},"end":{"line":904,"column":22,"offset":30120}}},{"type":"text","value":" with an expression argument, it prints the value of the expression. However, when we pass something within double quotes, it becomes a piece of text, printed as-is.","position":{"start":{"line":904,"column":22,"offset":30120},"end":{"line":904,"column":187,"offset":30285}}}],"position":{"start":{"line":904,"column":1,"offset":30099},"end":{"line":904,"column":187,"offset":30285}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An interesting thing to note is, that in Python you can use either double-quotes ","position":{"start":{"line":906,"column":1,"offset":30289},"end":{"line":906,"column":82,"offset":30370}}},{"type":"text","value":"(","position":{"start":{"line":906,"column":82,"offset":30370},"end":{"line":906,"column":84,"offset":30372}}},{"type":"raw","value":"<code class=\"language-text\">\"</code>","position":{"start":{"line":906,"column":84,"offset":30372},"end":{"line":906,"column":87,"offset":30375}}},{"type":"text","value":" and ","position":{"start":{"line":906,"column":87,"offset":30375},"end":{"line":906,"column":92,"offset":30380}}},{"type":"raw","value":"<code class=\"language-text\">\"</code>","position":{"start":{"line":906,"column":92,"offset":30380},"end":{"line":906,"column":95,"offset":30383}}},{"type":"text","value":")","position":{"start":{"line":906,"column":95,"offset":30383},"end":{"line":906,"column":97,"offset":30385}}},{"type":"text","value":", or single-quotes ","position":{"start":{"line":906,"column":97,"offset":30385},"end":{"line":906,"column":116,"offset":30404}}},{"type":"text","value":"(","position":{"start":{"line":906,"column":116,"offset":30404},"end":{"line":906,"column":118,"offset":30406}}},{"type":"raw","value":"<code class=\"language-text\">'</code>","position":{"start":{"line":906,"column":118,"offset":30406},"end":{"line":906,"column":121,"offset":30409}}},{"type":"text","value":" and ","position":{"start":{"line":906,"column":121,"offset":30409},"end":{"line":906,"column":126,"offset":30414}}},{"type":"raw","value":"<code class=\"language-text\">'</code>","position":{"start":{"line":906,"column":126,"offset":30414},"end":{"line":906,"column":129,"offset":30417}}},{"type":"text","value":")","position":{"start":{"line":906,"column":129,"offset":30417},"end":{"line":906,"column":131,"offset":30419}}},{"type":"text","value":" with text values.","position":{"start":{"line":906,"column":131,"offset":30419},"end":{"line":906,"column":149,"offset":30437}}}],"position":{"start":{"line":906,"column":1,"offset":30289},"end":{"line":906,"column":149,"offset":30437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at a few other in-built methods within Python.","position":{"start":{"line":908,"column":1,"offset":30441},"end":{"line":908,"column":58,"offset":30498}}}],"position":{"start":{"line":908,"column":1,"offset":30441},"end":{"line":908,"column":58,"offset":30498}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider ","position":{"start":{"line":910,"column":1,"offset":30502},"end":{"line":910,"column":10,"offset":30511}}},{"type":"raw","value":"<code class=\"language-text\">abs()</code>","position":{"start":{"line":910,"column":10,"offset":30511},"end":{"line":910,"column":17,"offset":30518}}},{"type":"text","value":" ","position":{"start":{"line":910,"column":17,"offset":30518},"end":{"line":910,"column":18,"offset":30519}}},{"type":"text","value":"(","position":{"start":{"line":910,"column":18,"offset":30519},"end":{"line":910,"column":20,"offset":30521}}},{"type":"text","value":"which stands for absolute value","position":{"start":{"line":910,"column":20,"offset":30521},"end":{"line":910,"column":51,"offset":30552}}},{"type":"text","value":")","position":{"start":{"line":910,"column":51,"offset":30552},"end":{"line":910,"column":53,"offset":30554}}},{"type":"text","value":", a method that accepts a numeric value. You can use ","position":{"start":{"line":910,"column":53,"offset":30554},"end":{"line":910,"column":106,"offset":30607}}},{"type":"raw","value":"<code class=\"language-text\">abs(10.5)</code>","position":{"start":{"line":910,"column":106,"offset":30607},"end":{"line":910,"column":117,"offset":30618}}},{"type":"text","value":", passing ","position":{"start":{"line":910,"column":117,"offset":30618},"end":{"line":910,"column":127,"offset":30628}}},{"type":"raw","value":"<code class=\"language-text\">10.5</code>","position":{"start":{"line":910,"column":127,"offset":30628},"end":{"line":910,"column":133,"offset":30634}}},{"type":"text","value":" as a value to it, and it prints the absolute value of ","position":{"start":{"line":910,"column":133,"offset":30634},"end":{"line":910,"column":188,"offset":30689}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":910,"column":188,"offset":30689},"end":{"line":910,"column":192,"offset":30693}}},{"type":"text","value":".","position":{"start":{"line":910,"column":192,"offset":30693},"end":{"line":910,"column":193,"offset":30694}}}],"position":{"start":{"line":910,"column":1,"offset":30502},"end":{"line":910,"column":193,"offset":30694}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">abs</span> <span class=\"token number\">10.5</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token builtin\">abs</span> <span class=\"token number\">10.5</span>\n               <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token number\">10.5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">10.5</span></code></pre></div>","position":{"start":{"line":912,"column":1,"offset":30698},"end":{"line":920,"column":4,"offset":30858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you pass in a string value, will it work? It complains, \"","position":{"start":{"line":922,"column":1,"offset":30862},"end":{"line":922,"column":61,"offset":30922}}},{"type":"raw","value":"<code class=\"language-text\">abs()</code>","position":{"start":{"line":922,"column":61,"offset":30922},"end":{"line":922,"column":68,"offset":30929}}},{"type":"text","value":" function will not work with a string, it only works with numeric values\".","position":{"start":{"line":922,"column":68,"offset":30929},"end":{"line":922,"column":142,"offset":31003}}}],"position":{"start":{"line":922,"column":1,"offset":30862},"end":{"line":922,"column":142,"offset":31003}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"10.5\"</span><span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    TypeError<span class=\"token punctuation\">:</span> bad operand <span class=\"token builtin\">type</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'str'</span></code></pre></div>","position":{"start":{"line":924,"column":1,"offset":31007},"end":{"line":929,"column":4,"offset":31175}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say you want to use a function that computes \"to the power of\", for instance \"","position":{"start":{"line":931,"column":1,"offset":31179},"end":{"line":931,"column":85,"offset":31263}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":931,"column":85,"offset":31263},"end":{"line":931,"column":88,"offset":31266}}},{"type":"text","value":" to the power of ","position":{"start":{"line":931,"column":88,"offset":31266},"end":{"line":931,"column":105,"offset":31283}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":931,"column":105,"offset":31283},"end":{"line":931,"column":108,"offset":31286}}},{"type":"text","value":"\". In Python, there's an in-built function named ","position":{"start":{"line":931,"column":108,"offset":31286},"end":{"line":931,"column":157,"offset":31335}}},{"type":"raw","value":"<code class=\"language-text\">pow()</code>","position":{"start":{"line":931,"column":157,"offset":31335},"end":{"line":931,"column":164,"offset":31342}}},{"type":"text","value":", which does just what we need. To ","position":{"start":{"line":931,"column":164,"offset":31342},"end":{"line":931,"column":199,"offset":31377}}},{"type":"raw","value":"<code class=\"language-text\">pow()</code>","position":{"start":{"line":931,"column":199,"offset":31377},"end":{"line":931,"column":206,"offset":31384}}},{"type":"text","value":", you can pass two parameters and calculate the result. How do you do that?","position":{"start":{"line":931,"column":206,"offset":31384},"end":{"line":931,"column":281,"offset":31459}}}],"position":{"start":{"line":931,"column":1,"offset":31179},"end":{"line":931,"column":281,"offset":31459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Will this work: ","position":{"start":{"line":933,"column":1,"offset":31463},"end":{"line":933,"column":17,"offset":31479}}},{"type":"raw","value":"<code class=\"language-text\">pow 2 5</code>","position":{"start":{"line":933,"column":17,"offset":31479},"end":{"line":933,"column":26,"offset":31488}}},{"type":"text","value":"? No, not at all. This code does not work as well: ","position":{"start":{"line":933,"column":26,"offset":31488},"end":{"line":933,"column":77,"offset":31539}}},{"type":"raw","value":"<code class=\"language-text\">pow(2 5)</code>","position":{"start":{"line":933,"column":77,"offset":31539},"end":{"line":933,"column":87,"offset":31549}}},{"type":"text","value":". ","position":{"start":{"line":933,"column":87,"offset":31549},"end":{"line":933,"column":89,"offset":31551}}},{"type":"raw","value":"<code class=\"language-text\">pow(2, 5)</code>","position":{"start":{"line":933,"column":89,"offset":31551},"end":{"line":933,"column":100,"offset":31562}}},{"type":"text","value":" is the correct syntax.","position":{"start":{"line":933,"column":100,"offset":31562},"end":{"line":933,"column":123,"offset":31585}}}],"position":{"start":{"line":933,"column":1,"offset":31463},"end":{"line":933,"column":123,"offset":31585}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">pow</span> <span class=\"token number\">2</span> <span class=\"token number\">5</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token builtin\">pow</span> <span class=\"token number\">2</span> <span class=\"token number\">5</span>\n            <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n              <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">32</span></code></pre></div>","position":{"start":{"line":935,"column":1,"offset":31589},"end":{"line":948,"column":4,"offset":31858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You'll see that ","position":{"start":{"line":950,"column":1,"offset":31862},"end":{"line":950,"column":17,"offset":31878}}},{"type":"raw","value":"<code class=\"language-text\">32</code>","position":{"start":{"line":950,"column":17,"offset":31878},"end":{"line":950,"column":21,"offset":31882}}},{"type":"text","value":" is printed.","position":{"start":{"line":950,"column":21,"offset":31882},"end":{"line":950,"column":33,"offset":31894}}}],"position":{"start":{"line":950,"column":1,"offset":31862},"end":{"line":950,"column":33,"offset":31894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's see another example, \"","position":{"start":{"line":952,"column":1,"offset":31898},"end":{"line":952,"column":29,"offset":31926}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":952,"column":29,"offset":31926},"end":{"line":952,"column":33,"offset":31930}}},{"type":"text","value":" to the power of ","position":{"start":{"line":952,"column":33,"offset":31930},"end":{"line":952,"column":50,"offset":31947}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":952,"column":50,"offset":31947},"end":{"line":952,"column":53,"offset":31950}}},{"type":"text","value":"\". ","position":{"start":{"line":952,"column":53,"offset":31950},"end":{"line":952,"column":56,"offset":31953}}},{"type":"raw","value":"<code class=\"language-text\">pow(10,3)</code>","position":{"start":{"line":952,"column":56,"offset":31953},"end":{"line":952,"column":67,"offset":31964}}},{"type":"text","value":" is the alternative to saying ","position":{"start":{"line":952,"column":67,"offset":31964},"end":{"line":952,"column":97,"offset":31994}}},{"type":"raw","value":"<code class=\"language-text\">10 ** 3</code>","position":{"start":{"line":952,"column":97,"offset":31994},"end":{"line":952,"column":106,"offset":32003}}},{"type":"text","value":". This gives us ","position":{"start":{"line":952,"column":106,"offset":32003},"end":{"line":952,"column":122,"offset":32019}}},{"type":"raw","value":"<code class=\"language-text\">1000</code>","position":{"start":{"line":952,"column":122,"offset":32019},"end":{"line":952,"column":128,"offset":32025}}},{"type":"text","value":", similar to how ","position":{"start":{"line":952,"column":128,"offset":32025},"end":{"line":952,"column":145,"offset":32042}}},{"type":"raw","value":"<code class=\"language-text\">pow()</code>","position":{"start":{"line":952,"column":145,"offset":32042},"end":{"line":952,"column":152,"offset":32049}}},{"type":"text","value":" would.","position":{"start":{"line":952,"column":152,"offset":32049},"end":{"line":952,"column":159,"offset":32056}}}],"position":{"start":{"line":952,"column":1,"offset":31898},"end":{"line":952,"column":159,"offset":32056}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1000</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">3</span>\n    <span class=\"token number\">1000</span></code></pre></div>","position":{"start":{"line":954,"column":1,"offset":32060},"end":{"line":959,"column":4,"offset":32131}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">max()</code>","position":{"start":{"line":961,"column":1,"offset":32135},"end":{"line":961,"column":8,"offset":32142}}},{"type":"text","value":" returns maximum in a set of numbers.","position":{"start":{"line":961,"column":8,"offset":32142},"end":{"line":961,"column":45,"offset":32179}}},{"type":"raw","value":"<code class=\"language-text\">min()</code>","position":{"start":{"line":961,"column":45,"offset":32179},"end":{"line":961,"column":52,"offset":32186}}},{"type":"text","value":" function returns the minimum value.","position":{"start":{"line":961,"column":52,"offset":32186},"end":{"line":961,"column":88,"offset":32222}}}],"position":{"start":{"line":961,"column":1,"offset":32135},"end":{"line":961,"column":88,"offset":32222}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">67</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">34</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">34</span></code></pre></div>","position":{"start":{"line":963,"column":1,"offset":32226},"end":{"line":968,"column":4,"offset":32306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These are some of the in-built functions in Python, and we saw how to call the in-built functions by passing in a varied number of parameters.","position":{"start":{"line":970,"column":1,"offset":32310},"end":{"line":970,"column":143,"offset":32452}}}],"position":{"start":{"line":970,"column":1,"offset":32310},"end":{"line":970,"column":143,"offset":32452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python is case sensitive. So let's say I want of calculate ","position":{"start":{"line":972,"column":1,"offset":32456},"end":{"line":972,"column":60,"offset":32515}}},{"type":"raw","value":"<code class=\"language-text\">pow(2,5)</code>","position":{"start":{"line":972,"column":60,"offset":32515},"end":{"line":972,"column":70,"offset":32525}}},{"type":"text","value":". So this would give me ","position":{"start":{"line":972,"column":70,"offset":32525},"end":{"line":972,"column":94,"offset":32549}}},{"type":"raw","value":"<code class=\"language-text\">32</code>","position":{"start":{"line":972,"column":94,"offset":32549},"end":{"line":972,"column":98,"offset":32553}}},{"type":"text","value":". Now, what if I say capital ","position":{"start":{"line":972,"column":98,"offset":32553},"end":{"line":972,"column":127,"offset":32582}}},{"type":"raw","value":"<code class=\"language-text\">'P'</code>","position":{"start":{"line":972,"column":127,"offset":32582},"end":{"line":972,"column":132,"offset":32587}}},{"type":"text","value":" instead of small ","position":{"start":{"line":972,"column":132,"offset":32587},"end":{"line":972,"column":150,"offset":32605}}},{"type":"raw","value":"<code class=\"language-text\">'p'</code>","position":{"start":{"line":972,"column":150,"offset":32605},"end":{"line":972,"column":155,"offset":32610}}},{"type":"text","value":" here? ","position":{"start":{"line":972,"column":155,"offset":32610},"end":{"line":972,"column":162,"offset":32617}}},{"type":"raw","value":"<code class=\"language-text\">Pow(2,5)</code>","position":{"start":{"line":972,"column":162,"offset":32617},"end":{"line":972,"column":172,"offset":32627}}},{"type":"text","value":" would lead to an error.","position":{"start":{"line":972,"column":172,"offset":32627},"end":{"line":972,"column":196,"offset":32651}}}],"position":{"start":{"line":972,"column":1,"offset":32456},"end":{"line":972,"column":196,"offset":32651}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">32</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> Pow<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'Pow'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined</code></pre></div>","position":{"start":{"line":974,"column":1,"offset":32655},"end":{"line":981,"column":4,"offset":32838}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The only things not case-sensitive in Python, are string values. Earlier we saw that the code ","position":{"start":{"line":983,"column":1,"offset":32842},"end":{"line":983,"column":95,"offset":32936}}},{"type":"raw","value":"<code class=\"language-text\">print(\"Hello\")</code>","position":{"start":{"line":983,"column":95,"offset":32936},"end":{"line":983,"column":111,"offset":32952}}},{"type":"text","value":" displays the text ","position":{"start":{"line":983,"column":111,"offset":32952},"end":{"line":983,"column":130,"offset":32971}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":983,"column":130,"offset":32971},"end":{"line":983,"column":139,"offset":32980}}},{"type":"text","value":". Inside a string, the text can be in any case. Hence, ","position":{"start":{"line":983,"column":139,"offset":32980},"end":{"line":983,"column":194,"offset":33035}}},{"type":"raw","value":"<code class=\"language-text\">print(\"hello\")</code>","position":{"start":{"line":983,"column":194,"offset":33035},"end":{"line":983,"column":210,"offset":33051}}},{"type":"text","value":" displays ","position":{"start":{"line":983,"column":210,"offset":33051},"end":{"line":983,"column":220,"offset":33061}}},{"type":"raw","value":"<code class=\"language-text\">\"hello\"</code>","position":{"start":{"line":983,"column":220,"offset":33061},"end":{"line":983,"column":229,"offset":33070}}},{"type":"text","value":" ,with a small ","position":{"start":{"line":983,"column":229,"offset":33070},"end":{"line":983,"column":244,"offset":33085}}},{"type":"raw","value":"<code class=\"language-text\">'h'</code>","position":{"start":{"line":983,"column":244,"offset":33085},"end":{"line":983,"column":249,"offset":33090}}},{"type":"text","value":".","position":{"start":{"line":983,"column":249,"offset":33090},"end":{"line":983,"column":250,"offset":33091}}}],"position":{"start":{"line":983,"column":1,"offset":32842},"end":{"line":983,"column":250,"offset":33091}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n    Hello\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n    hello\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hellO\"</span><span class=\"token punctuation\">)</span>\n    hellO\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"hellO\"</span> <span class=\"token punctuation\">)</span>\n    hellO</code></pre></div>","position":{"start":{"line":985,"column":1,"offset":33095},"end":{"line":994,"column":4,"offset":33252}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However inside your code, you need to be very particular about the case of function names, class names, variable names, and the like.","position":{"start":{"line":996,"column":1,"offset":33256},"end":{"line":996,"column":134,"offset":33389}}}],"position":{"start":{"line":996,"column":1,"offset":33256},"end":{"line":996,"column":134,"offset":33389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In your code, whitespace does not really matter. You can add space here and here, and you would still get the same output. However, in case of strings, whitespace does matter.","position":{"start":{"line":998,"column":1,"offset":33393},"end":{"line":998,"column":176,"offset":33568}}}],"position":{"start":{"line":998,"column":1,"offset":33393},"end":{"line":998,"column":176,"offset":33568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we say ","position":{"start":{"line":1000,"column":1,"offset":33572},"end":{"line":1000,"column":11,"offset":33582}}},{"type":"raw","value":"<code class=\"language-text\">print(\"hellO World\")</code>","position":{"start":{"line":1000,"column":11,"offset":33582},"end":{"line":1000,"column":33,"offset":33604}}},{"type":"text","value":", it would print ","position":{"start":{"line":1000,"column":33,"offset":33604},"end":{"line":1000,"column":50,"offset":33621}}},{"type":"raw","value":"<code class=\"language-text\">\"hellO World\"</code>","position":{"start":{"line":1000,"column":50,"offset":33621},"end":{"line":1000,"column":65,"offset":33636}}},{"type":"text","value":", with a space in between. And if you do ","position":{"start":{"line":1000,"column":65,"offset":33636},"end":{"line":1000,"column":106,"offset":33677}}},{"type":"raw","value":"<code class=\"language-text\">print(\"hellO World\")</code>","position":{"start":{"line":1000,"column":106,"offset":33677},"end":{"line":1000,"column":128,"offset":33699}}},{"type":"text","value":" with three spaces, it would print the same. In expressions, white-space does not affect the output.","position":{"start":{"line":1000,"column":128,"offset":33699},"end":{"line":1000,"column":228,"offset":33799}}}],"position":{"start":{"line":1000,"column":1,"offset":33572},"end":{"line":1000,"column":228,"offset":33799}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"hellO World\"</span> <span class=\"token punctuation\">)</span>\n    hellO World\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"hellO     World\"</span> <span class=\"token punctuation\">)</span>\n    hellO     World</code></pre></div>","position":{"start":{"line":1002,"column":1,"offset":33803},"end":{"line":1007,"column":4,"offset":33925}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The last thing we want to look at, is an ","position":{"start":{"line":1009,"column":1,"offset":33929},"end":{"line":1009,"column":42,"offset":33970}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"escape sequence","position":{"start":{"line":1009,"column":44,"offset":33972},"end":{"line":1009,"column":59,"offset":33987}}}],"position":{"start":{"line":1009,"column":42,"offset":33970},"end":{"line":1009,"column":61,"offset":33989}}},{"type":"text","value":". Let's say you want to print a double quote, ","position":{"start":{"line":1009,"column":61,"offset":33989},"end":{"line":1009,"column":107,"offset":34035}}},{"type":"raw","value":"<code class=\"language-text\">\"</code>","position":{"start":{"line":1009,"column":107,"offset":34035},"end":{"line":1009,"column":110,"offset":34038}}},{"type":"text","value":", in the code. If we were to do this: ","position":{"start":{"line":1009,"column":110,"offset":34038},"end":{"line":1009,"column":148,"offset":34076}}},{"type":"raw","value":"<code class=\"language-text\">print(\"Hello\"\")</code>","position":{"start":{"line":1009,"column":148,"offset":34076},"end":{"line":1009,"column":165,"offset":34093}}},{"type":"text","value":", what would happen? The compiler says error!","position":{"start":{"line":1009,"column":165,"offset":34093},"end":{"line":1009,"column":210,"offset":34138}}}],"position":{"start":{"line":1009,"column":1,"offset":33929},"end":{"line":1009,"column":210,"offset":34138}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span>\"<span class=\"token punctuation\">)</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span>\"<span class=\"token punctuation\">)</span>\n                      <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> EOL <span class=\"token keyword\">while</span> scanning string literal</code></pre></div>","position":{"start":{"line":1011,"column":1,"offset":34142},"end":{"line":1017,"column":4,"offset":34313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to print a ","position":{"start":{"line":1019,"column":1,"offset":34317},"end":{"line":1019,"column":24,"offset":34340}}},{"type":"raw","value":"<code class=\"language-text\">\"</code>","position":{"start":{"line":1019,"column":24,"offset":34340},"end":{"line":1019,"column":27,"offset":34343}}},{"type":"text","value":" inside a string, use an escape sequence. In Python, the symbol ","position":{"start":{"line":1019,"column":27,"offset":34343},"end":{"line":1019,"column":91,"offset":34407}}},{"type":"raw","value":"<code class=\"language-text\">'\\'</code>","position":{"start":{"line":1019,"column":91,"offset":34407},"end":{"line":1019,"column":96,"offset":34412}}},{"type":"text","value":" is used as an ","position":{"start":{"line":1019,"column":96,"offset":34412},"end":{"line":1019,"column":111,"offset":34427}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"escape character","position":{"start":{"line":1019,"column":113,"offset":34429},"end":{"line":1019,"column":129,"offset":34445}}}],"position":{"start":{"line":1019,"column":111,"offset":34427},"end":{"line":1019,"column":131,"offset":34447}}},{"type":"text","value":". On using ","position":{"start":{"line":1019,"column":131,"offset":34447},"end":{"line":1019,"column":142,"offset":34458}}},{"type":"raw","value":"<code class=\"language-text\">'\\'</code>","position":{"start":{"line":1019,"column":142,"offset":34458},"end":{"line":1019,"column":147,"offset":34463}}},{"type":"text","value":" adjacent to the ","position":{"start":{"line":1019,"column":147,"offset":34463},"end":{"line":1019,"column":164,"offset":34480}}},{"type":"raw","value":"<code class=\"language-text\">\"</code>","position":{"start":{"line":1019,"column":164,"offset":34480},"end":{"line":1019,"column":167,"offset":34483}}},{"type":"text","value":", it prints ","position":{"start":{"line":1019,"column":167,"offset":34483},"end":{"line":1019,"column":179,"offset":34495}}},{"type":"raw","value":"<code class=\"language-text\">Hello\"</code>","position":{"start":{"line":1019,"column":179,"offset":34495},"end":{"line":1019,"column":187,"offset":34503}}},{"type":"text","value":" ","position":{"start":{"line":1019,"column":187,"offset":34503},"end":{"line":1019,"column":188,"offset":34504}}},{"type":"text","value":"(","position":{"start":{"line":1019,"column":188,"offset":34504},"end":{"line":1019,"column":190,"offset":34506}}},{"type":"text","value":"notice the trailing ","position":{"start":{"line":1019,"column":190,"offset":34506},"end":{"line":1019,"column":210,"offset":34526}}},{"type":"raw","value":"<code class=\"language-text\">\"</code>","position":{"start":{"line":1019,"column":210,"offset":34526},"end":{"line":1019,"column":213,"offset":34529}}},{"type":"text","value":")","position":{"start":{"line":1019,"column":213,"offset":34529},"end":{"line":1019,"column":215,"offset":34531}}},{"type":"text","value":". We have used the ","position":{"start":{"line":1019,"column":215,"offset":34531},"end":{"line":1019,"column":234,"offset":34550}}},{"type":"raw","value":"<code class=\"language-text\">'\\'</code>","position":{"start":{"line":1019,"column":234,"offset":34550},"end":{"line":1019,"column":239,"offset":34555}}},{"type":"text","value":" to ","position":{"start":{"line":1019,"column":239,"offset":34555},"end":{"line":1019,"column":243,"offset":34559}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"escape","position":{"start":{"line":1019,"column":245,"offset":34561},"end":{"line":1019,"column":251,"offset":34567}}}],"position":{"start":{"line":1019,"column":243,"offset":34559},"end":{"line":1019,"column":253,"offset":34569}}},{"type":"text","value":" the ","position":{"start":{"line":1019,"column":253,"offset":34569},"end":{"line":1019,"column":258,"offset":34574}}},{"type":"raw","value":"<code class=\"language-text\">\"</code>","position":{"start":{"line":1019,"column":258,"offset":34574},"end":{"line":1019,"column":261,"offset":34577}}},{"type":"text","value":", by forming an ","position":{"start":{"line":1019,"column":261,"offset":34577},"end":{"line":1019,"column":277,"offset":34593}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"escape sequence","position":{"start":{"line":1019,"column":278,"offset":34594},"end":{"line":1019,"column":293,"offset":34609}}}],"position":{"start":{"line":1019,"column":277,"offset":34593},"end":{"line":1019,"column":294,"offset":34610}}},{"type":"text","value":" ","position":{"start":{"line":1019,"column":294,"offset":34610},"end":{"line":1019,"column":295,"offset":34611}}},{"type":"raw","value":"<code class=\"language-text\">\\\"</code>","position":{"start":{"line":1019,"column":295,"offset":34611},"end":{"line":1019,"column":299,"offset":34615}}},{"type":"text","value":".","position":{"start":{"line":1019,"column":299,"offset":34615},"end":{"line":1019,"column":300,"offset":34616}}}],"position":{"start":{"line":1019,"column":1,"offset":34317},"end":{"line":1019,"column":300,"offset":34616}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\\"\"</span><span class=\"token punctuation\">)</span>\nHello\"\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":1021,"column":1,"offset":34620},"end":{"line":1025,"column":4,"offset":34669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The other reason why you would want to use a ","position":{"start":{"line":1027,"column":1,"offset":34673},"end":{"line":1027,"column":46,"offset":34718}}},{"type":"raw","value":"<code class=\"language-text\">'\\'</code>","position":{"start":{"line":1027,"column":46,"offset":34718},"end":{"line":1027,"column":51,"offset":34723}}},{"type":"text","value":" is to print a ","position":{"start":{"line":1027,"column":51,"offset":34723},"end":{"line":1027,"column":66,"offset":34738}}},{"type":"raw","value":"<code class=\"language-text\">&lt;NEWLINE></code>","position":{"start":{"line":1027,"column":66,"offset":34738},"end":{"line":1027,"column":77,"offset":34749}}},{"type":"text","value":". If you want to print ","position":{"start":{"line":1027,"column":77,"offset":34749},"end":{"line":1027,"column":100,"offset":34772}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":1027,"column":100,"offset":34772},"end":{"line":1027,"column":115,"offset":34787}}},{"type":"text","value":", but with ","position":{"start":{"line":1027,"column":115,"offset":34787},"end":{"line":1027,"column":126,"offset":34798}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":1027,"column":126,"offset":34798},"end":{"line":1027,"column":135,"offset":34807}}},{"type":"text","value":" on one line and ","position":{"start":{"line":1027,"column":135,"offset":34807},"end":{"line":1027,"column":152,"offset":34824}}},{"type":"raw","value":"<code class=\"language-text\">\"World\"</code>","position":{"start":{"line":1027,"column":152,"offset":34824},"end":{"line":1027,"column":161,"offset":34833}}},{"type":"text","value":" on the next, ","position":{"start":{"line":1027,"column":161,"offset":34833},"end":{"line":1027,"column":175,"offset":34847}}},{"type":"raw","value":"<code class=\"language-text\">'\\n'</code>","position":{"start":{"line":1027,"column":175,"offset":34847},"end":{"line":1027,"column":181,"offset":34853}}},{"type":"text","value":" is the escape sequence to use.","position":{"start":{"line":1027,"column":181,"offset":34853},"end":{"line":1027,"column":212,"offset":34884}}}],"position":{"start":{"line":1027,"column":1,"offset":34673},"end":{"line":1027,"column":212,"offset":34884}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\nWorld\"</span><span class=\"token punctuation\">)</span>\n    Hello\n    World</code></pre></div>","position":{"start":{"line":1029,"column":1,"offset":34888},"end":{"line":1033,"column":4,"offset":34955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The other important escape sequence is ","position":{"start":{"line":1035,"column":1,"offset":34959},"end":{"line":1035,"column":40,"offset":34998}}},{"type":"raw","value":"<code class=\"language-text\">'\\t'</code>","position":{"start":{"line":1035,"column":40,"offset":34998},"end":{"line":1035,"column":46,"offset":35004}}},{"type":"text","value":", which prints a ","position":{"start":{"line":1035,"column":46,"offset":35004},"end":{"line":1035,"column":63,"offset":35021}}},{"type":"raw","value":"<code class=\"language-text\">&lt;TAB></code>","position":{"start":{"line":1035,"column":63,"offset":35021},"end":{"line":1035,"column":70,"offset":35028}}},{"type":"text","value":" in the output. When you do ","position":{"start":{"line":1035,"column":70,"offset":35028},"end":{"line":1035,"column":98,"offset":35056}}},{"type":"raw","value":"<code class=\"language-text\">print(\"Hello\\tWorld\")</code>","position":{"start":{"line":1035,"column":98,"offset":35056},"end":{"line":1035,"column":121,"offset":35079}}},{"type":"text","value":", you can see the tab-space between ","position":{"start":{"line":1035,"column":121,"offset":35079},"end":{"line":1035,"column":157,"offset":35115}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello\"</code>","position":{"start":{"line":1035,"column":157,"offset":35115},"end":{"line":1035,"column":166,"offset":35124}}},{"type":"text","value":" and ","position":{"start":{"line":1035,"column":166,"offset":35124},"end":{"line":1035,"column":171,"offset":35129}}},{"type":"raw","value":"<code class=\"language-text\">\"World\"</code>","position":{"start":{"line":1035,"column":171,"offset":35129},"end":{"line":1035,"column":180,"offset":35138}}},{"type":"text","value":".","position":{"start":{"line":1035,"column":180,"offset":35138},"end":{"line":1035,"column":181,"offset":35139}}}],"position":{"start":{"line":1035,"column":1,"offset":34959},"end":{"line":1035,"column":181,"offset":35139}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\tWorld\"</span><span class=\"token punctuation\">)</span>\n    Hello   World</code></pre></div>","position":{"start":{"line":1037,"column":1,"offset":35143},"end":{"line":1040,"column":4,"offset":35207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another useful escape sequence is ","position":{"start":{"line":1042,"column":1,"offset":35211},"end":{"line":1042,"column":35,"offset":35245}}},{"type":"raw","value":"<code class=\"language-text\">\\\\</code>","position":{"start":{"line":1042,"column":35,"offset":35245},"end":{"line":1042,"column":39,"offset":35249}}},{"type":"text","value":" . If you want to print a ","position":{"start":{"line":1042,"column":39,"offset":35249},"end":{"line":1042,"column":65,"offset":35275}}},{"type":"raw","value":"<code class=\"language-text\">\\</code>","position":{"start":{"line":1042,"column":65,"offset":35275},"end":{"line":1042,"column":68,"offset":35278}}},{"type":"text","value":" , then use the sequence ","position":{"start":{"line":1042,"column":68,"offset":35278},"end":{"line":1042,"column":93,"offset":35303}}},{"type":"raw","value":"<code class=\"language-text\">\\\\</code>","position":{"start":{"line":1042,"column":93,"offset":35303},"end":{"line":1042,"column":97,"offset":35307}}},{"type":"text","value":" . You would see that it prints ","position":{"start":{"line":1042,"column":97,"offset":35307},"end":{"line":1042,"column":129,"offset":35339}}},{"type":"raw","value":"<code class=\"language-text\">Hello\\World</code>","position":{"start":{"line":1042,"column":129,"offset":35339},"end":{"line":1042,"column":142,"offset":35352}}},{"type":"text","value":" . Think about what would happen if we put six ","position":{"start":{"line":1042,"column":142,"offset":35352},"end":{"line":1042,"column":189,"offset":35399}}},{"type":"raw","value":"<code class=\"language-text\">\\</code>","position":{"start":{"line":1042,"column":189,"offset":35399},"end":{"line":1042,"column":192,"offset":35402}}},{"type":"text","value":" . Yes you're right! It would print this string: ","position":{"start":{"line":1042,"column":192,"offset":35402},"end":{"line":1042,"column":241,"offset":35451}}},{"type":"raw","value":"<code class=\"language-text\">\"\\\\\\\"</code>","position":{"start":{"line":1042,"column":241,"offset":35451},"end":{"line":1042,"column":248,"offset":35458}}},{"type":"text","value":" .","position":{"start":{"line":1042,"column":248,"offset":35458},"end":{"line":1042,"column":250,"offset":35460}}}],"position":{"start":{"line":1042,"column":1,"offset":35211},"end":{"line":1042,"column":250,"offset":35460}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\\\World\"</span><span class=\"token punctuation\">)</span>\n    Hello\\World\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\\\\\\\\\\\World\"</span><span class=\"token punctuation\">)</span>\n    Hello\\\\\\World</code></pre></div>","position":{"start":{"line":1044,"column":1,"offset":35464},"end":{"line":1049,"column":4,"offset":35580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the things with Python is, it does not matter whether you use double quotes or single quotes to enclose strings. There are some interesting, and useful ways of using a combination of both, within the same string. Have a look at this call: ","position":{"start":{"line":1051,"column":1,"offset":35584},"end":{"line":1051,"column":247,"offset":35830}}},{"type":"raw","value":"<code class=\"language-text\">print(\"Hello'World\")</code>","position":{"start":{"line":1051,"column":247,"offset":35830},"end":{"line":1051,"column":269,"offset":35852}}},{"type":"text","value":", and notice the output we get. In a similar way, the following code will be accepted and run by the Python system: ","position":{"start":{"line":1051,"column":269,"offset":35852},"end":{"line":1051,"column":385,"offset":35968}}},{"type":"raw","value":"<code class=\"language-text\">print('Hello\"World')</code>","position":{"start":{"line":1051,"column":385,"offset":35968},"end":{"line":1051,"column":407,"offset":35990}}},{"type":"text","value":".","position":{"start":{"line":1051,"column":407,"offset":35990},"end":{"line":1051,"column":408,"offset":35991}}}],"position":{"start":{"line":1051,"column":1,"offset":35584},"end":{"line":1051,"column":408,"offset":35991}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello\"'</span><span class=\"token punctuation\">)</span>\n    Hello\"\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello'World\"</span><span class=\"token punctuation\">)</span>\n    Hello'World\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\\"World\"</span><span class=\"token punctuation\">)</span>\n    Hello\"World\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\\\"World\"</span><span class=\"token punctuation\">)</span>\n    Hello\"World</code></pre></div>","position":{"start":{"line":1053,"column":1,"offset":35995},"end":{"line":1062,"column":4,"offset":36189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The above two examples can be used as a tip by newbie programmers when they form string literals, and want to use them in their code:","position":{"start":{"line":1064,"column":1,"offset":36193},"end":{"line":1064,"column":134,"offset":36326}}}],"position":{"start":{"line":1064,"column":1,"offset":36193},"end":{"line":1064,"column":134,"offset":36326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If the string literal contains one or more single quotes, then you can use double quotes to enclose it.","position":{"start":{"line":1066,"column":5,"offset":36334},"end":{"line":1066,"column":108,"offset":36437}}}],"position":{"start":{"line":1066,"column":1,"offset":36330},"end":{"line":1066,"column":108,"offset":36437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"However if the string contains one or more double quotes, then prefer to use single quotes to enclose it.","position":{"start":{"line":1067,"column":5,"offset":36443},"end":{"line":1067,"column":110,"offset":36548}}}],"position":{"start":{"line":1067,"column":1,"offset":36439},"end":{"line":1067,"column":110,"offset":36548}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1066,"column":1,"offset":36330},"end":{"line":1067,"column":110,"offset":36548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1069,"column":3,"offset":36554},"end":{"line":1069,"column":10,"offset":36561}}}],"position":{"start":{"line":1069,"column":1,"offset":36552},"end":{"line":1069,"column":12,"offset":36563}}}],"position":{"start":{"line":1069,"column":1,"offset":36552},"end":{"line":1069,"column":12,"offset":36563}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":1071,"column":1,"offset":36567},"end":{"line":1071,"column":18,"offset":36584}}}],"position":{"start":{"line":1071,"column":1,"offset":36567},"end":{"line":1071,"column":18,"offset":36584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Explored a number of puzzles related to code involving:","position":{"start":{"line":1073,"column":5,"offset":36592},"end":{"line":1073,"column":60,"offset":36647}}}],"position":{"start":{"line":1073,"column":5,"offset":36592},"end":{"line":1073,"column":60,"offset":36647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Built-in functions for numeric calculations","position":{"start":{"line":1074,"column":9,"offset":36657},"end":{"line":1074,"column":52,"offset":36700}}}],"position":{"start":{"line":1074,"column":5,"offset":36653},"end":{"line":1074,"column":52,"offset":36700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":1075,"column":9,"offset":36710},"end":{"line":1075,"column":13,"offset":36714}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1075,"column":13,"offset":36714},"end":{"line":1075,"column":22,"offset":36723}}},{"type":"text","value":" function to display expressions and strings","position":{"start":{"line":1075,"column":22,"offset":36723},"end":{"line":1075,"column":66,"offset":36767}}}],"position":{"start":{"line":1075,"column":5,"offset":36706},"end":{"line":1075,"column":66,"offset":36767}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1074,"column":5,"offset":36653},"end":{"line":1075,"column":66,"offset":36767}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1073,"column":1,"offset":36588},"end":{"line":1075,"column":66,"offset":36767}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Covered the following aspects of the above utilities:","position":{"start":{"line":1076,"column":5,"offset":36773},"end":{"line":1076,"column":58,"offset":36826}}}],"position":{"start":{"line":1076,"column":5,"offset":36773},"end":{"line":1076,"column":58,"offset":36826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Case-sensitive aspects of names and strings","position":{"start":{"line":1077,"column":9,"offset":36836},"end":{"line":1077,"column":52,"offset":36879}}}],"position":{"start":{"line":1077,"column":5,"offset":36832},"end":{"line":1077,"column":52,"offset":36879}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The role played by whitespace","position":{"start":{"line":1078,"column":9,"offset":36889},"end":{"line":1078,"column":38,"offset":36918}}}],"position":{"start":{"line":1078,"column":5,"offset":36885},"end":{"line":1078,"column":38,"offset":36918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The escape character, and common escape sequences","position":{"start":{"line":1079,"column":9,"offset":36928},"end":{"line":1079,"column":58,"offset":36977}}}],"position":{"start":{"line":1079,"column":5,"offset":36924},"end":{"line":1079,"column":58,"offset":36977}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1077,"column":5,"offset":36832},"end":{"line":1079,"column":58,"offset":36977}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1076,"column":1,"offset":36769},"end":{"line":1079,"column":58,"offset":36977}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1073,"column":1,"offset":36588},"end":{"line":1079,"column":58,"offset":36977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 08: Formatted Output With print","position":{"start":{"line":1081,"column":3,"offset":36983},"end":{"line":1081,"column":39,"offset":37019}}},{"type":"text","value":"(","position":{"start":{"line":1081,"column":39,"offset":37019},"end":{"line":1081,"column":41,"offset":37021}}},{"type":"text","value":")","position":{"start":{"line":1081,"column":41,"offset":37021},"end":{"line":1081,"column":43,"offset":37023}}}],"position":{"start":{"line":1081,"column":1,"offset":36981},"end":{"line":1081,"column":45,"offset":37025}}}],"position":{"start":{"line":1081,"column":1,"offset":36981},"end":{"line":1081,"column":45,"offset":37025}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step, we learned how to print a hard-coded string, such as ","position":{"start":{"line":1083,"column":1,"offset":37029},"end":{"line":1083,"column":76,"offset":37104}}},{"type":"raw","value":"<code class=\"language-text\">\"5 * 6 = 30\"</code>","position":{"start":{"line":1083,"column":76,"offset":37104},"end":{"line":1083,"column":90,"offset":37118}}},{"type":"text","value":".","position":{"start":{"line":1083,"column":90,"offset":37118},"end":{"line":1083,"column":91,"offset":37119}}}],"position":{"start":{"line":1083,"column":1,"offset":37029},"end":{"line":1083,"column":91,"offset":37119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's try to replace the hard-coded ","position":{"start":{"line":1085,"column":1,"offset":37123},"end":{"line":1085,"column":51,"offset":37173}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":1085,"column":51,"offset":37173},"end":{"line":1085,"column":55,"offset":37177}}},{"type":"text","value":" with a computed value.","position":{"start":{"line":1085,"column":55,"offset":37177},"end":{"line":1085,"column":78,"offset":37200}}}],"position":{"start":{"line":1085,"column":1,"offset":37123},"end":{"line":1085,"column":78,"offset":37200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start with a simple scenario. Let's say we want to place that calculated value within a string, and display it. How do we do that?","position":{"start":{"line":1087,"column":1,"offset":37204},"end":{"line":1087,"column":137,"offset":37340}}}],"position":{"start":{"line":1087,"column":1,"offset":37204},"end":{"line":1087,"column":137,"offset":37340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01: print","position":{"start":{"line":1089,"column":3,"offset":37346},"end":{"line":1089,"column":20,"offset":37363}}},{"type":"text","value":"(","position":{"start":{"line":1089,"column":20,"offset":37363},"end":{"line":1089,"column":22,"offset":37365}}},{"type":"text","value":")","position":{"start":{"line":1089,"column":22,"offset":37365},"end":{"line":1089,"column":24,"offset":37367}}},{"type":"text","value":" Formatted Output","position":{"start":{"line":1089,"column":24,"offset":37367},"end":{"line":1089,"column":41,"offset":37384}}}],"position":{"start":{"line":1089,"column":1,"offset":37344},"end":{"line":1089,"column":43,"offset":37386}}}],"position":{"start":{"line":1089,"column":1,"offset":37344},"end":{"line":1089,"column":43,"offset":37386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1091,"column":1,"offset":37390},"end":{"line":1091,"column":11,"offset":37400}}},{"type":"text","value":" method can be used to print formatted text.","position":{"start":{"line":1091,"column":11,"offset":37400},"end":{"line":1091,"column":55,"offset":37444}}}],"position":{"start":{"line":1091,"column":1,"offset":37390},"end":{"line":1091,"column":55,"offset":37444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's see an example:","position":{"start":{"line":1093,"column":1,"offset":37448},"end":{"line":1093,"column":22,"offset":37469}}}],"position":{"start":{"line":1093,"column":1,"offset":37448},"end":{"line":1093,"column":22,"offset":37469}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VALUE\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    VALUE</code></pre></div>","position":{"start":{"line":1095,"column":1,"offset":37473},"end":{"line":1098,"column":4,"offset":37534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We were expecting ","position":{"start":{"line":1100,"column":1,"offset":37538},"end":{"line":1100,"column":19,"offset":37556}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1100,"column":19,"offset":37556},"end":{"line":1100,"column":23,"offset":37560}}},{"type":"text","value":" to be printed, but it's actually printing ","position":{"start":{"line":1100,"column":23,"offset":37560},"end":{"line":1100,"column":66,"offset":37603}}},{"type":"raw","value":"<code class=\"language-text\">VALUE</code>","position":{"start":{"line":1100,"column":66,"offset":37603},"end":{"line":1100,"column":73,"offset":37610}}},{"type":"text","value":".","position":{"start":{"line":1100,"column":73,"offset":37610},"end":{"line":1100,"column":74,"offset":37611}}}],"position":{"start":{"line":1100,"column":1,"offset":37538},"end":{"line":1100,"column":74,"offset":37611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do we get ","position":{"start":{"line":1102,"column":1,"offset":37615},"end":{"line":1102,"column":15,"offset":37629}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1102,"column":15,"offset":37629},"end":{"line":1102,"column":19,"offset":37633}}},{"type":"text","value":" to be printed then?","position":{"start":{"line":1102,"column":19,"offset":37633},"end":{"line":1102,"column":39,"offset":37653}}}],"position":{"start":{"line":1102,"column":1,"offset":37615},"end":{"line":1102,"column":39,"offset":37653}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VALUE {0}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    VALUE <span class=\"token number\">10</span></code></pre></div>","position":{"start":{"line":1104,"column":1,"offset":37657},"end":{"line":1107,"column":4,"offset":37725}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By having an open brace ","position":{"start":{"line":1109,"column":1,"offset":37729},"end":{"line":1109,"column":25,"offset":37753}}},{"type":"raw","value":"<code class=\"language-text\">{</code>","position":{"start":{"line":1109,"column":25,"offset":37753},"end":{"line":1109,"column":28,"offset":37756}}},{"type":"text","value":", closed brace ","position":{"start":{"line":1109,"column":28,"offset":37756},"end":{"line":1109,"column":43,"offset":37771}}},{"type":"raw","value":"<code class=\"language-text\">}</code>","position":{"start":{"line":1109,"column":43,"offset":37771},"end":{"line":1109,"column":46,"offset":37774}}},{"type":"text","value":", and and by putting the index of the value between them. Here, the value is the first parameter, and it's index will be ","position":{"start":{"line":1109,"column":46,"offset":37774},"end":{"line":1109,"column":167,"offset":37895}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":1109,"column":167,"offset":37895},"end":{"line":1109,"column":170,"offset":37898}}},{"type":"text","value":".","position":{"start":{"line":1109,"column":170,"offset":37898},"end":{"line":1109,"column":171,"offset":37899}}}],"position":{"start":{"line":1109,"column":1,"offset":37729},"end":{"line":1109,"column":171,"offset":37899}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">\"VALUE {0}\"</code>","position":{"start":{"line":1111,"column":1,"offset":37903},"end":{"line":1111,"column":14,"offset":37916}}},{"type":"text","value":" is what we need.","position":{"start":{"line":1111,"column":14,"offset":37916},"end":{"line":1111,"column":31,"offset":37933}}}],"position":{"start":{"line":1111,"column":1,"offset":37903},"end":{"line":1111,"column":31,"offset":37933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's take another example. Suppose to the ","position":{"start":{"line":1113,"column":1,"offset":37937},"end":{"line":1113,"column":44,"offset":37980}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1113,"column":44,"offset":37980},"end":{"line":1113,"column":54,"offset":37990}}},{"type":"text","value":" function, we pass three values: ","position":{"start":{"line":1113,"column":54,"offset":37990},"end":{"line":1113,"column":87,"offset":38023}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1113,"column":87,"offset":38023},"end":{"line":1113,"column":91,"offset":38027}}},{"type":"text","value":", ","position":{"start":{"line":1113,"column":91,"offset":38027},"end":{"line":1113,"column":93,"offset":38029}}},{"type":"raw","value":"<code class=\"language-text\">20</code>","position":{"start":{"line":1113,"column":93,"offset":38029},"end":{"line":1113,"column":97,"offset":38033}}},{"type":"text","value":" and ","position":{"start":{"line":1113,"column":97,"offset":38033},"end":{"line":1113,"column":102,"offset":38038}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":1113,"column":102,"offset":38038},"end":{"line":1113,"column":106,"offset":38042}}},{"type":"text","value":".","position":{"start":{"line":1113,"column":106,"offset":38042},"end":{"line":1113,"column":107,"offset":38043}}}],"position":{"start":{"line":1113,"column":1,"offset":37937},"end":{"line":1113,"column":107,"offset":38043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Typically when we count positions or indexes, we start from ","position":{"start":{"line":1115,"column":1,"offset":38047},"end":{"line":1115,"column":61,"offset":38107}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":1115,"column":61,"offset":38107},"end":{"line":1115,"column":64,"offset":38110}}},{"type":"text","value":".","position":{"start":{"line":1115,"column":64,"offset":38110},"end":{"line":1115,"column":65,"offset":38111}}}],"position":{"start":{"line":1115,"column":1,"offset":38047},"end":{"line":1115,"column":65,"offset":38111}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To print the first value, you need to pass in an index of ","position":{"start":{"line":1117,"column":1,"offset":38115},"end":{"line":1117,"column":59,"offset":38173}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":1117,"column":59,"offset":38173},"end":{"line":1117,"column":62,"offset":38176}}},{"type":"text","value":". To print the second value, pass an index of ","position":{"start":{"line":1117,"column":62,"offset":38176},"end":{"line":1117,"column":108,"offset":38222}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1117,"column":108,"offset":38222},"end":{"line":1117,"column":111,"offset":38225}}},{"type":"text","value":".","position":{"start":{"line":1117,"column":111,"offset":38225},"end":{"line":1117,"column":112,"offset":38226}}}],"position":{"start":{"line":1117,"column":1,"offset":38115},"end":{"line":1117,"column":112,"offset":38226}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VALUE {0}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    VALUE <span class=\"token number\">10</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VALUE {1}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    VALUE <span class=\"token number\">20</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"VALUE {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    VALUE <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":1119,"column":1,"offset":38230},"end":{"line":1126,"column":4,"offset":38421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now going back to our problem, we wanted to display ","position":{"start":{"line":1128,"column":1,"offset":38425},"end":{"line":1128,"column":53,"offset":38477}}},{"type":"raw","value":"<code class=\"language-text\">\"5 * 6 = 30\"</code>","position":{"start":{"line":1128,"column":53,"offset":38477},"end":{"line":1128,"column":67,"offset":38491}}},{"type":"text","value":", but without hard-coding. Instead of ","position":{"start":{"line":1128,"column":67,"offset":38491},"end":{"line":1128,"column":105,"offset":38529}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":1128,"column":105,"offset":38529},"end":{"line":1128,"column":109,"offset":38533}}},{"type":"text","value":", we want the calculated value of ","position":{"start":{"line":1128,"column":109,"offset":38533},"end":{"line":1128,"column":143,"offset":38567}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6</code>","position":{"start":{"line":1128,"column":143,"offset":38567},"end":{"line":1128,"column":150,"offset":38574}}},{"type":"text","value":".","position":{"start":{"line":1128,"column":150,"offset":38574},"end":{"line":1128,"column":151,"offset":38575}}}],"position":{"start":{"line":1128,"column":1,"offset":38425},"end":{"line":1128,"column":151,"offset":38575}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5 * 6 = 30\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":1130,"column":1,"offset":38579},"end":{"line":1133,"column":4,"offset":38654}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let replace ","position":{"start":{"line":1135,"column":1,"offset":38658},"end":{"line":1135,"column":13,"offset":38670}}},{"type":"raw","value":"<code class=\"language-text\">\"5 * 6 = 30\"</code>","position":{"start":{"line":1135,"column":13,"offset":38670},"end":{"line":1135,"column":27,"offset":38684}}},{"type":"text","value":" with ","position":{"start":{"line":1135,"column":27,"offset":38684},"end":{"line":1135,"column":33,"offset":38690}}},{"type":"raw","value":"<code class=\"language-text\">\"5 * 6 = {2}\"</code>","position":{"start":{"line":1135,"column":33,"offset":38690},"end":{"line":1135,"column":48,"offset":38705}}},{"type":"text","value":". ","position":{"start":{"line":1135,"column":48,"offset":38705},"end":{"line":1135,"column":50,"offset":38707}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1135,"column":50,"offset":38707},"end":{"line":1135,"column":53,"offset":38710}}},{"type":"text","value":" is the index of parameter value ","position":{"start":{"line":1135,"column":53,"offset":38710},"end":{"line":1135,"column":86,"offset":38743}}},{"type":"raw","value":"<code class=\"language-text\">5*6</code>","position":{"start":{"line":1135,"column":86,"offset":38743},"end":{"line":1135,"column":91,"offset":38748}}},{"type":"text","value":".","position":{"start":{"line":1135,"column":91,"offset":38748},"end":{"line":1135,"column":92,"offset":38749}}}],"position":{"start":{"line":1135,"column":1,"offset":38658},"end":{"line":1135,"column":92,"offset":38749}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5 * 6 = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":1137,"column":1,"offset":38753},"end":{"line":1140,"column":4,"offset":38829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Cool! Progress made.","position":{"start":{"line":1142,"column":1,"offset":38833},"end":{"line":1142,"column":21,"offset":38853}}}],"position":{"start":{"line":1142,"column":1,"offset":38833},"end":{"line":1142,"column":21,"offset":38853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's replace ","position":{"start":{"line":1144,"column":1,"offset":38857},"end":{"line":1144,"column":15,"offset":38871}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6</code>","position":{"start":{"line":1144,"column":15,"offset":38871},"end":{"line":1144,"column":22,"offset":38878}}},{"type":"text","value":" with the right indices - ","position":{"start":{"line":1144,"column":22,"offset":38878},"end":{"line":1144,"column":48,"offset":38904}}},{"type":"raw","value":"<code class=\"language-text\">{0} * {1}</code>","position":{"start":{"line":1144,"column":48,"offset":38904},"end":{"line":1144,"column":59,"offset":38915}}},{"type":"text","value":".","position":{"start":{"line":1144,"column":59,"offset":38915},"end":{"line":1144,"column":60,"offset":38916}}}],"position":{"start":{"line":1144,"column":1,"offset":38857},"end":{"line":1144,"column":60,"offset":38916}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":1146,"column":1,"offset":38920},"end":{"line":1149,"column":4,"offset":39000}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The great thing about this, is now we can replace the values we passed to ","position":{"start":{"line":1151,"column":1,"offset":39004},"end":{"line":1151,"column":75,"offset":39078}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1151,"column":75,"offset":39078},"end":{"line":1151,"column":84,"offset":39087}}},{"type":"text","value":" in the first place, without changing the indexes! So, we can display results for ","position":{"start":{"line":1151,"column":84,"offset":39087},"end":{"line":1151,"column":166,"offset":39169}}},{"type":"raw","value":"<code class=\"language-text\">5 * 7 = 35</code>","position":{"start":{"line":1151,"column":166,"offset":39169},"end":{"line":1151,"column":178,"offset":39181}}},{"type":"text","value":" and ","position":{"start":{"line":1151,"column":178,"offset":39181},"end":{"line":1151,"column":183,"offset":39186}}},{"type":"raw","value":"<code class=\"language-text\">5 * 8 = 40</code>","position":{"start":{"line":1151,"column":183,"offset":39186},"end":{"line":1151,"column":195,"offset":39198}}},{"type":"text","value":". We are now able to print ","position":{"start":{"line":1151,"column":195,"offset":39198},"end":{"line":1151,"column":222,"offset":39225}}},{"type":"raw","value":"<code class=\"language-text\">5 * 6 = 30</code>","position":{"start":{"line":1151,"column":222,"offset":39225},"end":{"line":1151,"column":234,"offset":39237}}},{"type":"text","value":", ","position":{"start":{"line":1151,"column":234,"offset":39237},"end":{"line":1151,"column":236,"offset":39239}}},{"type":"raw","value":"<code class=\"language-text\">5 * 7 = 35</code>","position":{"start":{"line":1151,"column":236,"offset":39239},"end":{"line":1151,"column":248,"offset":39251}}},{"type":"text","value":", ","position":{"start":{"line":1151,"column":248,"offset":39251},"end":{"line":1151,"column":250,"offset":39253}}},{"type":"raw","value":"<code class=\"language-text\">5 * 8 = 40</code>","position":{"start":{"line":1151,"column":250,"offset":39253},"end":{"line":1151,"column":262,"offset":39265}}},{"type":"text","value":", and can do similar things for other table entries as well.","position":{"start":{"line":1151,"column":262,"offset":39265},"end":{"line":1151,"column":322,"offset":39325}}}],"position":{"start":{"line":1151,"column":1,"offset":39004},"end":{"line":1151,"column":322,"offset":39325}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span></code></pre></div>","position":{"start":{"line":1153,"column":1,"offset":39329},"end":{"line":1160,"column":4,"offset":39541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1162,"column":3,"offset":39547},"end":{"line":1162,"column":10,"offset":39554}}}],"position":{"start":{"line":1162,"column":1,"offset":39545},"end":{"line":1162,"column":12,"offset":39556}}}],"position":{"start":{"line":1162,"column":1,"offset":39545},"end":{"line":1162,"column":12,"offset":39556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":1164,"column":1,"offset":39560},"end":{"line":1164,"column":18,"offset":39577}}}],"position":{"start":{"line":1164,"column":1,"offset":39560},"end":{"line":1164,"column":18,"offset":39577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Discovered that Python provides a way to do formatted printing of string values","position":{"start":{"line":1166,"column":5,"offset":39585},"end":{"line":1166,"column":84,"offset":39664}}}],"position":{"start":{"line":1166,"column":1,"offset":39581},"end":{"line":1166,"column":84,"offset":39664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at the ","position":{"start":{"line":1167,"column":5,"offset":39670},"end":{"line":1167,"column":19,"offset":39684}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1167,"column":19,"offset":39684},"end":{"line":1167,"column":29,"offset":39694}}},{"type":"text","value":" function, and saw how to call it within ","position":{"start":{"line":1167,"column":29,"offset":39694},"end":{"line":1167,"column":70,"offset":39735}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1167,"column":70,"offset":39735},"end":{"line":1167,"column":79,"offset":39744}}}],"position":{"start":{"line":1167,"column":1,"offset":39666},"end":{"line":1167,"column":79,"offset":39744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Observed how we could work only with the indexes of parameters to ","position":{"start":{"line":1168,"column":5,"offset":39750},"end":{"line":1168,"column":71,"offset":39816}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1168,"column":71,"offset":39816},"end":{"line":1168,"column":81,"offset":39826}}},{"type":"text","value":", and change the parameters we pass without changing the code","position":{"start":{"line":1168,"column":81,"offset":39826},"end":{"line":1168,"column":142,"offset":39887}}}],"position":{"start":{"line":1168,"column":1,"offset":39746},"end":{"line":1168,"column":142,"offset":39887}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1166,"column":1,"offset":39581},"end":{"line":1168,"column":142,"offset":39887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 09: Puzzles On format","position":{"start":{"line":1170,"column":3,"offset":39893},"end":{"line":1170,"column":29,"offset":39919}}},{"type":"text","value":"(","position":{"start":{"line":1170,"column":29,"offset":39919},"end":{"line":1170,"column":31,"offset":39921}}},{"type":"text","value":")","position":{"start":{"line":1170,"column":31,"offset":39921},"end":{"line":1170,"column":33,"offset":39923}}},{"type":"text","value":" and print","position":{"start":{"line":1170,"column":33,"offset":39923},"end":{"line":1170,"column":43,"offset":39933}}},{"type":"text","value":"(","position":{"start":{"line":1170,"column":43,"offset":39933},"end":{"line":1170,"column":45,"offset":39935}}},{"type":"text","value":")","position":{"start":{"line":1170,"column":45,"offset":39935},"end":{"line":1170,"column":47,"offset":39937}}}],"position":{"start":{"line":1170,"column":1,"offset":39891},"end":{"line":1170,"column":49,"offset":39939}}}],"position":{"start":{"line":1170,"column":1,"offset":39891},"end":{"line":1170,"column":49,"offset":39939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at a few puzzles related to the format, and the print methods.","position":{"start":{"line":1172,"column":1,"offset":39943},"end":{"line":1172,"column":88,"offset":40030}}}],"position":{"start":{"line":1172,"column":1,"offset":39943},"end":{"line":1172,"column":88,"offset":40030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01: format","position":{"start":{"line":1174,"column":3,"offset":40036},"end":{"line":1174,"column":21,"offset":40054}}},{"type":"text","value":"(","position":{"start":{"line":1174,"column":21,"offset":40054},"end":{"line":1174,"column":23,"offset":40056}}},{"type":"text","value":")","position":{"start":{"line":1174,"column":23,"offset":40056},"end":{"line":1174,"column":25,"offset":40058}}},{"type":"text","value":" And print","position":{"start":{"line":1174,"column":25,"offset":40058},"end":{"line":1174,"column":35,"offset":40068}}},{"type":"text","value":"(","position":{"start":{"line":1174,"column":35,"offset":40068},"end":{"line":1174,"column":37,"offset":40070}}},{"type":"text","value":")","position":{"start":{"line":1174,"column":37,"offset":40070},"end":{"line":1174,"column":39,"offset":40072}}},{"type":"text","value":" Puzzles","position":{"start":{"line":1174,"column":39,"offset":40072},"end":{"line":1174,"column":47,"offset":40080}}}],"position":{"start":{"line":1174,"column":1,"offset":40034},"end":{"line":1174,"column":49,"offset":40082}}}],"position":{"start":{"line":1174,"column":1,"offset":40034},"end":{"line":1174,"column":49,"offset":40082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we pass in additional values, such as: ","position":{"start":{"line":1176,"column":1,"offset":40086},"end":{"line":1176,"column":50,"offset":40135}}},{"type":"raw","value":"<code class=\"language-text\">5 * 8</code>","position":{"start":{"line":1176,"column":50,"offset":40135},"end":{"line":1176,"column":57,"offset":40142}}},{"type":"text","value":", ","position":{"start":{"line":1176,"column":57,"offset":40142},"end":{"line":1176,"column":59,"offset":40144}}},{"type":"raw","value":"<code class=\"language-text\">5 * 9</code>","position":{"start":{"line":1176,"column":59,"offset":40144},"end":{"line":1176,"column":66,"offset":40151}}},{"type":"text","value":" and ","position":{"start":{"line":1176,"column":66,"offset":40151},"end":{"line":1176,"column":71,"offset":40156}}},{"type":"raw","value":"<code class=\"language-text\">5 * 10</code>","position":{"start":{"line":1176,"column":71,"offset":40156},"end":{"line":1176,"column":79,"offset":40164}}},{"type":"text","value":". However, within the call to ","position":{"start":{"line":1176,"column":79,"offset":40164},"end":{"line":1176,"column":109,"offset":40194}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1176,"column":109,"offset":40194},"end":{"line":1176,"column":119,"offset":40204}}},{"type":"text","value":", we are only referring to the values at index ","position":{"start":{"line":1176,"column":119,"offset":40204},"end":{"line":1176,"column":166,"offset":40251}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":1176,"column":166,"offset":40251},"end":{"line":1176,"column":169,"offset":40254}}},{"type":"text","value":", index ","position":{"start":{"line":1176,"column":169,"offset":40254},"end":{"line":1176,"column":177,"offset":40262}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1176,"column":177,"offset":40262},"end":{"line":1176,"column":180,"offset":40265}}},{"type":"text","value":" and index ","position":{"start":{"line":1176,"column":180,"offset":40265},"end":{"line":1176,"column":191,"offset":40276}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1176,"column":191,"offset":40276},"end":{"line":1176,"column":194,"offset":40279}}},{"type":"text","value":". The values at indexes ","position":{"start":{"line":1176,"column":194,"offset":40279},"end":{"line":1176,"column":218,"offset":40303}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":1176,"column":218,"offset":40303},"end":{"line":1176,"column":221,"offset":40306}}},{"type":"text","value":" and ","position":{"start":{"line":1176,"column":221,"offset":40306},"end":{"line":1176,"column":226,"offset":40311}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":1176,"column":226,"offset":40311},"end":{"line":1176,"column":229,"offset":40314}}},{"type":"text","value":" are not used at all. What would happen when we run the code?","position":{"start":{"line":1176,"column":229,"offset":40314},"end":{"line":1176,"column":290,"offset":40375}}}],"position":{"start":{"line":1176,"column":1,"offset":40086},"end":{"line":1176,"column":290,"offset":40375}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span></code></pre></div>","position":{"start":{"line":1178,"column":1,"offset":40379},"end":{"line":1181,"column":4,"offset":40468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Would this throw an error? No, it does not. You can see that the additional values which are passed in, are conveniently ignored.","position":{"start":{"line":1183,"column":1,"offset":40472},"end":{"line":1183,"column":130,"offset":40601}}}],"position":{"start":{"line":1183,"column":1,"offset":40472},"end":{"line":1183,"column":130,"offset":40601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say instead of passing in a value of ","position":{"start":{"line":1185,"column":1,"offset":40605},"end":{"line":1185,"column":44,"offset":40648}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1185,"column":44,"offset":40648},"end":{"line":1185,"column":47,"offset":40651}}},{"type":"text","value":", we pass ","position":{"start":{"line":1185,"column":47,"offset":40651},"end":{"line":1185,"column":57,"offset":40661}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":1185,"column":57,"offset":40661},"end":{"line":1185,"column":60,"offset":40664}}},{"type":"text","value":". What would happen?","position":{"start":{"line":1185,"column":60,"offset":40664},"end":{"line":1185,"column":80,"offset":40684}}}],"position":{"start":{"line":1185,"column":1,"offset":40605},"end":{"line":1185,"column":80,"offset":40684}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {4}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span></code></pre></div>","position":{"start":{"line":1187,"column":1,"offset":40688},"end":{"line":1190,"column":4,"offset":40777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">5 * 10</code>","position":{"start":{"line":1192,"column":1,"offset":40781},"end":{"line":1192,"column":9,"offset":40789}}},{"type":"text","value":" is the value at index ","position":{"start":{"line":1192,"column":9,"offset":40789},"end":{"line":1192,"column":32,"offset":40812}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":1192,"column":32,"offset":40812},"end":{"line":1192,"column":35,"offset":40815}}}],"position":{"start":{"line":1192,"column":1,"offset":40781},"end":{"line":1192,"column":35,"offset":40815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let's take a different scenario. We remove all the parameters passed to ","position":{"start":{"line":1194,"column":1,"offset":40819},"end":{"line":1194,"column":77,"offset":40895}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1194,"column":77,"offset":40895},"end":{"line":1194,"column":87,"offset":40905}}},{"type":"text","value":". However, inside the call to ","position":{"start":{"line":1194,"column":87,"offset":40905},"end":{"line":1194,"column":117,"offset":40935}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1194,"column":117,"offset":40935},"end":{"line":1194,"column":126,"offset":40944}}},{"type":"text","value":", we continue to say ","position":{"start":{"line":1194,"column":126,"offset":40944},"end":{"line":1194,"column":147,"offset":40965}}},{"type":"raw","value":"<code class=\"language-text\">{0} * {1} = {4}</code>","position":{"start":{"line":1194,"column":147,"offset":40965},"end":{"line":1194,"column":164,"offset":40982}}},{"type":"text","value":". So we are trying to print the value at index ","position":{"start":{"line":1194,"column":164,"offset":40982},"end":{"line":1194,"column":211,"offset":41029}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":1194,"column":211,"offset":41029},"end":{"line":1194,"column":214,"offset":41032}}},{"type":"text","value":", but are only passing two values to the function ","position":{"start":{"line":1194,"column":214,"offset":41032},"end":{"line":1194,"column":264,"offset":41082}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1194,"column":264,"offset":41082},"end":{"line":1194,"column":274,"offset":41092}}},{"type":"text","value":". What do you think will happen?","position":{"start":{"line":1194,"column":274,"offset":41092},"end":{"line":1194,"column":306,"offset":41124}}}],"position":{"start":{"line":1194,"column":1,"offset":40819},"end":{"line":1194,"column":306,"offset":41124}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {4}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    IndexError<span class=\"token punctuation\">:</span> <span class=\"token builtin\">tuple</span> index out of <span class=\"token builtin\">range</span></code></pre></div>","position":{"start":{"line":1196,"column":1,"offset":41128},"end":{"line":1201,"column":4,"offset":41313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It says ","position":{"start":{"line":1203,"column":1,"offset":41317},"end":{"line":1203,"column":9,"offset":41325}}},{"type":"raw","value":"<code class=\"language-text\">IndexError</code>","position":{"start":{"line":1203,"column":9,"offset":41325},"end":{"line":1203,"column":21,"offset":41337}}},{"type":"text","value":", which means :\"you are asking me to fetch the value at index ","position":{"start":{"line":1203,"column":21,"offset":41337},"end":{"line":1203,"column":83,"offset":41399}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":1203,"column":83,"offset":41399},"end":{"line":1203,"column":86,"offset":41402}}},{"type":"text","value":", but only passing in two values. How can I do what you want?\"","position":{"start":{"line":1203,"column":86,"offset":41402},"end":{"line":1203,"column":148,"offset":41464}}}],"position":{"start":{"line":1203,"column":1,"offset":41317},"end":{"line":1203,"column":148,"offset":41464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at a few more things related to other data types. We try to format the following inside ","position":{"start":{"line":1205,"column":1,"offset":41468},"end":{"line":1205,"column":100,"offset":41567}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1205,"column":100,"offset":41567},"end":{"line":1205,"column":109,"offset":41576}}},{"type":"text","value":": ","position":{"start":{"line":1205,"column":109,"offset":41576},"end":{"line":1205,"column":111,"offset":41578}}},{"type":"raw","value":"<code class=\"language-text\">{0} * {1} = {2}</code>","position":{"start":{"line":1205,"column":111,"offset":41578},"end":{"line":1205,"column":128,"offset":41595}}},{"type":"text","value":", and would pass in ","position":{"start":{"line":1205,"column":128,"offset":41595},"end":{"line":1205,"column":148,"offset":41615}}},{"type":"raw","value":"<code class=\"language-text\">2.5</code>","position":{"start":{"line":1205,"column":148,"offset":41615},"end":{"line":1205,"column":153,"offset":41620}}},{"type":"text","value":", ","position":{"start":{"line":1205,"column":153,"offset":41620},"end":{"line":1205,"column":155,"offset":41622}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1205,"column":155,"offset":41622},"end":{"line":1205,"column":158,"offset":41625}}},{"type":"text","value":", and ","position":{"start":{"line":1205,"column":158,"offset":41625},"end":{"line":1205,"column":164,"offset":41631}}},{"type":"raw","value":"<code class=\"language-text\">2.5 * 2</code>","position":{"start":{"line":1205,"column":164,"offset":41631},"end":{"line":1205,"column":173,"offset":41640}}},{"type":"text","value":" . Here, ","position":{"start":{"line":1205,"column":173,"offset":41640},"end":{"line":1205,"column":182,"offset":41649}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1205,"column":182,"offset":41649},"end":{"line":1205,"column":185,"offset":41652}}},{"type":"text","value":" is an integer value, but ","position":{"start":{"line":1205,"column":185,"offset":41652},"end":{"line":1205,"column":211,"offset":41678}}},{"type":"raw","value":"<code class=\"language-text\">2.5</code>","position":{"start":{"line":1205,"column":211,"offset":41678},"end":{"line":1205,"column":216,"offset":41683}}},{"type":"text","value":" is a floating point value. You can see that it prints ","position":{"start":{"line":1205,"column":216,"offset":41683},"end":{"line":1205,"column":271,"offset":41738}}},{"type":"raw","value":"<code class=\"language-text\">2.5 * 2 = 5.0</code>","position":{"start":{"line":1205,"column":271,"offset":41738},"end":{"line":1205,"column":286,"offset":41753}}},{"type":"text","value":". So this approach of formatting values with ","position":{"start":{"line":1205,"column":286,"offset":41753},"end":{"line":1205,"column":331,"offset":41798}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1205,"column":331,"offset":41798},"end":{"line":1205,"column":340,"offset":41807}}},{"type":"text","value":", works also with floating point data as well.","position":{"start":{"line":1205,"column":340,"offset":41807},"end":{"line":1205,"column":386,"offset":41853}}}],"position":{"start":{"line":1205,"column":1,"offset":41468},"end":{"line":1205,"column":386,"offset":41853}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2.5</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">2.5</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">5.0</span></code></pre></div>","position":{"start":{"line":1207,"column":1,"offset":41857},"end":{"line":1210,"column":4,"offset":41944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, are there are other types of data that ","position":{"start":{"line":1212,"column":1,"offset":41948},"end":{"line":1212,"column":45,"offset":41992}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1212,"column":45,"offset":41992},"end":{"line":1212,"column":55,"offset":42002}}},{"type":"text","value":" works with? Yes, strings can join the party.","position":{"start":{"line":1212,"column":55,"offset":42002},"end":{"line":1212,"column":100,"offset":42047}}}],"position":{"start":{"line":1212,"column":1,"offset":41948},"end":{"line":1212,"column":100,"offset":42047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say over here, we do: ","position":{"start":{"line":1214,"column":1,"offset":42051},"end":{"line":1214,"column":29,"offset":42079}}},{"type":"raw","value":"<code class=\"language-text\">print(\"My name is {0}\".format(\"Ranga\"))</code>","position":{"start":{"line":1214,"column":29,"offset":42079},"end":{"line":1214,"column":70,"offset":42120}}},{"type":"text","value":". What would happen?","position":{"start":{"line":1214,"column":70,"offset":42120},"end":{"line":1214,"column":90,"offset":42140}}}],"position":{"start":{"line":1214,"column":1,"offset":42051},"end":{"line":1214,"column":90,"offset":42140}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My name is {0}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ranga\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    My name <span class=\"token keyword\">is</span> Ranga</code></pre></div>","position":{"start":{"line":1216,"column":1,"offset":42144},"end":{"line":1219,"column":4,"offset":42229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Index ","position":{"start":{"line":1221,"column":1,"offset":42233},"end":{"line":1221,"column":7,"offset":42239}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":1221,"column":7,"offset":42239},"end":{"line":1221,"column":10,"offset":42242}}},{"type":"text","value":" will be replaced with the first parameter to ","position":{"start":{"line":1221,"column":10,"offset":42242},"end":{"line":1221,"column":56,"offset":42288}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1221,"column":56,"offset":42288},"end":{"line":1221,"column":66,"offset":42298}}},{"type":"text","value":".","position":{"start":{"line":1221,"column":66,"offset":42298},"end":{"line":1221,"column":67,"offset":42299}}}],"position":{"start":{"line":1221,"column":1,"offset":42233},"end":{"line":1221,"column":67,"offset":42299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1223,"column":3,"offset":42305},"end":{"line":1223,"column":10,"offset":42312}}}],"position":{"start":{"line":1223,"column":1,"offset":42303},"end":{"line":1223,"column":12,"offset":42314}}}],"position":{"start":{"line":1223,"column":1,"offset":42303},"end":{"line":1223,"column":12,"offset":42314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":1225,"column":1,"offset":42318},"end":{"line":1225,"column":18,"offset":42335}}}],"position":{"start":{"line":1225,"column":1,"offset":42318},"end":{"line":1225,"column":18,"offset":42335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Understood the behavior when the parameters passed to ","position":{"start":{"line":1227,"column":5,"offset":42343},"end":{"line":1227,"column":59,"offset":42397}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1227,"column":59,"offset":42397},"end":{"line":1227,"column":69,"offset":42407}}},{"type":"text","value":":","position":{"start":{"line":1227,"column":69,"offset":42407},"end":{"line":1227,"column":70,"offset":42408}}}],"position":{"start":{"line":1227,"column":5,"offset":42343},"end":{"line":1227,"column":70,"offset":42408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Exceed the indexes accessed by ","position":{"start":{"line":1228,"column":9,"offset":42418},"end":{"line":1228,"column":40,"offset":42449}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1228,"column":40,"offset":42449},"end":{"line":1228,"column":49,"offset":42458}}}],"position":{"start":{"line":1228,"column":5,"offset":42414},"end":{"line":1228,"column":49,"offset":42458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Are less than the indexes accessed by ","position":{"start":{"line":1229,"column":9,"offset":42468},"end":{"line":1229,"column":47,"offset":42506}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1229,"column":47,"offset":42506},"end":{"line":1229,"column":56,"offset":42515}}}],"position":{"start":{"line":1229,"column":5,"offset":42464},"end":{"line":1229,"column":56,"offset":42515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Are of type integer, floating-point or string","position":{"start":{"line":1230,"column":9,"offset":42525},"end":{"line":1230,"column":54,"offset":42570}}}],"position":{"start":{"line":1230,"column":5,"offset":42521},"end":{"line":1230,"column":54,"offset":42570}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1228,"column":5,"offset":42414},"end":{"line":1230,"column":54,"offset":42570}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1227,"column":1,"offset":42339},"end":{"line":1230,"column":54,"offset":42570}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1227,"column":1,"offset":42339},"end":{"line":1230,"column":54,"offset":42570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 10: Introducing Variables","position":{"start":{"line":1232,"column":3,"offset":42576},"end":{"line":1232,"column":33,"offset":42606}}}],"position":{"start":{"line":1232,"column":1,"offset":42574},"end":{"line":1232,"column":35,"offset":42608}}}],"position":{"start":{"line":1232,"column":1,"offset":42574},"end":{"line":1232,"column":35,"offset":42608}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We are slowly making progress toward our main goal, which is to print the ","position":{"start":{"line":1234,"column":1,"offset":42612},"end":{"line":1234,"column":75,"offset":42686}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":1234,"column":75,"offset":42686},"end":{"line":1234,"column":78,"offset":42689}}},{"type":"text","value":" multiplication table.","position":{"start":{"line":1234,"column":78,"offset":42689},"end":{"line":1234,"column":100,"offset":42711}}}],"position":{"start":{"line":1234,"column":1,"offset":42612},"end":{"line":1234,"column":100,"offset":42711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the first statement, we are printing ","position":{"start":{"line":1236,"column":1,"offset":42715},"end":{"line":1236,"column":41,"offset":42755}}},{"type":"raw","value":"<code class=\"language-text\">5 * 1 = 5</code>","position":{"start":{"line":1236,"column":41,"offset":42755},"end":{"line":1236,"column":52,"offset":42766}}},{"type":"text","value":", and then changing the literals. To make it print ","position":{"start":{"line":1236,"column":52,"offset":42766},"end":{"line":1236,"column":103,"offset":42817}}},{"type":"raw","value":"<code class=\"language-text\">5 * 2 = 10</code>","position":{"start":{"line":1236,"column":103,"offset":42817},"end":{"line":1236,"column":115,"offset":42829}}},{"type":"text","value":", we are changing ","position":{"start":{"line":1236,"column":115,"offset":42829},"end":{"line":1236,"column":133,"offset":42847}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1236,"column":133,"offset":42847},"end":{"line":1236,"column":136,"offset":42850}}},{"type":"text","value":" to ","position":{"start":{"line":1236,"column":136,"offset":42850},"end":{"line":1236,"column":140,"offset":42854}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1236,"column":140,"offset":42854},"end":{"line":1236,"column":143,"offset":42857}}},{"type":"text","value":". Next, we are changing ","position":{"start":{"line":1236,"column":143,"offset":42857},"end":{"line":1236,"column":167,"offset":42881}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1236,"column":167,"offset":42881},"end":{"line":1236,"column":170,"offset":42884}}},{"type":"text","value":" to ","position":{"start":{"line":1236,"column":170,"offset":42884},"end":{"line":1236,"column":174,"offset":42888}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":1236,"column":174,"offset":42888},"end":{"line":1236,"column":177,"offset":42891}}},{"type":"text","value":". How do we make it a little simpler, so that our effort is reduced?","position":{"start":{"line":1236,"column":177,"offset":42891},"end":{"line":1236,"column":245,"offset":42959}}}],"position":{"start":{"line":1236,"column":1,"offset":42715},"end":{"line":1236,"column":245,"offset":42959}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span></code></pre></div>","position":{"start":{"line":1238,"column":1,"offset":42963},"end":{"line":1245,"column":4,"offset":43174}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try a different approach.","position":{"start":{"line":1247,"column":1,"offset":43178},"end":{"line":1247,"column":32,"offset":43209}}}],"position":{"start":{"line":1247,"column":1,"offset":43178},"end":{"line":1247,"column":32,"offset":43209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What would happen if you replace ","position":{"start":{"line":1249,"column":1,"offset":43213},"end":{"line":1249,"column":34,"offset":43246}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1249,"column":34,"offset":43246},"end":{"line":1249,"column":37,"offset":43249}}},{"type":"text","value":" with ","position":{"start":{"line":1249,"column":37,"offset":43249},"end":{"line":1249,"column":43,"offset":43255}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1249,"column":43,"offset":43255},"end":{"line":1249,"column":50,"offset":43262}}},{"type":"text","value":", and ","position":{"start":{"line":1249,"column":50,"offset":43262},"end":{"line":1249,"column":56,"offset":43268}}},{"type":"raw","value":"<code class=\"language-text\">5 * 1</code>","position":{"start":{"line":1249,"column":56,"offset":43268},"end":{"line":1249,"column":63,"offset":43275}}},{"type":"text","value":" with ","position":{"start":{"line":1249,"column":63,"offset":43275},"end":{"line":1249,"column":69,"offset":43281}}},{"type":"raw","value":"<code class=\"language-text\">5 * index</code>","position":{"start":{"line":1249,"column":69,"offset":43281},"end":{"line":1249,"column":80,"offset":43292}}},{"type":"text","value":", and try to run it?","position":{"start":{"line":1249,"column":80,"offset":43292},"end":{"line":1249,"column":100,"offset":43312}}}],"position":{"start":{"line":1249,"column":1,"offset":43213},"end":{"line":1249,"column":100,"offset":43312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It gives an error! It says: \"index is not defined\".","position":{"start":{"line":1251,"column":1,"offset":43316},"end":{"line":1251,"column":52,"offset":43367}}}],"position":{"start":{"line":1251,"column":1,"offset":43316},"end":{"line":1251,"column":52,"offset":43367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try and fix this, and execute ","position":{"start":{"line":1253,"column":1,"offset":43371},"end":{"line":1253,"column":37,"offset":43407}}},{"type":"raw","value":"<code class=\"language-text\">index = 2</code>","position":{"start":{"line":1253,"column":37,"offset":43407},"end":{"line":1253,"column":48,"offset":43418}}},{"type":"text","value":". What would happen?","position":{"start":{"line":1253,"column":48,"offset":43418},"end":{"line":1253,"column":68,"offset":43438}}}],"position":{"start":{"line":1253,"column":1,"offset":43371},"end":{"line":1253,"column":68,"offset":43438}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":1255,"column":1,"offset":43442},"end":{"line":1257,"column":4,"offset":43475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Aha! This compiles.","position":{"start":{"line":1259,"column":1,"offset":43479},"end":{"line":1259,"column":20,"offset":43498}}}],"position":{"start":{"line":1259,"column":1,"offset":43479},"end":{"line":1259,"column":20,"offset":43498}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span></code></pre></div>","position":{"start":{"line":1261,"column":1,"offset":43502},"end":{"line":1264,"column":4,"offset":43590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And this statement is printing ","position":{"start":{"line":1266,"column":1,"offset":43594},"end":{"line":1266,"column":32,"offset":43625}}},{"type":"raw","value":"<code class=\"language-text\">5 * 2 = 10</code>","position":{"start":{"line":1266,"column":32,"offset":43625},"end":{"line":1266,"column":44,"offset":43637}}},{"type":"text","value":".","position":{"start":{"line":1266,"column":44,"offset":43637},"end":{"line":1266,"column":45,"offset":43638}}}],"position":{"start":{"line":1266,"column":1,"offset":43594},"end":{"line":1266,"column":45,"offset":43638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try something else. Let's make ","position":{"start":{"line":1268,"column":1,"offset":43642},"end":{"line":1268,"column":38,"offset":43679}}},{"type":"raw","value":"<code class=\"language-text\">index = 3</code>","position":{"start":{"line":1268,"column":38,"offset":43679},"end":{"line":1268,"column":49,"offset":43690}}},{"type":"text","value":". What would happen?","position":{"start":{"line":1268,"column":49,"offset":43690},"end":{"line":1268,"column":69,"offset":43710}}}],"position":{"start":{"line":1268,"column":1,"offset":43642},"end":{"line":1268,"column":69,"offset":43710}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span></code></pre></div>","position":{"start":{"line":1270,"column":1,"offset":43714},"end":{"line":1274,"column":4,"offset":43821}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The same statement on being run, prints ","position":{"start":{"line":1276,"column":1,"offset":43825},"end":{"line":1276,"column":41,"offset":43865}}},{"type":"raw","value":"<code class=\"language-text\">5 * 3 = 15</code>","position":{"start":{"line":1276,"column":41,"offset":43865},"end":{"line":1276,"column":53,"offset":43877}}},{"type":"text","value":".","position":{"start":{"line":1276,"column":53,"offset":43877},"end":{"line":1276,"column":54,"offset":43878}}}],"position":{"start":{"line":1276,"column":1,"offset":43825},"end":{"line":1276,"column":54,"offset":43878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How can you check the value that ","position":{"start":{"line":1278,"column":1,"offset":43882},"end":{"line":1278,"column":34,"offset":43915}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1278,"column":34,"offset":43915},"end":{"line":1278,"column":41,"offset":43922}}},{"type":"text","value":" has? Just type in ","position":{"start":{"line":1278,"column":41,"offset":43922},"end":{"line":1278,"column":60,"offset":43941}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1278,"column":60,"offset":43941},"end":{"line":1278,"column":67,"offset":43948}}},{"type":"text","value":".","position":{"start":{"line":1278,"column":67,"offset":43948},"end":{"line":1278,"column":68,"offset":43949}}}],"position":{"start":{"line":1278,"column":1,"offset":43882},"end":{"line":1278,"column":68,"offset":43949}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index\n    <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span></code></pre></div>","position":{"start":{"line":1280,"column":1,"offset":43953},"end":{"line":1285,"column":4,"offset":44063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":1287,"column":1,"offset":44067},"end":{"line":1287,"column":5,"offset":44071}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1287,"column":5,"offset":44071},"end":{"line":1287,"column":12,"offset":44078}}},{"type":"text","value":" symbol we have used here, is what is called a ","position":{"start":{"line":1287,"column":12,"offset":44078},"end":{"line":1287,"column":59,"offset":44125}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"variable","position":{"start":{"line":1287,"column":61,"offset":44127},"end":{"line":1287,"column":69,"offset":44135}}}],"position":{"start":{"line":1287,"column":59,"offset":44125},"end":{"line":1287,"column":71,"offset":44137}}},{"type":"text","value":".","position":{"start":{"line":1287,"column":71,"offset":44137},"end":{"line":1287,"column":72,"offset":44138}}}],"position":{"start":{"line":1287,"column":1,"offset":44067},"end":{"line":1287,"column":72,"offset":44138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, it's also called a ","position":{"start":{"line":1289,"column":1,"offset":44142},"end":{"line":1289,"column":31,"offset":44172}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"name","position":{"start":{"line":1289,"column":33,"offset":44174},"end":{"line":1289,"column":37,"offset":44178}}}],"position":{"start":{"line":1289,"column":31,"offset":44172},"end":{"line":1289,"column":39,"offset":44180}}},{"type":"text","value":".","position":{"start":{"line":1289,"column":39,"offset":44180},"end":{"line":1289,"column":40,"offset":44181}}}],"position":{"start":{"line":1289,"column":1,"offset":44142},"end":{"line":1289,"column":40,"offset":44181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see that the value ","position":{"start":{"line":1291,"column":1,"offset":44185},"end":{"line":1291,"column":28,"offset":44212}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1291,"column":28,"offset":44212},"end":{"line":1291,"column":35,"offset":44219}}},{"type":"text","value":" referring to, can change over the duration of a program.","position":{"start":{"line":1291,"column":35,"offset":44219},"end":{"line":1291,"column":92,"offset":44276}}}],"position":{"start":{"line":1291,"column":1,"offset":44185},"end":{"line":1291,"column":92,"offset":44276}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially, ","position":{"start":{"line":1293,"column":1,"offset":44280},"end":{"line":1293,"column":12,"offset":44291}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1293,"column":12,"offset":44291},"end":{"line":1293,"column":19,"offset":44298}}},{"type":"text","value":" was referring to a value of ","position":{"start":{"line":1293,"column":19,"offset":44298},"end":{"line":1293,"column":48,"offset":44327}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1293,"column":48,"offset":44327},"end":{"line":1293,"column":51,"offset":44330}}},{"type":"text","value":". later, ","position":{"start":{"line":1293,"column":51,"offset":44330},"end":{"line":1293,"column":60,"offset":44339}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1293,"column":60,"offset":44339},"end":{"line":1293,"column":67,"offset":44346}}},{"type":"text","value":" was referring to a value of ","position":{"start":{"line":1293,"column":67,"offset":44346},"end":{"line":1293,"column":96,"offset":44375}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":1293,"column":96,"offset":44375},"end":{"line":1293,"column":99,"offset":44378}}},{"type":"text","value":".","position":{"start":{"line":1293,"column":99,"offset":44378},"end":{"line":1293,"column":100,"offset":44379}}}],"position":{"start":{"line":1293,"column":1,"offset":44280},"end":{"line":1293,"column":100,"offset":44379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, think about how you would print the entire table. All that you need to do, is start from ","position":{"start":{"line":1295,"column":1,"offset":44383},"end":{"line":1295,"column":95,"offset":44477}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1295,"column":95,"offset":44477},"end":{"line":1295,"column":98,"offset":44480}}},{"type":"text","value":", execute the same statement with ","position":{"start":{"line":1295,"column":98,"offset":44480},"end":{"line":1295,"column":132,"offset":44514}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1295,"column":132,"offset":44514},"end":{"line":1295,"column":141,"offset":44523}}},{"type":"text","value":" and ","position":{"start":{"line":1295,"column":141,"offset":44523},"end":{"line":1295,"column":146,"offset":44528}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1295,"column":146,"offset":44528},"end":{"line":1295,"column":156,"offset":44538}}},{"type":"text","value":", to get output ","position":{"start":{"line":1295,"column":156,"offset":44538},"end":{"line":1295,"column":172,"offset":44554}}},{"type":"raw","value":"<code class=\"language-text\">5 * 1 = 5</code>","position":{"start":{"line":1295,"column":172,"offset":44554},"end":{"line":1295,"column":183,"offset":44565}}},{"type":"text","value":". Next, Change the value of index to ","position":{"start":{"line":1295,"column":183,"offset":44565},"end":{"line":1295,"column":220,"offset":44602}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1295,"column":220,"offset":44602},"end":{"line":1295,"column":223,"offset":44605}}},{"type":"text","value":", and then print the same statement. Next, ","position":{"start":{"line":1295,"column":223,"offset":44605},"end":{"line":1295,"column":266,"offset":44648}}},{"type":"raw","value":"<code class=\"language-text\">index = 3</code>","position":{"start":{"line":1295,"column":266,"offset":44648},"end":{"line":1295,"column":277,"offset":44659}}},{"type":"text","value":", and print the same statement again.","position":{"start":{"line":1295,"column":277,"offset":44659},"end":{"line":1295,"column":314,"offset":44696}}}],"position":{"start":{"line":1295,"column":1,"offset":44383},"end":{"line":1295,"column":314,"offset":44696}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span></code></pre></div>","position":{"start":{"line":1297,"column":1,"offset":44700},"end":{"line":1307,"column":4,"offset":44992}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With the same statement ","position":{"start":{"line":1309,"column":1,"offset":44996},"end":{"line":1309,"column":25,"offset":45020}}},{"type":"raw","value":"<code class=\"language-text\">print(\"{0} * {1} = {2}\".format(5,index,5*index))</code>","position":{"start":{"line":1309,"column":25,"offset":45020},"end":{"line":1309,"column":75,"offset":45070}}},{"type":"text","value":", we are able to print different values. The value of ","position":{"start":{"line":1309,"column":75,"offset":45070},"end":{"line":1309,"column":129,"offset":45124}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1309,"column":129,"offset":45124},"end":{"line":1309,"column":136,"offset":45131}}},{"type":"text","value":" varies, but the code remains the same!","position":{"start":{"line":1309,"column":136,"offset":45131},"end":{"line":1309,"column":175,"offset":45170}}}],"position":{"start":{"line":1309,"column":1,"offset":44996},"end":{"line":1309,"column":175,"offset":45170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Variables make the program much more easier to read, as well as more generic.","position":{"start":{"line":1311,"column":1,"offset":45174},"end":{"line":1311,"column":78,"offset":45251}}}],"position":{"start":{"line":1311,"column":1,"offset":45174},"end":{"line":1311,"column":78,"offset":45251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-02: Classroom Exercise On Variables","position":{"start":{"line":1313,"column":3,"offset":45257},"end":{"line":1313,"column":46,"offset":45300}}}],"position":{"start":{"line":1313,"column":1,"offset":45255},"end":{"line":1313,"column":48,"offset":45302}}}],"position":{"start":{"line":1313,"column":1,"offset":45255},"end":{"line":1313,"column":48,"offset":45302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's do a simple exercise with variables.","position":{"start":{"line":1315,"column":1,"offset":45306},"end":{"line":1315,"column":43,"offset":45348}}}],"position":{"start":{"line":1315,"column":1,"offset":45306},"end":{"line":1315,"column":43,"offset":45348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to create three variables ","position":{"start":{"line":1317,"column":1,"offset":45352},"end":{"line":1317,"column":35,"offset":45386}}},{"type":"raw","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":1317,"column":35,"offset":45386},"end":{"line":1317,"column":38,"offset":45389}}},{"type":"text","value":", ","position":{"start":{"line":1317,"column":38,"offset":45389},"end":{"line":1317,"column":40,"offset":45391}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":1317,"column":40,"offset":45391},"end":{"line":1317,"column":43,"offset":45394}}},{"type":"text","value":" and ","position":{"start":{"line":1317,"column":43,"offset":45394},"end":{"line":1317,"column":48,"offset":45399}}},{"type":"raw","value":"<code class=\"language-text\">c</code>","position":{"start":{"line":1317,"column":48,"offset":45399},"end":{"line":1317,"column":51,"offset":45402}}},{"type":"text","value":". Let's initially give them some values, say a value of ","position":{"start":{"line":1317,"column":51,"offset":45402},"end":{"line":1317,"column":107,"offset":45458}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":1317,"column":107,"offset":45458},"end":{"line":1317,"column":110,"offset":45461}}},{"type":"text","value":" to ","position":{"start":{"line":1317,"column":110,"offset":45461},"end":{"line":1317,"column":114,"offset":45465}}},{"type":"raw","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":1317,"column":114,"offset":45465},"end":{"line":1317,"column":117,"offset":45468}}},{"type":"text","value":", ","position":{"start":{"line":1317,"column":117,"offset":45468},"end":{"line":1317,"column":119,"offset":45470}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":1317,"column":119,"offset":45470},"end":{"line":1317,"column":122,"offset":45473}}},{"type":"text","value":" to ","position":{"start":{"line":1317,"column":122,"offset":45473},"end":{"line":1317,"column":126,"offset":45477}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":1317,"column":126,"offset":45477},"end":{"line":1317,"column":129,"offset":45480}}},{"type":"text","value":" and ","position":{"start":{"line":1317,"column":129,"offset":45480},"end":{"line":1317,"column":134,"offset":45485}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":1317,"column":134,"offset":45485},"end":{"line":1317,"column":137,"offset":45488}}},{"type":"text","value":" to ","position":{"start":{"line":1317,"column":137,"offset":45488},"end":{"line":1317,"column":141,"offset":45492}}},{"type":"raw","value":"<code class=\"language-text\">c</code>","position":{"start":{"line":1317,"column":141,"offset":45492},"end":{"line":1317,"column":144,"offset":45495}}},{"type":"text","value":".","position":{"start":{"line":1317,"column":144,"offset":45495},"end":{"line":1317,"column":145,"offset":45496}}}],"position":{"start":{"line":1317,"column":1,"offset":45352},"end":{"line":1317,"column":145,"offset":45496}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to get output of this kind: ","position":{"start":{"line":1319,"column":1,"offset":45500},"end":{"line":1319,"column":37,"offset":45536}}},{"type":"raw","value":"<code class=\"language-text\">5 + 6 + 7 = 18</code>","position":{"start":{"line":1319,"column":37,"offset":45536},"end":{"line":1319,"column":53,"offset":45552}}},{"type":"text","value":", without using the literal values.","position":{"start":{"line":1319,"column":53,"offset":45552},"end":{"line":1319,"column":88,"offset":45587}}}],"position":{"start":{"line":1319,"column":1,"offset":45500},"end":{"line":1319,"column":88,"offset":45587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You would want to use the values stored in the variables in ","position":{"start":{"line":1321,"column":1,"offset":45591},"end":{"line":1321,"column":61,"offset":45651}}},{"type":"raw","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":1321,"column":61,"offset":45651},"end":{"line":1321,"column":64,"offset":45654}}},{"type":"text","value":", ","position":{"start":{"line":1321,"column":64,"offset":45654},"end":{"line":1321,"column":66,"offset":45656}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":1321,"column":66,"offset":45656},"end":{"line":1321,"column":69,"offset":45659}}},{"type":"text","value":" and ","position":{"start":{"line":1321,"column":69,"offset":45659},"end":{"line":1321,"column":74,"offset":45664}}},{"type":"raw","value":"<code class=\"language-text\">c</code>","position":{"start":{"line":1321,"column":74,"offset":45664},"end":{"line":1321,"column":77,"offset":45667}}},{"type":"text","value":".","position":{"start":{"line":1321,"column":77,"offset":45667},"end":{"line":1321,"column":78,"offset":45668}}}],"position":{"start":{"line":1321,"column":1,"offset":45591},"end":{"line":1321,"column":78,"offset":45668}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you're hard-coding, the way to do it is with ","position":{"start":{"line":1323,"column":1,"offset":45672},"end":{"line":1323,"column":49,"offset":45720}}},{"type":"raw","value":"<code class=\"language-text\">print(\"5 + 6 + 7 = 18\")</code>","position":{"start":{"line":1323,"column":49,"offset":45720},"end":{"line":1323,"column":74,"offset":45745}}},{"type":"text","value":".","position":{"start":{"line":1323,"column":74,"offset":45745},"end":{"line":1323,"column":75,"offset":45746}}}],"position":{"start":{"line":1323,"column":1,"offset":45672},"end":{"line":1323,"column":75,"offset":45746}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> c <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5 + 6 + 7 = 18\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">18</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5 + 6 + 7 = 18\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>a<span class=\"token operator\">+</span>b<span class=\"token operator\">+</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">18</span></code></pre></div>","position":{"start":{"line":1325,"column":1,"offset":45750},"end":{"line":1333,"column":4,"offset":45935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The way you can do that is with code like this: ","position":{"start":{"line":1335,"column":1,"offset":45939},"end":{"line":1335,"column":49,"offset":45987}}},{"type":"raw","value":"<code class=\"language-text\">print(\"{0} + {1} + {2} = {3}\".format(a,b,c,a+b+c))</code>","position":{"start":{"line":1335,"column":49,"offset":45987},"end":{"line":1335,"column":101,"offset":46039}}},{"type":"text","value":".","position":{"start":{"line":1335,"column":101,"offset":46039},"end":{"line":1335,"column":102,"offset":46040}}}],"position":{"start":{"line":1335,"column":1,"offset":45939},"end":{"line":1335,"column":102,"offset":46040}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} + {1} + {2} = {3}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>a<span class=\"token operator\">+</span>b<span class=\"token operator\">+</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">+</span> <span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">18</span></code></pre></div>","position":{"start":{"line":1337,"column":1,"offset":46044},"end":{"line":1340,"column":4,"offset":46138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do you confirm we are accessing values stored in the variables?","position":{"start":{"line":1342,"column":1,"offset":46142},"end":{"line":1342,"column":68,"offset":46209}}}],"position":{"start":{"line":1342,"column":1,"offset":46142},"end":{"line":1342,"column":68,"offset":46209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's change the values of ","position":{"start":{"line":1344,"column":1,"offset":46213},"end":{"line":1344,"column":28,"offset":46240}}},{"type":"raw","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":1344,"column":28,"offset":46240},"end":{"line":1344,"column":31,"offset":46243}}},{"type":"text","value":", ","position":{"start":{"line":1344,"column":31,"offset":46243},"end":{"line":1344,"column":33,"offset":46245}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":1344,"column":33,"offset":46245},"end":{"line":1344,"column":36,"offset":46248}}},{"type":"text","value":" and ","position":{"start":{"line":1344,"column":36,"offset":46248},"end":{"line":1344,"column":41,"offset":46253}}},{"type":"raw","value":"<code class=\"language-text\">c</code>","position":{"start":{"line":1344,"column":41,"offset":46253},"end":{"line":1344,"column":44,"offset":46256}}},{"type":"text","value":". Let's make ","position":{"start":{"line":1344,"column":44,"offset":46256},"end":{"line":1344,"column":57,"offset":46269}}},{"type":"raw","value":"<code class=\"language-text\">a = 6</code>","position":{"start":{"line":1344,"column":57,"offset":46269},"end":{"line":1344,"column":64,"offset":46276}}},{"type":"text","value":" , ","position":{"start":{"line":1344,"column":64,"offset":46276},"end":{"line":1344,"column":67,"offset":46279}}},{"type":"raw","value":"<code class=\"language-text\">b = 7</code>","position":{"start":{"line":1344,"column":67,"offset":46279},"end":{"line":1344,"column":74,"offset":46286}}},{"type":"text","value":" , and ","position":{"start":{"line":1344,"column":74,"offset":46286},"end":{"line":1344,"column":81,"offset":46293}}},{"type":"raw","value":"<code class=\"language-text\">c = 8</code>","position":{"start":{"line":1344,"column":81,"offset":46293},"end":{"line":1344,"column":88,"offset":46300}}},{"type":"text","value":" . Execute same statement.","position":{"start":{"line":1344,"column":88,"offset":46300},"end":{"line":1344,"column":114,"offset":46326}}}],"position":{"start":{"line":1344,"column":1,"offset":46213},"end":{"line":1344,"column":114,"offset":46326}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> c <span class=\"token operator\">=</span> <span class=\"token number\">8</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} + {1} + {2} = {3}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>a<span class=\"token operator\">+</span>b<span class=\"token operator\">+</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">6</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span></code></pre></div>","position":{"start":{"line":1346,"column":1,"offset":46330},"end":{"line":1352,"column":4,"offset":46469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see the magic of variables at play here! Based on what values these variables are referring to, you can see that the output of the print statement changes.","position":{"start":{"line":1354,"column":1,"offset":46473},"end":{"line":1354,"column":164,"offset":46636}}}],"position":{"start":{"line":1354,"column":1,"offset":46473},"end":{"line":1354,"column":164,"offset":46636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1356,"column":3,"offset":46642},"end":{"line":1356,"column":10,"offset":46649}}}],"position":{"start":{"line":1356,"column":1,"offset":46640},"end":{"line":1356,"column":12,"offset":46651}}}],"position":{"start":{"line":1356,"column":1,"offset":46640},"end":{"line":1356,"column":12,"offset":46651}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":1358,"column":1,"offset":46655},"end":{"line":1358,"column":18,"offset":46672}}}],"position":{"start":{"line":1358,"column":1,"offset":46655},"end":{"line":1358,"column":18,"offset":46672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Were introduced to variables, or names, in Python","position":{"start":{"line":1360,"column":5,"offset":46680},"end":{"line":1360,"column":54,"offset":46729}}}],"position":{"start":{"line":1360,"column":1,"offset":46676},"end":{"line":1360,"column":54,"offset":46729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Observed how we could pass in values of variables to the ","position":{"start":{"line":1361,"column":5,"offset":46735},"end":{"line":1361,"column":62,"offset":46792}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1361,"column":62,"offset":46792},"end":{"line":1361,"column":72,"offset":46802}}},{"type":"text","value":" function","position":{"start":{"line":1361,"column":72,"offset":46802},"end":{"line":1361,"column":81,"offset":46811}}}],"position":{"start":{"line":1361,"column":1,"offset":46731},"end":{"line":1361,"column":81,"offset":46811}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1360,"column":1,"offset":46676},"end":{"line":1361,"column":81,"offset":46811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 11: Puzzles On Variables","position":{"start":{"line":1363,"column":3,"offset":46817},"end":{"line":1363,"column":32,"offset":46846}}}],"position":{"start":{"line":1363,"column":1,"offset":46815},"end":{"line":1363,"column":34,"offset":46848}}}],"position":{"start":{"line":1363,"column":1,"offset":46815},"end":{"line":1363,"column":34,"offset":46848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step, we were introduced to the concept of variables in Python.","position":{"start":{"line":1365,"column":1,"offset":46852},"end":{"line":1365,"column":80,"offset":46931}}}],"position":{"start":{"line":1365,"column":1,"offset":46852},"end":{"line":1365,"column":80,"offset":46931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We will start with looking at a few puzzles.","position":{"start":{"line":1367,"column":1,"offset":46935},"end":{"line":1367,"column":45,"offset":46979}}}],"position":{"start":{"line":1367,"column":1,"offset":46935},"end":{"line":1367,"column":45,"offset":46979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01: Puzzles On Variables","position":{"start":{"line":1369,"column":3,"offset":46985},"end":{"line":1369,"column":35,"offset":47017}}}],"position":{"start":{"line":1369,"column":1,"offset":46983},"end":{"line":1369,"column":37,"offset":47019}}}],"position":{"start":{"line":1369,"column":1,"offset":46983},"end":{"line":1369,"column":37,"offset":47019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What if I try to refer to a variable which is not yet created?","position":{"start":{"line":1371,"column":1,"offset":47023},"end":{"line":1371,"column":63,"offset":47085}}}],"position":{"start":{"line":1371,"column":1,"offset":47023},"end":{"line":1371,"column":63,"offset":47085}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> count\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'count'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'count'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined</code></pre></div>","position":{"start":{"line":1373,"column":1,"offset":47089},"end":{"line":1382,"column":4,"offset":47394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before using a variable, you need to have it assigned a value. If you have not defined a variable before, then you cannot use it. Consider ","position":{"start":{"line":1384,"column":1,"offset":47398},"end":{"line":1384,"column":140,"offset":47537}}},{"type":"raw","value":"<code class=\"language-text\">print(count)</code>","position":{"start":{"line":1384,"column":140,"offset":47537},"end":{"line":1384,"column":154,"offset":47551}}},{"type":"text","value":", it does not know what count is. So it would throw an error, saying: \"","position":{"start":{"line":1384,"column":154,"offset":47551},"end":{"line":1384,"column":225,"offset":47622}}},{"type":"raw","value":"<code class=\"language-text\">count</code>","position":{"start":{"line":1384,"column":225,"offset":47622},"end":{"line":1384,"column":232,"offset":47629}}},{"type":"text","value":" is not defined, I have no idea what count is.\"","position":{"start":{"line":1384,"column":232,"offset":47629},"end":{"line":1384,"column":279,"offset":47676}}}],"position":{"start":{"line":1384,"column":1,"offset":47398},"end":{"line":1384,"column":279,"offset":47676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you assign a value to a variable, you can use it.","position":{"start":{"line":1386,"column":1,"offset":47680},"end":{"line":1386,"column":55,"offset":47734}}}],"position":{"start":{"line":1386,"column":1,"offset":47680},"end":{"line":1386,"column":55,"offset":47734}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> count <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span>\n    <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":1388,"column":1,"offset":47738},"end":{"line":1392,"column":4,"offset":47800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The statement ","position":{"start":{"line":1394,"column":1,"offset":47804},"end":{"line":1394,"column":15,"offset":47818}}},{"type":"raw","value":"<code class=\"language-text\">count = 4</code>","position":{"start":{"line":1394,"column":15,"offset":47818},"end":{"line":1394,"column":26,"offset":47829}}},{"type":"text","value":" where we are creating a variable named ","position":{"start":{"line":1394,"column":26,"offset":47829},"end":{"line":1394,"column":66,"offset":47869}}},{"type":"raw","value":"<code class=\"language-text\">count</code>","position":{"start":{"line":1394,"column":66,"offset":47869},"end":{"line":1394,"column":73,"offset":47876}}},{"type":"text","value":" for the first time, is called a ","position":{"start":{"line":1394,"column":73,"offset":47876},"end":{"line":1394,"column":106,"offset":47909}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"variable definition","position":{"start":{"line":1394,"column":108,"offset":47911},"end":{"line":1394,"column":127,"offset":47930}}}],"position":{"start":{"line":1394,"column":106,"offset":47909},"end":{"line":1394,"column":129,"offset":47932}}},{"type":"text","value":".","position":{"start":{"line":1394,"column":129,"offset":47932},"end":{"line":1394,"column":130,"offset":47933}}}],"position":{"start":{"line":1394,"column":1,"offset":47804},"end":{"line":1394,"column":130,"offset":47933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the first time you're referring to a variable, and assigning a value to it.","position":{"start":{"line":1396,"column":1,"offset":47937},"end":{"line":1396,"column":84,"offset":48020}}}],"position":{"start":{"line":1396,"column":1,"offset":47937},"end":{"line":1396,"column":84,"offset":48020}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python will create a variable in its memory.","position":{"start":{"line":1398,"column":1,"offset":48024},"end":{"line":1398,"column":45,"offset":48068}}}],"position":{"start":{"line":1398,"column":1,"offset":48024},"end":{"line":1398,"column":45,"offset":48068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Variable names are case sensitive. ","position":{"start":{"line":1400,"column":1,"offset":48072},"end":{"line":1400,"column":36,"offset":48107}}},{"type":"raw","value":"<code class=\"language-text\">count</code>","position":{"start":{"line":1400,"column":36,"offset":48107},"end":{"line":1400,"column":43,"offset":48114}}},{"type":"text","value":" and ","position":{"start":{"line":1400,"column":43,"offset":48114},"end":{"line":1400,"column":48,"offset":48119}}},{"type":"raw","value":"<code class=\"language-text\">Count</code>","position":{"start":{"line":1400,"column":48,"offset":48119},"end":{"line":1400,"column":55,"offset":48126}}},{"type":"text","value":" are not the same thing.","position":{"start":{"line":1400,"column":55,"offset":48126},"end":{"line":1400,"column":79,"offset":48150}}}],"position":{"start":{"line":1400,"column":1,"offset":48072},"end":{"line":1400,"column":79,"offset":48150}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> Count\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'Count'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> count\n    <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":1402,"column":1,"offset":48154},"end":{"line":1409,"column":4,"offset":48332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are rules to follow while naming variables.","position":{"start":{"line":1411,"column":1,"offset":48336},"end":{"line":1411,"column":50,"offset":48385}}}],"position":{"start":{"line":1411,"column":1,"offset":48336},"end":{"line":1411,"column":50,"offset":48385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All variable names should either start with an alphabet , or an underscore ","position":{"start":{"line":1413,"column":1,"offset":48389},"end":{"line":1413,"column":76,"offset":48464}}},{"type":"raw","value":"<code class=\"language-text\">_</code>","position":{"start":{"line":1413,"column":76,"offset":48464},"end":{"line":1413,"column":79,"offset":48467}}},{"type":"text","value":" . ","position":{"start":{"line":1413,"column":79,"offset":48467},"end":{"line":1413,"column":82,"offset":48470}}},{"type":"raw","value":"<code class=\"language-text\">count</code>","position":{"start":{"line":1413,"column":82,"offset":48470},"end":{"line":1413,"column":89,"offset":48477}}},{"type":"text","value":", ","position":{"start":{"line":1413,"column":89,"offset":48477},"end":{"line":1413,"column":91,"offset":48479}}},{"type":"raw","value":"<code class=\"language-text\">_count</code>","position":{"start":{"line":1413,"column":91,"offset":48479},"end":{"line":1413,"column":99,"offset":48487}}},{"type":"text","value":" are valid. ","position":{"start":{"line":1413,"column":99,"offset":48487},"end":{"line":1413,"column":111,"offset":48499}}},{"type":"raw","value":"<code class=\"language-text\">1count</code>","position":{"start":{"line":1413,"column":111,"offset":48499},"end":{"line":1413,"column":119,"offset":48507}}},{"type":"text","value":" is invalid.","position":{"start":{"line":1413,"column":119,"offset":48507},"end":{"line":1413,"column":131,"offset":48519}}}],"position":{"start":{"line":1413,"column":1,"offset":48389},"end":{"line":1413,"column":131,"offset":48519}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> 1count <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        1count <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n             <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> count <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> _count <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> 1count\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        1count\n             <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> 2count\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        2count\n             <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax</code></pre></div>","position":{"start":{"line":1415,"column":1,"offset":48523},"end":{"line":1433,"column":4,"offset":48917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After the first symbol, you can also use a numeral in variable names.","position":{"start":{"line":1435,"column":1,"offset":48921},"end":{"line":1435,"column":70,"offset":48990}}}],"position":{"start":{"line":1435,"column":1,"offset":48921},"end":{"line":1435,"column":70,"offset":48990}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> c12345 <span class=\"token operator\">=</span> <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":1437,"column":1,"offset":48994},"end":{"line":1439,"column":4,"offset":49028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To summarize the rules for naming variables.","position":{"start":{"line":1441,"column":1,"offset":49032},"end":{"line":1441,"column":45,"offset":49076}}}],"position":{"start":{"line":1441,"column":1,"offset":49032},"end":{"line":1441,"column":45,"offset":49076}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"This should start with an alphabet ","position":{"start":{"line":1443,"column":5,"offset":49084},"end":{"line":1443,"column":40,"offset":49119}}},{"type":"text","value":"(","position":{"start":{"line":1443,"column":40,"offset":49119},"end":{"line":1443,"column":42,"offset":49121}}},{"type":"text","value":"a capital or a small alphabet","position":{"start":{"line":1443,"column":42,"offset":49121},"end":{"line":1443,"column":71,"offset":49150}}},{"type":"text","value":")","position":{"start":{"line":1443,"column":71,"offset":49150},"end":{"line":1443,"column":73,"offset":49152}}},{"type":"text","value":" or underscore.","position":{"start":{"line":1443,"column":73,"offset":49152},"end":{"line":1443,"column":88,"offset":49167}}}],"position":{"start":{"line":1443,"column":1,"offset":49080},"end":{"line":1443,"column":88,"offset":49167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Starting the second character, it can be alphabet, or underscore, or a numeric value.","position":{"start":{"line":1444,"column":5,"offset":49173},"end":{"line":1444,"column":90,"offset":49258}}}],"position":{"start":{"line":1444,"column":1,"offset":49169},"end":{"line":1444,"column":90,"offset":49258}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1443,"column":1,"offset":49080},"end":{"line":1444,"column":90,"offset":49258}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1446,"column":3,"offset":49264},"end":{"line":1446,"column":10,"offset":49271}}}],"position":{"start":{"line":1446,"column":1,"offset":49262},"end":{"line":1446,"column":12,"offset":49273}}}],"position":{"start":{"line":1446,"column":1,"offset":49262},"end":{"line":1446,"column":12,"offset":49273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":1448,"column":1,"offset":49277},"end":{"line":1448,"column":18,"offset":49294}}}],"position":{"start":{"line":1448,"column":1,"offset":49277},"end":{"line":1448,"column":18,"offset":49294}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood that a variable needs to be defined before it is used","position":{"start":{"line":1450,"column":5,"offset":49302},"end":{"line":1450,"column":69,"offset":49366}}}],"position":{"start":{"line":1450,"column":1,"offset":49298},"end":{"line":1450,"column":69,"offset":49366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned that there are certain rules to be followed while giving names to variables","position":{"start":{"line":1451,"column":5,"offset":49372},"end":{"line":1451,"column":88,"offset":49455}}}],"position":{"start":{"line":1451,"column":1,"offset":49368},"end":{"line":1451,"column":88,"offset":49455}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1450,"column":1,"offset":49298},"end":{"line":1451,"column":88,"offset":49455}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 12: Introducing Assignment","position":{"start":{"line":1453,"column":3,"offset":49461},"end":{"line":1453,"column":34,"offset":49492}}}],"position":{"start":{"line":1453,"column":1,"offset":49459},"end":{"line":1453,"column":36,"offset":49494}}}],"position":{"start":{"line":1453,"column":1,"offset":49459},"end":{"line":1453,"column":36,"offset":49494}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we will look at an important concept in Python, called ","position":{"start":{"line":1455,"column":1,"offset":49498},"end":{"line":1455,"column":70,"offset":49567}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"assignment","position":{"start":{"line":1455,"column":72,"offset":49569},"end":{"line":1455,"column":82,"offset":49579}}}],"position":{"start":{"line":1455,"column":70,"offset":49567},"end":{"line":1455,"column":84,"offset":49581}}},{"type":"text","value":". In previous steps, we created variables, like ","position":{"start":{"line":1455,"column":84,"offset":49581},"end":{"line":1455,"column":132,"offset":49629}}},{"type":"raw","value":"<code class=\"language-text\">i = 5</code>","position":{"start":{"line":1455,"column":132,"offset":49629},"end":{"line":1455,"column":139,"offset":49636}}},{"type":"text","value":".","position":{"start":{"line":1455,"column":139,"offset":49636},"end":{"line":1455,"column":140,"offset":49637}}}],"position":{"start":{"line":1455,"column":1,"offset":49498},"end":{"line":1455,"column":140,"offset":49637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01: Introducing Assignment","position":{"start":{"line":1457,"column":3,"offset":49643},"end":{"line":1457,"column":37,"offset":49677}}}],"position":{"start":{"line":1457,"column":1,"offset":49641},"end":{"line":1457,"column":39,"offset":49679}}}],"position":{"start":{"line":1457,"column":1,"offset":49641},"end":{"line":1457,"column":39,"offset":49679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can create other variables using whatever value ","position":{"start":{"line":1459,"column":1,"offset":49683},"end":{"line":1459,"column":53,"offset":49735}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":1459,"column":53,"offset":49735},"end":{"line":1459,"column":56,"offset":49738}}},{"type":"text","value":" is referring to. If we say ","position":{"start":{"line":1459,"column":56,"offset":49738},"end":{"line":1459,"column":84,"offset":49766}}},{"type":"raw","value":"<code class=\"language-text\">j = i</code>","position":{"start":{"line":1459,"column":84,"offset":49766},"end":{"line":1459,"column":91,"offset":49773}}},{"type":"text","value":", what would happen?","position":{"start":{"line":1459,"column":91,"offset":49773},"end":{"line":1459,"column":111,"offset":49793}}}],"position":{"start":{"line":1459,"column":1,"offset":49683},"end":{"line":1459,"column":111,"offset":49793}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> j <span class=\"token operator\">=</span> i\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> j\n    <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":1461,"column":1,"offset":49797},"end":{"line":1466,"column":4,"offset":49859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":1468,"column":1,"offset":49863},"end":{"line":1468,"column":4,"offset":49866}}},{"type":"text","value":" would start referring to the same value that ","position":{"start":{"line":1468,"column":4,"offset":49866},"end":{"line":1468,"column":50,"offset":49912}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":1468,"column":50,"offset":49912},"end":{"line":1468,"column":53,"offset":49915}}},{"type":"text","value":" is referring to. This statement is called an ","position":{"start":{"line":1468,"column":53,"offset":49915},"end":{"line":1468,"column":99,"offset":49961}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"assignment","position":{"start":{"line":1468,"column":101,"offset":49963},"end":{"line":1468,"column":111,"offset":49973}}}],"position":{"start":{"line":1468,"column":99,"offset":49961},"end":{"line":1468,"column":113,"offset":49975}}},{"type":"text","value":".","position":{"start":{"line":1468,"column":113,"offset":49975},"end":{"line":1468,"column":114,"offset":49976}}}],"position":{"start":{"line":1468,"column":1,"offset":49863},"end":{"line":1468,"column":114,"offset":49976}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try ","position":{"start":{"line":1470,"column":1,"offset":49980},"end":{"line":1470,"column":11,"offset":49990}}},{"type":"raw","value":"<code class=\"language-text\">j = 2 * i</code>","position":{"start":{"line":1470,"column":11,"offset":49990},"end":{"line":1470,"column":22,"offset":50001}}},{"type":"text","value":".","position":{"start":{"line":1470,"column":22,"offset":50001},"end":{"line":1470,"column":23,"offset":50002}}}],"position":{"start":{"line":1470,"column":1,"offset":49980},"end":{"line":1470,"column":23,"offset":50002}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> j <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> j\n    <span class=\"token number\">10</span></code></pre></div>","position":{"start":{"line":1472,"column":1,"offset":50006},"end":{"line":1476,"column":4,"offset":50058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":1478,"column":1,"offset":50062},"end":{"line":1478,"column":4,"offset":50065}}},{"type":"text","value":" refers to a value of ","position":{"start":{"line":1478,"column":4,"offset":50065},"end":{"line":1478,"column":26,"offset":50087}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1478,"column":26,"offset":50087},"end":{"line":1478,"column":30,"offset":50091}}}],"position":{"start":{"line":1478,"column":1,"offset":50062},"end":{"line":1478,"column":30,"offset":50091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">=</code>","position":{"start":{"line":1480,"column":1,"offset":50095},"end":{"line":1480,"column":4,"offset":50098}}},{"type":"text","value":" has a different meaning in programming compared to mathematics.","position":{"start":{"line":1480,"column":4,"offset":50098},"end":{"line":1480,"column":68,"offset":50162}}}],"position":{"start":{"line":1480,"column":1,"offset":50095},"end":{"line":1480,"column":68,"offset":50162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In mathematics, When we execute ","position":{"start":{"line":1482,"column":1,"offset":50166},"end":{"line":1482,"column":33,"offset":50198}}},{"type":"raw","value":"<code class=\"language-text\">j = i</code>","position":{"start":{"line":1482,"column":33,"offset":50198},"end":{"line":1482,"column":40,"offset":50205}}},{"type":"text","value":", it means ","position":{"start":{"line":1482,"column":40,"offset":50205},"end":{"line":1482,"column":51,"offset":50216}}},{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":1482,"column":51,"offset":50216},"end":{"line":1482,"column":54,"offset":50219}}},{"type":"text","value":" and ","position":{"start":{"line":1482,"column":54,"offset":50219},"end":{"line":1482,"column":59,"offset":50224}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":1482,"column":59,"offset":50224},"end":{"line":1482,"column":62,"offset":50227}}},{"type":"text","value":" are equal.","position":{"start":{"line":1482,"column":62,"offset":50227},"end":{"line":1482,"column":73,"offset":50238}}}],"position":{"start":{"line":1482,"column":1,"offset":50166},"end":{"line":1482,"column":73,"offset":50238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In prgramming, the value of the expression on right hand side is assigned to the variable on the right hand side. Can you use a constant on the left hand side of an assignment? The answer is \"No\"!","position":{"start":{"line":1484,"column":1,"offset":50242},"end":{"line":1484,"column":197,"offset":50438}}}],"position":{"start":{"line":1484,"column":1,"offset":50242},"end":{"line":1484,"column":197,"offset":50438}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> j\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n    SyntaxError<span class=\"token punctuation\">:</span> can't assign to literal</code></pre></div>","position":{"start":{"line":1486,"column":1,"offset":50442},"end":{"line":1490,"column":4,"offset":50543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Python Shell throws an error, saying \"Can't assign to literal\", as ","position":{"start":{"line":1492,"column":1,"offset":50547},"end":{"line":1492,"column":72,"offset":50618}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":1492,"column":72,"offset":50618},"end":{"line":1492,"column":75,"offset":50621}}},{"type":"text","value":" is a literal.","position":{"start":{"line":1492,"column":75,"offset":50621},"end":{"line":1492,"column":89,"offset":50635}}}],"position":{"start":{"line":1492,"column":1,"offset":50547},"end":{"line":1492,"column":89,"offset":50635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's create a couple of variables. ","position":{"start":{"line":1494,"column":1,"offset":50639},"end":{"line":1494,"column":37,"offset":50675}}},{"type":"raw","value":"<code class=\"language-text\">num1 = 5</code>","position":{"start":{"line":1494,"column":37,"offset":50675},"end":{"line":1494,"column":47,"offset":50685}}},{"type":"text","value":" and ","position":{"start":{"line":1494,"column":47,"offset":50685},"end":{"line":1494,"column":52,"offset":50690}}},{"type":"raw","value":"<code class=\"language-text\">num2 = 3</code>","position":{"start":{"line":1494,"column":52,"offset":50690},"end":{"line":1494,"column":62,"offset":50700}}},{"type":"text","value":". We would want to add these and create a fresh variable. Let's say the name of the variable is ","position":{"start":{"line":1494,"column":62,"offset":50700},"end":{"line":1494,"column":158,"offset":50796}}},{"type":"raw","value":"<code class=\"language-text\">sum</code>","position":{"start":{"line":1494,"column":158,"offset":50796},"end":{"line":1494,"column":163,"offset":50801}}},{"type":"text","value":".","position":{"start":{"line":1494,"column":163,"offset":50801},"end":{"line":1494,"column":164,"offset":50802}}}],"position":{"start":{"line":1494,"column":1,"offset":50639},"end":{"line":1494,"column":164,"offset":50802}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> num2\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sum</span>\n    <span class=\"token number\">8</span></code></pre></div>","position":{"start":{"line":1496,"column":1,"offset":50806},"end":{"line":1502,"column":4,"offset":50903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Create 3 variables ","position":{"start":{"line":1504,"column":1,"offset":50907},"end":{"line":1504,"column":20,"offset":50926}}},{"type":"raw","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":1504,"column":20,"offset":50926},"end":{"line":1504,"column":23,"offset":50929}}},{"type":"text","value":", ","position":{"start":{"line":1504,"column":23,"offset":50929},"end":{"line":1504,"column":25,"offset":50931}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":1504,"column":25,"offset":50931},"end":{"line":1504,"column":28,"offset":50934}}},{"type":"text","value":" and ","position":{"start":{"line":1504,"column":28,"offset":50934},"end":{"line":1504,"column":33,"offset":50939}}},{"type":"raw","value":"<code class=\"language-text\">c</code>","position":{"start":{"line":1504,"column":33,"offset":50939},"end":{"line":1504,"column":36,"offset":50942}}},{"type":"text","value":" with different values and calculate their sum.","position":{"start":{"line":1504,"column":36,"offset":50942},"end":{"line":1504,"column":83,"offset":50989}}}],"position":{"start":{"line":1504,"column":1,"offset":50907},"end":{"line":1504,"column":83,"offset":50989}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> c <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> c\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sum</span>\n    <span class=\"token number\">18</span></code></pre></div>","position":{"start":{"line":1506,"column":1,"offset":50993},"end":{"line":1513,"column":4,"offset":51098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We have just seen the mechanics of how assignment works in Python.","position":{"start":{"line":1515,"column":1,"offset":51102},"end":{"line":1515,"column":67,"offset":51168}}}],"position":{"start":{"line":1515,"column":1,"offset":51102},"end":{"line":1515,"column":67,"offset":51168}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1517,"column":3,"offset":51174},"end":{"line":1517,"column":10,"offset":51181}}}],"position":{"start":{"line":1517,"column":1,"offset":51172},"end":{"line":1517,"column":12,"offset":51183}}}],"position":{"start":{"line":1517,"column":1,"offset":51172},"end":{"line":1517,"column":12,"offset":51183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":1519,"column":1,"offset":51187},"end":{"line":1519,"column":18,"offset":51204}}}],"position":{"start":{"line":1519,"column":1,"offset":51187},"end":{"line":1519,"column":18,"offset":51204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned what happens when you assign a value to a variable, which may or may not exist","position":{"start":{"line":1521,"column":5,"offset":51212},"end":{"line":1521,"column":91,"offset":51298}}}],"position":{"start":{"line":1521,"column":1,"offset":51208},"end":{"line":1521,"column":91,"offset":51298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Discovered that literal constants cannot be placed on the left hand side of the assignment","position":{"start":{"line":1522,"column":5,"offset":51304},"end":{"line":1522,"column":95,"offset":51394}}},{"type":"text","value":"(","position":{"start":{"line":1522,"column":95,"offset":51394},"end":{"line":1522,"column":97,"offset":51396}}},{"type":"raw","value":"<code class=\"language-text\">=</code>","position":{"start":{"line":1522,"column":97,"offset":51396},"end":{"line":1522,"column":100,"offset":51399}}},{"type":"text","value":")","position":{"start":{"line":1522,"column":100,"offset":51399},"end":{"line":1522,"column":102,"offset":51401}}},{"type":"text","value":" operator","position":{"start":{"line":1522,"column":102,"offset":51401},"end":{"line":1522,"column":111,"offset":51410}}}],"position":{"start":{"line":1522,"column":1,"offset":51300},"end":{"line":1522,"column":111,"offset":51410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1521,"column":1,"offset":51208},"end":{"line":1522,"column":111,"offset":51410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 13: Introducing Formatted Printing","position":{"start":{"line":1524,"column":3,"offset":51416},"end":{"line":1524,"column":42,"offset":51455}}}],"position":{"start":{"line":1524,"column":1,"offset":51414},"end":{"line":1524,"column":44,"offset":51457}}}],"position":{"start":{"line":1524,"column":1,"offset":51414},"end":{"line":1524,"column":44,"offset":51457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Until now, we have been using the ","position":{"start":{"line":1526,"column":1,"offset":51461},"end":{"line":1526,"column":35,"offset":51495}}},{"type":"raw","value":"<code class=\"language-text\">format()</code>","position":{"start":{"line":1526,"column":35,"offset":51495},"end":{"line":1526,"column":45,"offset":51505}}},{"type":"text","value":" method to format and print values. Let's see a better approach to printing values.","position":{"start":{"line":1526,"column":45,"offset":51505},"end":{"line":1526,"column":128,"offset":51588}}}],"position":{"start":{"line":1526,"column":1,"offset":51461},"end":{"line":1526,"column":128,"offset":51588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the approach we used until now.","position":{"start":{"line":1528,"column":1,"offset":51592},"end":{"line":1528,"column":40,"offset":51631}}}],"position":{"start":{"line":1528,"column":1,"offset":51592},"end":{"line":1528,"column":40,"offset":51631}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> c\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} + {1} + {2} = {3}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">,</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":1530,"column":1,"offset":51635},"end":{"line":1537,"column":4,"offset":51799}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python has the concept of formatted strings. The syntax to use a formatted string is very simple - ","position":{"start":{"line":1539,"column":1,"offset":51803},"end":{"line":1539,"column":100,"offset":51902}}},{"type":"raw","value":"<code class=\"language-text\">f\"\"</code>","position":{"start":{"line":1539,"column":100,"offset":51902},"end":{"line":1539,"column":105,"offset":51907}}},{"type":"text","value":".","position":{"start":{"line":1539,"column":105,"offset":51907},"end":{"line":1539,"column":106,"offset":51908}}}],"position":{"start":{"line":1539,"column":1,"offset":51803},"end":{"line":1539,"column":106,"offset":51908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we want to print the value of a variable ","position":{"start":{"line":1541,"column":1,"offset":51912},"end":{"line":1541,"column":45,"offset":51956}}},{"type":"raw","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":1541,"column":45,"offset":51956},"end":{"line":1541,"column":48,"offset":51959}}},{"type":"text","value":", we can use ","position":{"start":{"line":1541,"column":48,"offset":51959},"end":{"line":1541,"column":61,"offset":51972}}},{"type":"raw","value":"<code class=\"language-text\">{a}</code>","position":{"start":{"line":1541,"column":61,"offset":51972},"end":{"line":1541,"column":66,"offset":51977}}},{"type":"text","value":" in the text.","position":{"start":{"line":1541,"column":66,"offset":51977},"end":{"line":1541,"column":79,"offset":51990}}}],"position":{"start":{"line":1541,"column":1,"offset":51912},"end":{"line":1541,"column":79,"offset":51990}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"value of a is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    value of a <span class=\"token keyword\">is</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"value of b is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    value of b <span class=\"token keyword\">is</span> <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":1543,"column":1,"offset":51994},"end":{"line":1549,"column":4,"offset":52144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The variable within braces is replaced by its value.","position":{"start":{"line":1551,"column":1,"offset":52148},"end":{"line":1551,"column":53,"offset":52200}}}],"position":{"start":{"line":1551,"column":1,"offset":52148},"end":{"line":1551,"column":53,"offset":52200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can use expressions in a formatted string. Example below uses ","position":{"start":{"line":1553,"column":1,"offset":52204},"end":{"line":1553,"column":67,"offset":52270}}},{"type":"raw","value":"<code class=\"language-text\">{a+b}</code>","position":{"start":{"line":1553,"column":67,"offset":52270},"end":{"line":1553,"column":74,"offset":52277}}},{"type":"text","value":".","position":{"start":{"line":1553,"column":74,"offset":52277},"end":{"line":1553,"column":75,"offset":52278}}}],"position":{"start":{"line":1553,"column":1,"offset":52204},"end":{"line":1553,"column":75,"offset":52278}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"sum of a and b is </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">sum</span> of a <span class=\"token keyword\">and</span> b <span class=\"token keyword\">is</span> <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":1555,"column":1,"offset":52282},"end":{"line":1558,"column":4,"offset":52366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This feature was introduced in a Python 3 release.","position":{"start":{"line":1560,"column":1,"offset":52370},"end":{"line":1560,"column":51,"offset":52420}}}],"position":{"start":{"line":1560,"column":1,"offset":52370},"end":{"line":1560,"column":51,"offset":52420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's get back to the original problem we wanted to solve: printing ","position":{"start":{"line":1562,"column":1,"offset":52424},"end":{"line":1562,"column":69,"offset":52492}}},{"type":"raw","value":"<code class=\"language-text\">5 + 6 + 7 = 18</code>","position":{"start":{"line":1562,"column":69,"offset":52492},"end":{"line":1562,"column":85,"offset":52508}}},{"type":"text","value":", using formatted strings.","position":{"start":{"line":1562,"column":85,"offset":52508},"end":{"line":1562,"column":111,"offset":52534}}}],"position":{"start":{"line":1562,"column":1,"offset":52424},"end":{"line":1562,"column":111,"offset":52534}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>a<span class=\"token punctuation\">}</span></span><span class=\"token string\"> + </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>b<span class=\"token punctuation\">}</span></span><span class=\"token string\"> + </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>c<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":1564,"column":1,"offset":52538},"end":{"line":1567,"column":4,"offset":52614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see how easy it turns out to be!","position":{"start":{"line":1569,"column":1,"offset":52618},"end":{"line":1569,"column":41,"offset":52658}}}],"position":{"start":{"line":1569,"column":1,"offset":52618},"end":{"line":1569,"column":41,"offset":52658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 14: The PMT-Challenge Revisited","position":{"start":{"line":1571,"column":3,"offset":52664},"end":{"line":1571,"column":39,"offset":52700}}}],"position":{"start":{"line":1571,"column":1,"offset":52662},"end":{"line":1571,"column":41,"offset":52702}}}],"position":{"start":{"line":1571,"column":1,"offset":52662},"end":{"line":1571,"column":41,"offset":52702}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to print the ","position":{"start":{"line":1573,"column":1,"offset":52706},"end":{"line":1573,"column":22,"offset":52727}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":1573,"column":22,"offset":52727},"end":{"line":1573,"column":25,"offset":52730}}},{"type":"text","value":"-table from ","position":{"start":{"line":1573,"column":25,"offset":52730},"end":{"line":1573,"column":37,"offset":52742}}},{"type":"raw","value":"<code class=\"language-text\">5 * 1 = 5</code>","position":{"start":{"line":1573,"column":37,"offset":52742},"end":{"line":1573,"column":48,"offset":52753}}},{"type":"text","value":" onward, until we reach to ","position":{"start":{"line":1573,"column":48,"offset":52753},"end":{"line":1573,"column":75,"offset":52780}}},{"type":"raw","value":"<code class=\"language-text\">5 * 10 = 50</code>","position":{"start":{"line":1573,"column":75,"offset":52780},"end":{"line":1573,"column":88,"offset":52793}}},{"type":"text","value":". The best solution we have right now, is shown below:","position":{"start":{"line":1573,"column":88,"offset":52793},"end":{"line":1573,"column":142,"offset":52847}}}],"position":{"start":{"line":1573,"column":1,"offset":52706},"end":{"line":1573,"column":142,"offset":52847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":1575,"column":3,"offset":52853},"end":{"line":1575,"column":14,"offset":52864}}}],"position":{"start":{"line":1575,"column":1,"offset":52851},"end":{"line":1575,"column":16,"offset":52866}}}],"position":{"start":{"line":1575,"column":1,"offset":52851},"end":{"line":1575,"column":16,"offset":52866}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">20</span></code></pre></div>","position":{"start":{"line":1577,"column":1,"offset":52870},"end":{"line":1590,"column":4,"offset":53255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Can we do something, to make sure that the code remains the same all the time, but the ","position":{"start":{"line":1592,"column":1,"offset":53259},"end":{"line":1592,"column":88,"offset":53346}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1592,"column":88,"offset":53346},"end":{"line":1592,"column":95,"offset":53353}}},{"type":"text","value":" value gets updated?","position":{"start":{"line":1592,"column":95,"offset":53353},"end":{"line":1592,"column":115,"offset":53373}}}],"position":{"start":{"line":1592,"column":1,"offset":53259},"end":{"line":1592,"column":115,"offset":53373}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> index <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">25</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> index <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> index <span class=\"token operator\">=</span> index <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0} * {1} = {2}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>index<span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span></code></pre></div>","position":{"start":{"line":1594,"column":1,"offset":53377},"end":{"line":1604,"column":4,"offset":53694}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We used ","position":{"start":{"line":1606,"column":1,"offset":53698},"end":{"line":1606,"column":9,"offset":53706}}},{"type":"raw","value":"<code class=\"language-text\">index = index + 1</code>","position":{"start":{"line":1606,"column":9,"offset":53706},"end":{"line":1606,"column":28,"offset":53725}}},{"type":"text","value":" to increment ","position":{"start":{"line":1606,"column":28,"offset":53725},"end":{"line":1606,"column":42,"offset":53739}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1606,"column":42,"offset":53739},"end":{"line":1606,"column":49,"offset":53746}}},{"type":"text","value":" value.","position":{"start":{"line":1606,"column":49,"offset":53746},"end":{"line":1606,"column":56,"offset":53753}}}],"position":{"start":{"line":1606,"column":1,"offset":53698},"end":{"line":1606,"column":56,"offset":53753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we execute these same two statements again and again, we can print the entire table! This is exactly what loops help us do: execute the same statements repeatedly.","position":{"start":{"line":1608,"column":1,"offset":53757},"end":{"line":1608,"column":167,"offset":53923}}}],"position":{"start":{"line":1608,"column":1,"offset":53757},"end":{"line":1608,"column":167,"offset":53923}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The simplest loop available in Python is the ","position":{"start":{"line":1610,"column":1,"offset":53927},"end":{"line":1610,"column":46,"offset":53972}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"for loop","position":{"start":{"line":1610,"column":48,"offset":53974},"end":{"line":1610,"column":56,"offset":53982}}}],"position":{"start":{"line":1610,"column":46,"offset":53972},"end":{"line":1610,"column":58,"offset":53984}}},{"type":"text","value":".","position":{"start":{"line":1610,"column":58,"offset":53984},"end":{"line":1610,"column":59,"offset":53985}}}],"position":{"start":{"line":1610,"column":1,"offset":53927},"end":{"line":1610,"column":59,"offset":53985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we run a ","position":{"start":{"line":1612,"column":1,"offset":53989},"end":{"line":1612,"column":15,"offset":54003}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1612,"column":15,"offset":54003},"end":{"line":1612,"column":20,"offset":54008}}},{"type":"text","value":" loop, we need to specify the range of values - ","position":{"start":{"line":1612,"column":20,"offset":54008},"end":{"line":1612,"column":68,"offset":54056}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1612,"column":68,"offset":54056},"end":{"line":1612,"column":71,"offset":54059}}},{"type":"text","value":" to ","position":{"start":{"line":1612,"column":71,"offset":54059},"end":{"line":1612,"column":75,"offset":54063}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1612,"column":75,"offset":54063},"end":{"line":1612,"column":79,"offset":54067}}},{"type":"text","value":" or ","position":{"start":{"line":1612,"column":79,"offset":54067},"end":{"line":1612,"column":83,"offset":54071}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1612,"column":83,"offset":54071},"end":{"line":1612,"column":86,"offset":54074}}},{"type":"text","value":" to ","position":{"start":{"line":1612,"column":86,"offset":54074},"end":{"line":1612,"column":90,"offset":54078}}},{"type":"raw","value":"<code class=\"language-text\">20</code>","position":{"start":{"line":1612,"column":90,"offset":54078},"end":{"line":1612,"column":94,"offset":54082}}},{"type":"text","value":", and so on. ","position":{"start":{"line":1612,"column":94,"offset":54082},"end":{"line":1612,"column":107,"offset":54095}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":1612,"column":107,"offset":54095},"end":{"line":1612,"column":116,"offset":54104}}},{"type":"text","value":" function helps us to specify a range of values.","position":{"start":{"line":1612,"column":116,"offset":54104},"end":{"line":1612,"column":164,"offset":54152}}}],"position":{"start":{"line":1612,"column":1,"offset":53989},"end":{"line":1612,"column":164,"offset":54152}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1614,"column":1,"offset":54156},"end":{"line":1617,"column":4,"offset":54209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax of the ","position":{"start":{"line":1619,"column":1,"offset":54213},"end":{"line":1619,"column":19,"offset":54231}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1619,"column":19,"offset":54231},"end":{"line":1619,"column":24,"offset":54236}}},{"type":"text","value":" loop is: ","position":{"start":{"line":1619,"column":24,"offset":54236},"end":{"line":1619,"column":34,"offset":54246}}},{"type":"raw","value":"<code class=\"language-text\">for i in range(1, 10): ...</code>","position":{"start":{"line":1619,"column":34,"offset":54246},"end":{"line":1619,"column":62,"offset":54274}}},{"type":"text","value":". Here, ","position":{"start":{"line":1619,"column":62,"offset":54274},"end":{"line":1619,"column":70,"offset":54282}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":1619,"column":70,"offset":54282},"end":{"line":1619,"column":73,"offset":54285}}},{"type":"text","value":" is the name of the ","position":{"start":{"line":1619,"column":73,"offset":54285},"end":{"line":1619,"column":93,"offset":54305}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"control variable","position":{"start":{"line":1619,"column":95,"offset":54307},"end":{"line":1619,"column":111,"offset":54323}}}],"position":{"start":{"line":1619,"column":93,"offset":54305},"end":{"line":1619,"column":113,"offset":54325}}},{"type":"text","value":". In Python, you need to put a colon, '","position":{"start":{"line":1619,"column":113,"offset":54325},"end":{"line":1619,"column":152,"offset":54364}}},{"type":"raw","value":"<code class=\"language-text\">:</code>","position":{"start":{"line":1619,"column":152,"offset":54364},"end":{"line":1619,"column":155,"offset":54367}}},{"type":"text","value":"', and in the next line give indentation.","position":{"start":{"line":1619,"column":155,"offset":54367},"end":{"line":1619,"column":196,"offset":54408}}}],"position":{"start":{"line":1619,"column":1,"offset":54213},"end":{"line":1619,"column":196,"offset":54408}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">9</span></code></pre></div>","position":{"start":{"line":1621,"column":1,"offset":54412},"end":{"line":1634,"column":4,"offset":54549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You would see that it prints from ","position":{"start":{"line":1636,"column":1,"offset":54553},"end":{"line":1636,"column":35,"offset":54587}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1636,"column":35,"offset":54587},"end":{"line":1636,"column":38,"offset":54590}}},{"type":"text","value":" to ","position":{"start":{"line":1636,"column":38,"offset":54590},"end":{"line":1636,"column":42,"offset":54594}}},{"type":"raw","value":"<code class=\"language-text\">9</code>","position":{"start":{"line":1636,"column":42,"offset":54594},"end":{"line":1636,"column":45,"offset":54597}}},{"type":"text","value":".","position":{"start":{"line":1636,"column":45,"offset":54597},"end":{"line":1636,"column":46,"offset":54598}}}],"position":{"start":{"line":1636,"column":1,"offset":54553},"end":{"line":1636,"column":46,"offset":54598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we run a loop in ","position":{"start":{"line":1638,"column":1,"offset":54602},"end":{"line":1638,"column":23,"offset":54624}}},{"type":"raw","value":"<code class=\"language-text\">range(1, 10)</code>","position":{"start":{"line":1638,"column":23,"offset":54624},"end":{"line":1638,"column":37,"offset":54638}}},{"type":"text","value":", ","position":{"start":{"line":1638,"column":37,"offset":54638},"end":{"line":1638,"column":39,"offset":54640}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1638,"column":39,"offset":54640},"end":{"line":1638,"column":42,"offset":54643}}},{"type":"text","value":" is ","position":{"start":{"line":1638,"column":42,"offset":54643},"end":{"line":1638,"column":46,"offset":54647}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"inclusive","position":{"start":{"line":1638,"column":47,"offset":54648},"end":{"line":1638,"column":56,"offset":54657}}}],"position":{"start":{"line":1638,"column":46,"offset":54647},"end":{"line":1638,"column":57,"offset":54658}}},{"type":"text","value":" and ","position":{"start":{"line":1638,"column":57,"offset":54658},"end":{"line":1638,"column":62,"offset":54663}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1638,"column":62,"offset":54663},"end":{"line":1638,"column":66,"offset":54667}}},{"type":"text","value":" is ","position":{"start":{"line":1638,"column":66,"offset":54667},"end":{"line":1638,"column":70,"offset":54671}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"exclusive","position":{"start":{"line":1638,"column":72,"offset":54673},"end":{"line":1638,"column":81,"offset":54682}}}],"position":{"start":{"line":1638,"column":70,"offset":54671},"end":{"line":1638,"column":83,"offset":54684}}},{"type":"text","value":".The loop runs from ","position":{"start":{"line":1638,"column":83,"offset":54684},"end":{"line":1638,"column":103,"offset":54704}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1638,"column":103,"offset":54704},"end":{"line":1638,"column":106,"offset":54707}}},{"type":"text","value":" to the value before ","position":{"start":{"line":1638,"column":106,"offset":54707},"end":{"line":1638,"column":127,"offset":54728}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1638,"column":127,"offset":54728},"end":{"line":1638,"column":131,"offset":54732}}},{"type":"text","value":", which is ","position":{"start":{"line":1638,"column":131,"offset":54732},"end":{"line":1638,"column":142,"offset":54743}}},{"type":"raw","value":"<code class=\"language-text\">9</code>","position":{"start":{"line":1638,"column":142,"offset":54743},"end":{"line":1638,"column":145,"offset":54746}}},{"type":"text","value":".","position":{"start":{"line":1638,"column":145,"offset":54746},"end":{"line":1638,"column":146,"offset":54747}}}],"position":{"start":{"line":1638,"column":1,"offset":54602},"end":{"line":1638,"column":146,"offset":54747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The leading whitespace before ","position":{"start":{"line":1640,"column":1,"offset":54751},"end":{"line":1640,"column":31,"offset":54781}}},{"type":"raw","value":"<code class=\"language-text\">print(i)</code>","position":{"start":{"line":1640,"column":31,"offset":54781},"end":{"line":1640,"column":41,"offset":54791}}},{"type":"text","value":" is called ","position":{"start":{"line":1640,"column":41,"offset":54791},"end":{"line":1640,"column":52,"offset":54802}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"indentation","position":{"start":{"line":1640,"column":54,"offset":54804},"end":{"line":1640,"column":65,"offset":54815}}}],"position":{"start":{"line":1640,"column":52,"offset":54802},"end":{"line":1640,"column":67,"offset":54817}}},{"type":"text","value":". We'll talk about indentation later, when we talk about puzzles related to the ","position":{"start":{"line":1640,"column":67,"offset":54817},"end":{"line":1640,"column":147,"offset":54897}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1640,"column":147,"offset":54897},"end":{"line":1640,"column":152,"offset":54902}}},{"type":"text","value":" loop.","position":{"start":{"line":1640,"column":152,"offset":54902},"end":{"line":1640,"column":158,"offset":54908}}}],"position":{"start":{"line":1640,"column":1,"offset":54751},"end":{"line":1640,"column":158,"offset":54908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How can you extend this concept to solving our ","position":{"start":{"line":1642,"column":1,"offset":54912},"end":{"line":1642,"column":48,"offset":54959}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"PMT-Challenge","position":{"start":{"line":1642,"column":49,"offset":54960},"end":{"line":1642,"column":62,"offset":54973}}}],"position":{"start":{"line":1642,"column":48,"offset":54959},"end":{"line":1642,"column":63,"offset":54974}}},{"type":"text","value":" problem?","position":{"start":{"line":1642,"column":63,"offset":54974},"end":{"line":1642,"column":72,"offset":54983}}}],"position":{"start":{"line":1642,"column":1,"offset":54912},"end":{"line":1642,"column":72,"offset":54983}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>index<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span></code></pre></div>","position":{"start":{"line":1644,"column":1,"offset":54987},"end":{"line":1647,"column":4,"offset":55062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What we were doing earlier, was calling ","position":{"start":{"line":1649,"column":1,"offset":55066},"end":{"line":1649,"column":41,"offset":55106}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1649,"column":41,"offset":55106},"end":{"line":1649,"column":50,"offset":55115}}},{"type":"text","value":" with a formatted string. Now we want to print this statement for different values of ","position":{"start":{"line":1649,"column":50,"offset":55115},"end":{"line":1649,"column":136,"offset":55201}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":1649,"column":136,"offset":55201},"end":{"line":1649,"column":139,"offset":55204}}},{"type":"text","value":".","position":{"start":{"line":1649,"column":139,"offset":55204},"end":{"line":1649,"column":140,"offset":55205}}}],"position":{"start":{"line":1649,"column":1,"offset":55066},"end":{"line":1649,"column":140,"offset":55205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How can you do that?","position":{"start":{"line":1651,"column":1,"offset":55209},"end":{"line":1651,"column":21,"offset":55229}}}],"position":{"start":{"line":1651,"column":1,"offset":55209},"end":{"line":1651,"column":21,"offset":55229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start with a simple example.","position":{"start":{"line":1653,"column":1,"offset":55233},"end":{"line":1653,"column":35,"offset":55267}}}],"position":{"start":{"line":1653,"column":1,"offset":55233},"end":{"line":1653,"column":35,"offset":55267}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">10</span></code></pre></div>","position":{"start":{"line":1655,"column":1,"offset":55271},"end":{"line":1669,"column":4,"offset":55421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print(f\"{i}\")</code>","position":{"start":{"line":1671,"column":1,"offset":55425},"end":{"line":1671,"column":16,"offset":55440}}},{"type":"text","value":" prints the value of i.","position":{"start":{"line":1671,"column":16,"offset":55440},"end":{"line":1671,"column":39,"offset":55463}}}],"position":{"start":{"line":1671,"column":1,"offset":55425},"end":{"line":1671,"column":39,"offset":55463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, how do we get it to print ","position":{"start":{"line":1673,"column":1,"offset":55467},"end":{"line":1673,"column":32,"offset":55498}}},{"type":"raw","value":"<code class=\"language-text\">5 * 1 = 5</code>","position":{"start":{"line":1673,"column":32,"offset":55498},"end":{"line":1673,"column":43,"offset":55509}}},{"type":"text","value":" to ","position":{"start":{"line":1673,"column":43,"offset":55509},"end":{"line":1673,"column":47,"offset":55513}}},{"type":"raw","value":"<code class=\"language-text\">5 * 10 = 50</code>","position":{"start":{"line":1673,"column":47,"offset":55513},"end":{"line":1673,"column":60,"offset":55526}}},{"type":"text","value":"?","position":{"start":{"line":1673,"column":60,"offset":55526},"end":{"line":1673,"column":61,"offset":55527}}}],"position":{"start":{"line":1673,"column":1,"offset":55467},"end":{"line":1673,"column":61,"offset":55527}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"5 * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">25</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">9</span> <span class=\"token operator\">=</span> <span class=\"token number\">45</span>\n    <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span>\n    <span class=\"token number\">1000</span></code></pre></div>","position":{"start":{"line":1675,"column":1,"offset":55531},"end":{"line":1691,"column":4,"offset":55814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print(f\"5 * {i} = {5 * i}\")</code>","position":{"start":{"line":1693,"column":1,"offset":55818},"end":{"line":1693,"column":30,"offset":55847}}},{"type":"text","value":" prints a specific multiple of 5.","position":{"start":{"line":1693,"column":30,"offset":55847},"end":{"line":1693,"column":63,"offset":55880}}}],"position":{"start":{"line":1693,"column":1,"offset":55818},"end":{"line":1693,"column":63,"offset":55880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 15: Loops","position":{"start":{"line":1695,"column":3,"offset":55886},"end":{"line":1695,"column":17,"offset":55900}}}],"position":{"start":{"line":1695,"column":1,"offset":55884},"end":{"line":1695,"column":19,"offset":55902}}}],"position":{"start":{"line":1695,"column":1,"offset":55884},"end":{"line":1695,"column":19,"offset":55902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In a previous step, we took a major step in programming. We wrote our first for loop with Python. In this step, let's try a few puzzles to understand the for loop even further.","position":{"start":{"line":1697,"column":1,"offset":55906},"end":{"line":1697,"column":177,"offset":56082}}}],"position":{"start":{"line":1697,"column":1,"offset":55906},"end":{"line":1697,"column":177,"offset":56082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax of the for loop we looked at earlier was:","position":{"start":{"line":1699,"column":1,"offset":56086},"end":{"line":1699,"column":53,"offset":56138}}}],"position":{"start":{"line":1699,"column":1,"offset":56086},"end":{"line":1699,"column":53,"offset":56138}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">  <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1701,"column":1,"offset":56142},"end":{"line":1704,"column":4,"offset":56196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":1706,"column":3,"offset":56202},"end":{"line":1706,"column":14,"offset":56213}}}],"position":{"start":{"line":1706,"column":1,"offset":56200},"end":{"line":1706,"column":16,"offset":56215}}}],"position":{"start":{"line":1706,"column":1,"offset":56200},"end":{"line":1706,"column":16,"offset":56215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we write a ","position":{"start":{"line":1708,"column":1,"offset":56219},"end":{"line":1708,"column":22,"offset":56240}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1708,"column":22,"offset":56240},"end":{"line":1708,"column":27,"offset":56245}}},{"type":"text","value":" loop, but don't give a ","position":{"start":{"line":1708,"column":27,"offset":56245},"end":{"line":1708,"column":51,"offset":56269}}},{"type":"raw","value":"<code class=\"language-text\">:</code>","position":{"start":{"line":1708,"column":51,"offset":56269},"end":{"line":1708,"column":54,"offset":56272}}},{"type":"text","value":" after the ","position":{"start":{"line":1708,"column":54,"offset":56272},"end":{"line":1708,"column":65,"offset":56283}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":1708,"column":65,"offset":56283},"end":{"line":1708,"column":74,"offset":56292}}},{"type":"text","value":" method, to close the first line. What would happen?","position":{"start":{"line":1708,"column":74,"offset":56292},"end":{"line":1708,"column":126,"offset":56344}}}],"position":{"start":{"line":1708,"column":1,"offset":56219},"end":{"line":1708,"column":126,"offset":56344}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n                           <span class=\"token operator\">^</span>\n        SyntaxError<span class=\"token punctuation\">:</span> invalid syntax</code></pre></div>","position":{"start":{"line":1710,"column":1,"offset":56348},"end":{"line":1716,"column":4,"offset":56519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Invalid syntax. A ","position":{"start":{"line":1718,"column":1,"offset":56523},"end":{"line":1718,"column":19,"offset":56541}}},{"type":"raw","value":"<code class=\"language-text\">:</code>","position":{"start":{"line":1718,"column":19,"offset":56541},"end":{"line":1718,"column":22,"offset":56544}}},{"type":"text","value":" is mandatory within the ","position":{"start":{"line":1718,"column":22,"offset":56544},"end":{"line":1718,"column":47,"offset":56569}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1718,"column":47,"offset":56569},"end":{"line":1718,"column":52,"offset":56574}}},{"type":"text","value":" loop syntax.","position":{"start":{"line":1718,"column":52,"offset":56574},"end":{"line":1718,"column":65,"offset":56587}}}],"position":{"start":{"line":1718,"column":1,"offset":56523},"end":{"line":1718,"column":65,"offset":56587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's provide a ","position":{"start":{"line":1720,"column":1,"offset":56591},"end":{"line":1720,"column":17,"offset":56607}}},{"type":"raw","value":"<code class=\"language-text\">:</code>","position":{"start":{"line":1720,"column":17,"offset":56607},"end":{"line":1720,"column":20,"offset":56610}}},{"type":"text","value":" and in the next line, use ","position":{"start":{"line":1720,"column":20,"offset":56610},"end":{"line":1720,"column":47,"offset":56637}}},{"type":"raw","value":"<code class=\"language-text\">print(i)</code>","position":{"start":{"line":1720,"column":47,"offset":56637},"end":{"line":1720,"column":57,"offset":56647}}},{"type":"text","value":" without space before it ","position":{"start":{"line":1720,"column":57,"offset":56647},"end":{"line":1720,"column":82,"offset":56672}}},{"type":"text","value":"(","position":{"start":{"line":1720,"column":82,"offset":56672},"end":{"line":1720,"column":84,"offset":56674}}},{"type":"text","value":"without indentation","position":{"start":{"line":1720,"column":84,"offset":56674},"end":{"line":1720,"column":103,"offset":56693}}},{"type":"text","value":")","position":{"start":{"line":1720,"column":103,"offset":56693},"end":{"line":1720,"column":105,"offset":56695}}},{"type":"text","value":".","position":{"start":{"line":1720,"column":105,"offset":56695},"end":{"line":1720,"column":106,"offset":56696}}}],"position":{"start":{"line":1720,"column":1,"offset":56591},"end":{"line":1720,"column":106,"offset":56696}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">2</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">^</span>\n    IndentationError<span class=\"token punctuation\">:</span> expected an indented block</code></pre></div>","position":{"start":{"line":1722,"column":1,"offset":56700},"end":{"line":1729,"column":4,"offset":56876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Most other programming languages use open brace ","position":{"start":{"line":1731,"column":1,"offset":56880},"end":{"line":1731,"column":49,"offset":56928}}},{"type":"raw","value":"<code class=\"language-text\">{</code>","position":{"start":{"line":1731,"column":49,"offset":56928},"end":{"line":1731,"column":52,"offset":56931}}},{"type":"text","value":" and closed brace ","position":{"start":{"line":1731,"column":52,"offset":56931},"end":{"line":1731,"column":70,"offset":56949}}},{"type":"raw","value":"<code class=\"language-text\">}</code>","position":{"start":{"line":1731,"column":70,"offset":56949},"end":{"line":1731,"column":73,"offset":56952}}},{"type":"text","value":" as delimiters in a ","position":{"start":{"line":1731,"column":73,"offset":56952},"end":{"line":1731,"column":93,"offset":56972}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1731,"column":93,"offset":56972},"end":{"line":1731,"column":98,"offset":56977}}},{"type":"text","value":" loop. However, Python uses indentation to identify which code is part of a ","position":{"start":{"line":1731,"column":98,"offset":56977},"end":{"line":1731,"column":174,"offset":57053}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1731,"column":174,"offset":57053},"end":{"line":1731,"column":179,"offset":57058}}},{"type":"text","value":" loop, and which is not. So if we are writing the body of a ","position":{"start":{"line":1731,"column":179,"offset":57058},"end":{"line":1731,"column":239,"offset":57118}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1731,"column":239,"offset":57118},"end":{"line":1731,"column":244,"offset":57123}}},{"type":"text","value":" loop, we must use indentation, and leave atleast a single ","position":{"start":{"line":1731,"column":244,"offset":57123},"end":{"line":1731,"column":303,"offset":57182}}},{"type":"raw","value":"<code class=\"language-text\">&lt;SPACE></code>","position":{"start":{"line":1731,"column":303,"offset":57182},"end":{"line":1731,"column":312,"offset":57191}}},{"type":"text","value":".","position":{"start":{"line":1731,"column":312,"offset":57191},"end":{"line":1731,"column":313,"offset":57192}}}],"position":{"start":{"line":1731,"column":1,"offset":56880},"end":{"line":1731,"column":313,"offset":57192}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">9</span></code></pre></div>","position":{"start":{"line":1733,"column":1,"offset":57196},"end":{"line":1746,"column":4,"offset":57333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do we execute two lines of code as part of the ","position":{"start":{"line":1748,"column":1,"offset":57337},"end":{"line":1748,"column":52,"offset":57388}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1748,"column":52,"offset":57388},"end":{"line":1748,"column":57,"offset":57393}}},{"type":"text","value":" loop?","position":{"start":{"line":1748,"column":57,"offset":57393},"end":{"line":1748,"column":63,"offset":57399}}}],"position":{"start":{"line":1748,"column":1,"offset":57337},"end":{"line":1748,"column":63,"offset":57399}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">10</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">12</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">14</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">16</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">18</span></code></pre></div>","position":{"start":{"line":1750,"column":1,"offset":57403},"end":{"line":1773,"column":4,"offset":57628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We are indenting both statements with a space - ","position":{"start":{"line":1775,"column":1,"offset":57632},"end":{"line":1775,"column":49,"offset":57680}}},{"type":"raw","value":"<code class=\"language-text\">print(i)</code>","position":{"start":{"line":1775,"column":49,"offset":57680},"end":{"line":1775,"column":59,"offset":57690}}},{"type":"text","value":" and ","position":{"start":{"line":1775,"column":59,"offset":57690},"end":{"line":1775,"column":64,"offset":57695}}},{"type":"raw","value":"<code class=\"language-text\">print(2*i)</code>","position":{"start":{"line":1775,"column":64,"offset":57695},"end":{"line":1775,"column":76,"offset":57707}}},{"type":"text","value":".","position":{"start":{"line":1775,"column":76,"offset":57707},"end":{"line":1775,"column":77,"offset":57708}}}],"position":{"start":{"line":1775,"column":1,"offset":57632},"end":{"line":1775,"column":77,"offset":57708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When for loop has only one line of code, you can specify it right after the ","position":{"start":{"line":1777,"column":1,"offset":57712},"end":{"line":1777,"column":77,"offset":57788}}},{"type":"raw","value":"<code class=\"language-text\">:</code>","position":{"start":{"line":1777,"column":77,"offset":57788},"end":{"line":1777,"column":80,"offset":57791}}}],"position":{"start":{"line":1777,"column":1,"offset":57712},"end":{"line":1777,"column":80,"offset":57791}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":1779,"column":1,"offset":57795},"end":{"line":1785,"column":4,"offset":57878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, this is not considered to be a good programming practice. Even though you may want to execute just one statement in a ","position":{"start":{"line":1787,"column":1,"offset":57882},"end":{"line":1787,"column":128,"offset":58009}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1787,"column":128,"offset":58009},"end":{"line":1787,"column":133,"offset":58014}}},{"type":"text","value":" loop, indentation on a new line is recommended.","position":{"start":{"line":1787,"column":133,"offset":58014},"end":{"line":1787,"column":181,"offset":58062}}}],"position":{"start":{"line":1787,"column":1,"offset":57882},"end":{"line":1787,"column":181,"offset":58062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Another best practice is to use four ","position":{"start":{"line":1789,"column":1,"offset":58066},"end":{"line":1789,"column":38,"offset":58103}}},{"type":"raw","value":"<code class=\"language-text\">&lt;SPACE></code>","position":{"start":{"line":1789,"column":38,"offset":58103},"end":{"line":1789,"column":47,"offset":58112}}},{"type":"text","value":"s for indentation, instead of just two. This would give clear indentation of the code.","position":{"start":{"line":1789,"column":47,"offset":58112},"end":{"line":1789,"column":133,"offset":58198}}}],"position":{"start":{"line":1789,"column":1,"offset":58066},"end":{"line":1789,"column":133,"offset":58198}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":1791,"column":1,"offset":58202},"end":{"line":1798,"column":4,"offset":58298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Anybody who looks at the code immediately understands that this ","position":{"start":{"line":1800,"column":1,"offset":58302},"end":{"line":1800,"column":65,"offset":58366}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1800,"column":65,"offset":58366},"end":{"line":1800,"column":74,"offset":58375}}},{"type":"text","value":" is part of the ","position":{"start":{"line":1800,"column":74,"offset":58375},"end":{"line":1800,"column":90,"offset":58391}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1800,"column":90,"offset":58391},"end":{"line":1800,"column":95,"offset":58396}}},{"type":"text","value":" loop.","position":{"start":{"line":1800,"column":95,"offset":58396},"end":{"line":1800,"column":101,"offset":58402}}}],"position":{"start":{"line":1800,"column":1,"offset":58302},"end":{"line":1800,"column":101,"offset":58402}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say you only want to print the odd numbers till ","position":{"start":{"line":1802,"column":1,"offset":58406},"end":{"line":1802,"column":55,"offset":58460}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1802,"column":55,"offset":58460},"end":{"line":1802,"column":59,"offset":58464}}},{"type":"text","value":", which are ","position":{"start":{"line":1802,"column":59,"offset":58464},"end":{"line":1802,"column":71,"offset":58476}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1802,"column":71,"offset":58476},"end":{"line":1802,"column":74,"offset":58479}}},{"type":"text","value":", ","position":{"start":{"line":1802,"column":74,"offset":58479},"end":{"line":1802,"column":76,"offset":58481}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":1802,"column":76,"offset":58481},"end":{"line":1802,"column":79,"offset":58484}}},{"type":"text","value":", ","position":{"start":{"line":1802,"column":79,"offset":58484},"end":{"line":1802,"column":81,"offset":58486}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":1802,"column":81,"offset":58486},"end":{"line":1802,"column":84,"offset":58489}}},{"type":"text","value":", ","position":{"start":{"line":1802,"column":84,"offset":58489},"end":{"line":1802,"column":86,"offset":58491}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":1802,"column":86,"offset":58491},"end":{"line":1802,"column":89,"offset":58494}}},{"type":"text","value":" and ","position":{"start":{"line":1802,"column":89,"offset":58494},"end":{"line":1802,"column":94,"offset":58499}}},{"type":"raw","value":"<code class=\"language-text\">9</code>","position":{"start":{"line":1802,"column":94,"offset":58499},"end":{"line":1802,"column":97,"offset":58502}}},{"type":"text","value":". The ","position":{"start":{"line":1802,"column":97,"offset":58502},"end":{"line":1802,"column":103,"offset":58508}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":1802,"column":103,"offset":58508},"end":{"line":1802,"column":112,"offset":58517}}},{"type":"text","value":" function offers an interesting option.","position":{"start":{"line":1802,"column":112,"offset":58517},"end":{"line":1802,"column":151,"offset":58556}}}],"position":{"start":{"line":1802,"column":1,"offset":58406},"end":{"line":1802,"column":151,"offset":58556}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">9</span></code></pre></div>","position":{"start":{"line":1804,"column":1,"offset":58560},"end":{"line":1813,"column":4,"offset":58672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ","position":{"start":{"line":1815,"column":1,"offset":58676},"end":{"line":1815,"column":4,"offset":58679}}},{"type":"raw","value":"<code class=\"language-text\">for i in range(1, 11, 2)</code>","position":{"start":{"line":1815,"column":4,"offset":58679},"end":{"line":1815,"column":30,"offset":58705}}},{"type":"text","value":", we pass in a third argument, called a ","position":{"start":{"line":1815,"column":30,"offset":58705},"end":{"line":1815,"column":70,"offset":58745}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"step","position":{"start":{"line":1815,"column":71,"offset":58746},"end":{"line":1815,"column":75,"offset":58750}}}],"position":{"start":{"line":1815,"column":70,"offset":58745},"end":{"line":1815,"column":76,"offset":58751}}},{"type":"text","value":". After each iteration, the value of ","position":{"start":{"line":1815,"column":76,"offset":58751},"end":{"line":1815,"column":113,"offset":58788}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":1815,"column":113,"offset":58788},"end":{"line":1815,"column":116,"offset":58791}}},{"type":"text","value":" is increment by ","position":{"start":{"line":1815,"column":116,"offset":58791},"end":{"line":1815,"column":133,"offset":58808}}},{"type":"raw","value":"<code class=\"language-text\">step</code>","position":{"start":{"line":1815,"column":133,"offset":58808},"end":{"line":1815,"column":139,"offset":58814}}},{"type":"text","value":".","position":{"start":{"line":1815,"column":139,"offset":58814},"end":{"line":1815,"column":140,"offset":58815}}}],"position":{"start":{"line":1815,"column":1,"offset":58676},"end":{"line":1815,"column":140,"offset":58815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1817,"column":3,"offset":58821},"end":{"line":1817,"column":10,"offset":58828}}}],"position":{"start":{"line":1817,"column":1,"offset":58819},"end":{"line":1817,"column":12,"offset":58830}}}],"position":{"start":{"line":1817,"column":1,"offset":58819},"end":{"line":1817,"column":12,"offset":58830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":1819,"column":1,"offset":58834},"end":{"line":1819,"column":18,"offset":58851}}}],"position":{"start":{"line":1819,"column":1,"offset":58834},"end":{"line":1819,"column":18,"offset":58851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Looked at a few puzzles about the ","position":{"start":{"line":1821,"column":5,"offset":58859},"end":{"line":1821,"column":39,"offset":58893}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1821,"column":39,"offset":58893},"end":{"line":1821,"column":44,"offset":58898}}},{"type":"text","value":" loop, which lay emphasis on the following aspects of for:","position":{"start":{"line":1821,"column":44,"offset":58898},"end":{"line":1821,"column":102,"offset":58956}}}],"position":{"start":{"line":1821,"column":5,"offset":58859},"end":{"line":1821,"column":102,"offset":58956}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The importance of syntax elements such as the colon","position":{"start":{"line":1822,"column":9,"offset":58966},"end":{"line":1822,"column":60,"offset":59017}}}],"position":{"start":{"line":1822,"column":5,"offset":58962},"end":{"line":1822,"column":60,"offset":59017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Indentation","position":{"start":{"line":1823,"column":9,"offset":59027},"end":{"line":1823,"column":20,"offset":59038}}}],"position":{"start":{"line":1823,"column":5,"offset":59023},"end":{"line":1823,"column":20,"offset":59038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Variations of the ","position":{"start":{"line":1824,"column":9,"offset":59048},"end":{"line":1824,"column":27,"offset":59066}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":1824,"column":27,"offset":59066},"end":{"line":1824,"column":36,"offset":59075}}},{"type":"text","value":" function","position":{"start":{"line":1824,"column":36,"offset":59075},"end":{"line":1824,"column":45,"offset":59084}}}],"position":{"start":{"line":1824,"column":5,"offset":59044},"end":{"line":1824,"column":45,"offset":59084}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1822,"column":5,"offset":58962},"end":{"line":1824,"column":45,"offset":59084}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1821,"column":1,"offset":58855},"end":{"line":1824,"column":45,"offset":59084}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1821,"column":1,"offset":58855},"end":{"line":1824,"column":45,"offset":59084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 16: Programming Exercise PE-BA-02","position":{"start":{"line":1826,"column":3,"offset":59090},"end":{"line":1826,"column":41,"offset":59128}}}],"position":{"start":{"line":1826,"column":1,"offset":59088},"end":{"line":1826,"column":43,"offset":59130}}}],"position":{"start":{"line":1826,"column":1,"offset":59088},"end":{"line":1826,"column":43,"offset":59130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step, after initially exploring the Python ","position":{"start":{"line":1828,"column":1,"offset":59134},"end":{"line":1828,"column":60,"offset":59193}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1828,"column":60,"offset":59193},"end":{"line":1828,"column":65,"offset":59198}}},{"type":"text","value":" loop, we looked at a number of puzzles.","position":{"start":{"line":1828,"column":65,"offset":59198},"end":{"line":1828,"column":105,"offset":59238}}}],"position":{"start":{"line":1828,"column":1,"offset":59134},"end":{"line":1828,"column":105,"offset":59238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at a few exercises.","position":{"start":{"line":1830,"column":1,"offset":59242},"end":{"line":1830,"column":45,"offset":59286}}}],"position":{"start":{"line":1830,"column":1,"offset":59242},"end":{"line":1830,"column":45,"offset":59286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":1832,"column":3,"offset":59292},"end":{"line":1832,"column":12,"offset":59301}}}],"position":{"start":{"line":1832,"column":1,"offset":59290},"end":{"line":1832,"column":14,"offset":59303}}}],"position":{"start":{"line":1832,"column":1,"offset":59290},"end":{"line":1832,"column":14,"offset":59303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Print the even numbers up to 10. We would want to print 2 4 6 8 10, using a for loop.","position":{"start":{"line":1834,"column":4,"offset":59310},"end":{"line":1834,"column":89,"offset":59395}}}],"position":{"start":{"line":1834,"column":1,"offset":59307},"end":{"line":1834,"column":89,"offset":59395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Print the first 10 numbers in reverse","position":{"start":{"line":1835,"column":4,"offset":59400},"end":{"line":1835,"column":41,"offset":59437}}}],"position":{"start":{"line":1835,"column":1,"offset":59397},"end":{"line":1835,"column":41,"offset":59437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Print the first 10 even numbers in reverse","position":{"start":{"line":1836,"column":4,"offset":59442},"end":{"line":1836,"column":46,"offset":59484}}}],"position":{"start":{"line":1836,"column":1,"offset":59439},"end":{"line":1836,"column":46,"offset":59484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Print the squares of the first 10 numbers","position":{"start":{"line":1837,"column":4,"offset":59489},"end":{"line":1837,"column":45,"offset":59530}}}],"position":{"start":{"line":1837,"column":1,"offset":59486},"end":{"line":1837,"column":45,"offset":59530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Print the squares of the first 10 numbers, in reverse","position":{"start":{"line":1838,"column":4,"offset":59535},"end":{"line":1838,"column":57,"offset":59588}}}],"position":{"start":{"line":1838,"column":1,"offset":59532},"end":{"line":1838,"column":57,"offset":59588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Print the squares of the even numbers","position":{"start":{"line":1839,"column":4,"offset":59593},"end":{"line":1839,"column":41,"offset":59630}}}],"position":{"start":{"line":1839,"column":1,"offset":59590},"end":{"line":1839,"column":41,"offset":59630}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1834,"column":1,"offset":59307},"end":{"line":1839,"column":41,"offset":59630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 1","position":{"start":{"line":1841,"column":3,"offset":59636},"end":{"line":1841,"column":13,"offset":59646}}}],"position":{"start":{"line":1841,"column":1,"offset":59634},"end":{"line":1841,"column":15,"offset":59648}}}],"position":{"start":{"line":1841,"column":1,"offset":59634},"end":{"line":1841,"column":15,"offset":59648}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of starting with ","position":{"start":{"line":1843,"column":1,"offset":59652},"end":{"line":1843,"column":26,"offset":59677}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1843,"column":26,"offset":59677},"end":{"line":1843,"column":29,"offset":59680}}},{"type":"text","value":", we need to start with ","position":{"start":{"line":1843,"column":29,"offset":59680},"end":{"line":1843,"column":53,"offset":59704}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1843,"column":53,"offset":59704},"end":{"line":1843,"column":56,"offset":59707}}},{"type":"text","value":". Each time, ","position":{"start":{"line":1843,"column":56,"offset":59707},"end":{"line":1843,"column":69,"offset":59720}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":1843,"column":69,"offset":59720},"end":{"line":1843,"column":72,"offset":59723}}},{"type":"text","value":" it would be incremented by ","position":{"start":{"line":1843,"column":72,"offset":59723},"end":{"line":1843,"column":100,"offset":59751}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":1843,"column":100,"offset":59751},"end":{"line":1843,"column":103,"offset":59754}}},{"type":"text","value":", and ","position":{"start":{"line":1843,"column":103,"offset":59754},"end":{"line":1843,"column":109,"offset":59760}}},{"type":"raw","value":"<code class=\"language-text\">2 4 6 8 and 10</code>","position":{"start":{"line":1843,"column":109,"offset":59760},"end":{"line":1843,"column":125,"offset":59776}}},{"type":"text","value":" would be printed.","position":{"start":{"line":1843,"column":125,"offset":59776},"end":{"line":1843,"column":143,"offset":59794}}}],"position":{"start":{"line":1843,"column":1,"offset":59652},"end":{"line":1843,"column":143,"offset":59794}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">10</span></code></pre></div>","position":{"start":{"line":1845,"column":1,"offset":59798},"end":{"line":1854,"column":4,"offset":59911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 2","position":{"start":{"line":1856,"column":3,"offset":59917},"end":{"line":1856,"column":13,"offset":59927}}}],"position":{"start":{"line":1856,"column":1,"offset":59915},"end":{"line":1856,"column":15,"offset":59929}}}],"position":{"start":{"line":1856,"column":1,"offset":59915},"end":{"line":1856,"column":15,"offset":59929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We would want to print the numbers in reverse. Think about how you would do that using the ","position":{"start":{"line":1858,"column":1,"offset":59933},"end":{"line":1858,"column":92,"offset":60024}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":1858,"column":92,"offset":60024},"end":{"line":1858,"column":101,"offset":60033}}},{"type":"text","value":" function. We'd want go from ","position":{"start":{"line":1858,"column":101,"offset":60033},"end":{"line":1858,"column":130,"offset":60062}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1858,"column":130,"offset":60062},"end":{"line":1858,"column":134,"offset":60066}}},{"type":"text","value":", ","position":{"start":{"line":1858,"column":134,"offset":60066},"end":{"line":1858,"column":136,"offset":60068}}},{"type":"raw","value":"<code class=\"language-text\">9</code>","position":{"start":{"line":1858,"column":136,"offset":60068},"end":{"line":1858,"column":139,"offset":60071}}},{"type":"text","value":", ","position":{"start":{"line":1858,"column":139,"offset":60071},"end":{"line":1858,"column":141,"offset":60073}}},{"type":"raw","value":"<code class=\"language-text\">8</code>","position":{"start":{"line":1858,"column":141,"offset":60073},"end":{"line":1858,"column":144,"offset":60076}}},{"type":"text","value":", and so on up to ","position":{"start":{"line":1858,"column":144,"offset":60076},"end":{"line":1858,"column":162,"offset":60094}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1858,"column":162,"offset":60094},"end":{"line":1858,"column":165,"offset":60097}}},{"type":"text","value":".","position":{"start":{"line":1858,"column":165,"offset":60097},"end":{"line":1858,"column":166,"offset":60098}}}],"position":{"start":{"line":1858,"column":1,"offset":59933},"end":{"line":1858,"column":166,"offset":60098}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">10</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":1860,"column":1,"offset":60102},"end":{"line":1874,"column":4,"offset":60251}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The value to start with is ","position":{"start":{"line":1876,"column":1,"offset":60255},"end":{"line":1876,"column":28,"offset":60282}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1876,"column":28,"offset":60282},"end":{"line":1876,"column":32,"offset":60286}}},{"type":"text","value":". As we discussed earlier, the end value is exclusive. So to print from ","position":{"start":{"line":1876,"column":32,"offset":60286},"end":{"line":1876,"column":104,"offset":60358}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1876,"column":104,"offset":60358},"end":{"line":1876,"column":108,"offset":60362}}},{"type":"text","value":" to ","position":{"start":{"line":1876,"column":108,"offset":60362},"end":{"line":1876,"column":112,"offset":60366}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1876,"column":112,"offset":60366},"end":{"line":1876,"column":115,"offset":60369}}},{"type":"text","value":", we want to end one value which is ","position":{"start":{"line":1876,"column":115,"offset":60369},"end":{"line":1876,"column":151,"offset":60405}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":1876,"column":151,"offset":60405},"end":{"line":1876,"column":154,"offset":60408}}},{"type":"text","value":". ","position":{"start":{"line":1876,"column":154,"offset":60408},"end":{"line":1876,"column":156,"offset":60410}}},{"type":"raw","value":"<code class=\"language-text\">range(10, 0)</code>","position":{"start":{"line":1876,"column":156,"offset":60410},"end":{"line":1876,"column":170,"offset":60424}}},{"type":"text","value":" seems to be what we need.","position":{"start":{"line":1876,"column":170,"offset":60424},"end":{"line":1876,"column":196,"offset":60450}}}],"position":{"start":{"line":1876,"column":1,"offset":60255},"end":{"line":1876,"column":196,"offset":60450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Usually these step value is positive, but we need to go backwards from ","position":{"start":{"line":1878,"column":1,"offset":60454},"end":{"line":1878,"column":72,"offset":60525}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1878,"column":72,"offset":60525},"end":{"line":1878,"column":76,"offset":60529}}},{"type":"text","value":". Hence, we would give a step value of ","position":{"start":{"line":1878,"column":76,"offset":60529},"end":{"line":1878,"column":115,"offset":60568}}},{"type":"raw","value":"<code class=\"language-text\">-1</code>","position":{"start":{"line":1878,"column":115,"offset":60568},"end":{"line":1878,"column":119,"offset":60572}}},{"type":"text","value":".","position":{"start":{"line":1878,"column":119,"offset":60572},"end":{"line":1878,"column":120,"offset":60573}}}],"position":{"start":{"line":1878,"column":1,"offset":60454},"end":{"line":1878,"column":120,"offset":60573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 3","position":{"start":{"line":1880,"column":3,"offset":60579},"end":{"line":1880,"column":13,"offset":60589}}}],"position":{"start":{"line":1880,"column":1,"offset":60577},"end":{"line":1880,"column":15,"offset":60591}}}],"position":{"start":{"line":1880,"column":1,"offset":60577},"end":{"line":1880,"column":15,"offset":60591}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, let's print the first ","position":{"start":{"line":1882,"column":1,"offset":60595},"end":{"line":1882,"column":28,"offset":60622}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":1882,"column":28,"offset":60622},"end":{"line":1882,"column":32,"offset":60626}}},{"type":"text","value":" even numbers in reverse.","position":{"start":{"line":1882,"column":32,"offset":60626},"end":{"line":1882,"column":57,"offset":60651}}}],"position":{"start":{"line":1882,"column":1,"offset":60595},"end":{"line":1882,"column":57,"offset":60651}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">20</span>\n    <span class=\"token number\">18</span>\n    <span class=\"token number\">16</span>\n    <span class=\"token number\">14</span>\n    <span class=\"token number\">12</span>\n    <span class=\"token number\">10</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":1884,"column":1,"offset":60655},"end":{"line":1898,"column":4,"offset":60809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 4","position":{"start":{"line":1900,"column":3,"offset":60815},"end":{"line":1900,"column":13,"offset":60825}}}],"position":{"start":{"line":1900,"column":1,"offset":60813},"end":{"line":1900,"column":15,"offset":60827}}}],"position":{"start":{"line":1900,"column":1,"offset":60813},"end":{"line":1900,"column":15,"offset":60827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, we would want to print the squares of the first 10 numbers.","position":{"start":{"line":1902,"column":1,"offset":60831},"end":{"line":1902,"column":66,"offset":60896}}}],"position":{"start":{"line":1902,"column":1,"offset":60831},"end":{"line":1902,"column":66,"offset":60896}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">16</span>\n    <span class=\"token number\">25</span>\n    <span class=\"token number\">36</span>\n    <span class=\"token number\">49</span>\n    <span class=\"token number\">64</span>\n    <span class=\"token number\">81</span>\n    <span class=\"token number\">100</span></code></pre></div>","position":{"start":{"line":1904,"column":1,"offset":60900},"end":{"line":1918,"column":4,"offset":61059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 5","position":{"start":{"line":1920,"column":3,"offset":61065},"end":{"line":1920,"column":13,"offset":61075}}}],"position":{"start":{"line":1920,"column":1,"offset":61063},"end":{"line":1920,"column":15,"offset":61077}}}],"position":{"start":{"line":1920,"column":1,"offset":61063},"end":{"line":1920,"column":15,"offset":61077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's print the squares in the reverse order.","position":{"start":{"line":1922,"column":1,"offset":61081},"end":{"line":1922,"column":46,"offset":61126}}}],"position":{"start":{"line":1922,"column":1,"offset":61081},"end":{"line":1922,"column":46,"offset":61126}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">100</span>\n    <span class=\"token number\">81</span>\n    <span class=\"token number\">64</span>\n    <span class=\"token number\">49</span>\n    <span class=\"token number\">36</span>\n    <span class=\"token number\">25</span>\n    <span class=\"token number\">16</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":1924,"column":1,"offset":61130},"end":{"line":1938,"column":4,"offset":61290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 6","position":{"start":{"line":1940,"column":3,"offset":61296},"end":{"line":1940,"column":13,"offset":61306}}}],"position":{"start":{"line":1940,"column":1,"offset":61294},"end":{"line":1940,"column":15,"offset":61308}}}],"position":{"start":{"line":1940,"column":1,"offset":61294},"end":{"line":1940,"column":15,"offset":61308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Print the squares of the even numbers. How to do that?","position":{"start":{"line":1942,"column":1,"offset":61312},"end":{"line":1942,"column":55,"offset":61366}}}],"position":{"start":{"line":1942,"column":1,"offset":61312},"end":{"line":1942,"column":55,"offset":61366}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">100</span>\n    <span class=\"token number\">64</span>\n    <span class=\"token number\">36</span>\n    <span class=\"token number\">16</span>\n    <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":1944,"column":1,"offset":61370},"end":{"line":1953,"column":4,"offset":61492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The key part is using a step of ","position":{"start":{"line":1955,"column":1,"offset":61496},"end":{"line":1955,"column":33,"offset":61528}}},{"type":"raw","value":"<code class=\"language-text\">-2</code>","position":{"start":{"line":1955,"column":33,"offset":61528},"end":{"line":1955,"column":37,"offset":61532}}}],"position":{"start":{"line":1955,"column":1,"offset":61496},"end":{"line":1955,"column":37,"offset":61532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We leave it as an exercise for you, to print squares of odd numbers.","position":{"start":{"line":1957,"column":1,"offset":61536},"end":{"line":1957,"column":69,"offset":61604}}}],"position":{"start":{"line":1957,"column":1,"offset":61536},"end":{"line":1957,"column":69,"offset":61604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1959,"column":3,"offset":61610},"end":{"line":1959,"column":10,"offset":61617}}}],"position":{"start":{"line":1959,"column":1,"offset":61608},"end":{"line":1959,"column":12,"offset":61619}}}],"position":{"start":{"line":1959,"column":1,"offset":61608},"end":{"line":1959,"column":12,"offset":61619}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this video, we: ","position":{"start":{"line":1961,"column":1,"offset":61623},"end":{"line":1961,"column":20,"offset":61642}}},{"type":"text","value":"*","position":{"start":{"line":1961,"column":20,"offset":61642},"end":{"line":1961,"column":22,"offset":61644}}},{"type":"text","value":" Tried out a few exercises involving the for loop, by playing around with printing sequences of numbers.","position":{"start":{"line":1961,"column":22,"offset":61644},"end":{"line":1961,"column":126,"offset":61748}}}],"position":{"start":{"line":1961,"column":1,"offset":61623},"end":{"line":1961,"column":126,"offset":61748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Used the for loop to simplify the solution to the ","position":{"start":{"line":1963,"column":5,"offset":61756},"end":{"line":1963,"column":55,"offset":61806}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"PMT-Challenge","position":{"start":{"line":1963,"column":56,"offset":61807},"end":{"line":1963,"column":69,"offset":61820}}}],"position":{"start":{"line":1963,"column":55,"offset":61806},"end":{"line":1963,"column":70,"offset":61821}}},{"type":"text","value":" problem.","position":{"start":{"line":1963,"column":70,"offset":61821},"end":{"line":1963,"column":79,"offset":61830}}}],"position":{"start":{"line":1963,"column":1,"offset":61752},"end":{"line":1963,"column":79,"offset":61830}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1963,"column":1,"offset":61752},"end":{"line":1963,"column":79,"offset":61830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 17: Review: The Basics Of Python","position":{"start":{"line":1965,"column":3,"offset":61836},"end":{"line":1965,"column":40,"offset":61873}}}],"position":{"start":{"line":1965,"column":1,"offset":61834},"end":{"line":1965,"column":42,"offset":61875}}}],"position":{"start":{"line":1965,"column":1,"offset":61834},"end":{"line":1965,"column":42,"offset":61875}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It must have been a roller-coaster ride to solve the multiplication table challenge so far. If you're new to programming, there are a wide range of topics and concepts, that you would have learned during this small journey.","position":{"start":{"line":1967,"column":1,"offset":61879},"end":{"line":1967,"column":224,"offset":62102}}}],"position":{"start":{"line":1967,"column":1,"offset":61879},"end":{"line":1967,"column":224,"offset":62102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's quickly revise the important concepts we have learned during this small journey.","position":{"start":{"line":1969,"column":1,"offset":62106},"end":{"line":1969,"column":87,"offset":62192}}}],"position":{"start":{"line":1969,"column":1,"offset":62106},"end":{"line":1969,"column":87,"offset":62192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":1971,"column":5,"offset":62200},"end":{"line":1971,"column":8,"offset":62203}}},{"type":"text","value":", ","position":{"start":{"line":1971,"column":8,"offset":62203},"end":{"line":1971,"column":10,"offset":62205}}},{"type":"raw","value":"<code class=\"language-text\">11</code>","position":{"start":{"line":1971,"column":10,"offset":62205},"end":{"line":1971,"column":14,"offset":62209}}},{"type":"text","value":", ","position":{"start":{"line":1971,"column":14,"offset":62209},"end":{"line":1971,"column":16,"offset":62211}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":1971,"column":16,"offset":62211},"end":{"line":1971,"column":19,"offset":62214}}},{"type":"text","value":", … are all called literals because these are constant values. Their values don't really change. ","position":{"start":{"line":1971,"column":19,"offset":62214},"end":{"line":1971,"column":116,"offset":62311}}},{"type":"text","value":"_","position":{"start":{"line":1971,"column":116,"offset":62311},"end":{"line":1971,"column":118,"offset":62313}}},{"type":"text","value":"Consider ","position":{"start":{"line":1971,"column":118,"offset":62313},"end":{"line":1971,"column":127,"offset":62322}}},{"type":"raw","value":"<code class=\"language-text\">5 _4_ 50`. This is an expression. `_`is an operator, and`5`, `4`and`50</code>","position":{"start":{"line":1971,"column":127,"offset":62322},"end":{"line":1971,"column":203,"offset":62398}}},{"type":"text","value":" are operands.","position":{"start":{"line":1971,"column":203,"offset":62398},"end":{"line":1971,"column":217,"offset":62412}}}],"position":{"start":{"line":1971,"column":1,"offset":62196},"end":{"line":1971,"column":217,"offset":62412}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The name ","position":{"start":{"line":1972,"column":5,"offset":62418},"end":{"line":1972,"column":14,"offset":62427}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":1972,"column":14,"offset":62427},"end":{"line":1972,"column":17,"offset":62430}}},{"type":"text","value":" in ","position":{"start":{"line":1972,"column":17,"offset":62430},"end":{"line":1972,"column":21,"offset":62434}}},{"type":"raw","value":"<code class=\"language-text\">i = 1</code>","position":{"start":{"line":1972,"column":21,"offset":62434},"end":{"line":1972,"column":28,"offset":62441}}},{"type":"text","value":", is called a variable. It can refer to different values, at different points in time.","position":{"start":{"line":1972,"column":28,"offset":62441},"end":{"line":1972,"column":114,"offset":62527}}}],"position":{"start":{"line":1972,"column":1,"offset":62414},"end":{"line":1972,"column":114,"offset":62527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":1973,"column":5,"offset":62533},"end":{"line":1973,"column":14,"offset":62542}}},{"type":"text","value":" and ","position":{"start":{"line":1973,"column":14,"offset":62542},"end":{"line":1973,"column":19,"offset":62547}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1973,"column":19,"offset":62547},"end":{"line":1973,"column":28,"offset":62556}}},{"type":"text","value":" are in-built Python functions.","position":{"start":{"line":1973,"column":28,"offset":62556},"end":{"line":1973,"column":59,"offset":62587}}}],"position":{"start":{"line":1973,"column":1,"offset":62529},"end":{"line":1973,"column":59,"offset":62587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Every complete line of code is called statement. The specific statement ","position":{"start":{"line":1974,"column":5,"offset":62593},"end":{"line":1974,"column":77,"offset":62665}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":1974,"column":77,"offset":62665},"end":{"line":1974,"column":86,"offset":62674}}},{"type":"text","value":", is invoking a method. The other statement which we looked at earlier, was an assignment statement. ","position":{"start":{"line":1974,"column":86,"offset":62674},"end":{"line":1974,"column":187,"offset":62775}}},{"type":"raw","value":"<code class=\"language-text\">index = index + 1</code>","position":{"start":{"line":1974,"column":187,"offset":62775},"end":{"line":1974,"column":206,"offset":62794}}},{"type":"text","value":" would evaluate ","position":{"start":{"line":1974,"column":206,"offset":62794},"end":{"line":1974,"column":222,"offset":62810}}},{"type":"raw","value":"<code class=\"language-text\">index + 1</code>","position":{"start":{"line":1974,"column":222,"offset":62810},"end":{"line":1974,"column":233,"offset":62821}}},{"type":"text","value":", and have the ","position":{"start":{"line":1974,"column":233,"offset":62821},"end":{"line":1974,"column":248,"offset":62836}}},{"type":"raw","value":"<code class=\"language-text\">index</code>","position":{"start":{"line":1974,"column":248,"offset":62836},"end":{"line":1974,"column":255,"offset":62843}}},{"type":"text","value":" variable refer to that value.","position":{"start":{"line":1974,"column":255,"offset":62843},"end":{"line":1974,"column":285,"offset":62873}}}],"position":{"start":{"line":1974,"column":1,"offset":62589},"end":{"line":1974,"column":285,"offset":62873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The syntax of the ","position":{"start":{"line":1975,"column":5,"offset":62879},"end":{"line":1975,"column":23,"offset":62897}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1975,"column":23,"offset":62897},"end":{"line":1975,"column":28,"offset":62902}}},{"type":"text","value":" loop was very simple. ","position":{"start":{"line":1975,"column":28,"offset":62902},"end":{"line":1975,"column":51,"offset":62925}}},{"type":"raw","value":"<code class=\"language-text\">for var in range(1, 10) : ...</code>","position":{"start":{"line":1975,"column":51,"offset":62925},"end":{"line":1975,"column":82,"offset":62956}}},{"type":"text","value":", followed by statements you would want to execute in a loop, with indentation. For the sake of indentation we left four ","position":{"start":{"line":1975,"column":82,"offset":62956},"end":{"line":1975,"column":203,"offset":63077}}},{"type":"raw","value":"<code class=\"language-text\">&lt;SPACE></code>","position":{"start":{"line":1975,"column":203,"offset":63077},"end":{"line":1975,"column":212,"offset":63086}}},{"type":"text","value":"s in front of each statement inside the ","position":{"start":{"line":1975,"column":212,"offset":63086},"end":{"line":1975,"column":252,"offset":63126}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":1975,"column":252,"offset":63126},"end":{"line":1975,"column":257,"offset":63131}}},{"type":"text","value":" loop.","position":{"start":{"line":1975,"column":257,"offset":63131},"end":{"line":1975,"column":263,"offset":63137}}}],"position":{"start":{"line":1975,"column":1,"offset":62875},"end":{"line":1975,"column":263,"offset":63137}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1971,"column":1,"offset":62196},"end":{"line":1975,"column":263,"offset":63137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So that, in a nutshell, is what we have learned over the course of our first section.","position":{"start":{"line":1977,"column":1,"offset":63141},"end":{"line":1977,"column":86,"offset":63226}}}],"position":{"start":{"line":1977,"column":1,"offset":63141},"end":{"line":1977,"column":86,"offset":63226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Chapter 03 - Introducing Methods","position":{"start":{"line":1979,"column":6,"offset":63235},"end":{"line":1979,"column":38,"offset":63267}}}],"position":{"start":{"line":1979,"column":1,"offset":63230},"end":{"line":1979,"column":38,"offset":63267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the last section, we introduced you to the basics of python. We learned those concepts by applying them to solve the ","position":{"start":{"line":1981,"column":1,"offset":63271},"end":{"line":1981,"column":121,"offset":63391}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"PMT-Challenge","position":{"start":{"line":1981,"column":122,"offset":63392},"end":{"line":1981,"column":135,"offset":63405}}}],"position":{"start":{"line":1981,"column":121,"offset":63391},"end":{"line":1981,"column":136,"offset":63406}}},{"type":"text","value":" problem. The code below is what we ended up with as we solved that chellenge.","position":{"start":{"line":1981,"column":136,"offset":63406},"end":{"line":1981,"column":214,"offset":63484}}}],"position":{"start":{"line":1981,"column":1,"offset":63271},"end":{"line":1981,"column":214,"offset":63484}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01: Current Solution To PMT-Challenge","position":{"start":{"line":1983,"column":3,"offset":63490},"end":{"line":1983,"column":48,"offset":63535}}}],"position":{"start":{"line":1983,"column":1,"offset":63488},"end":{"line":1983,"column":50,"offset":63537}}}],"position":{"start":{"line":1983,"column":1,"offset":63488},"end":{"line":1983,"column":50,"offset":63537}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"8 * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">8</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1985,"column":1,"offset":63541},"end":{"line":1988,"column":4,"offset":63626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we wanted to change the code to print the ","position":{"start":{"line":1990,"column":1,"offset":63630},"end":{"line":1990,"column":46,"offset":63675}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":1990,"column":46,"offset":63675},"end":{"line":1990,"column":49,"offset":63678}}},{"type":"text","value":" table, we need to change the value ","position":{"start":{"line":1990,"column":49,"offset":63678},"end":{"line":1990,"column":85,"offset":63714}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":1990,"column":85,"offset":63714},"end":{"line":1990,"column":88,"offset":63717}}},{"type":"text","value":" used in the for loop, to ","position":{"start":{"line":1990,"column":88,"offset":63717},"end":{"line":1990,"column":114,"offset":63743}}},{"type":"raw","value":"<code class=\"language-text\">8</code>","position":{"start":{"line":1990,"column":114,"offset":63743},"end":{"line":1990,"column":117,"offset":63746}}},{"type":"text","value":". It's simple, but still not as friendly as you would like.","position":{"start":{"line":1990,"column":117,"offset":63746},"end":{"line":1990,"column":176,"offset":63805}}}],"position":{"start":{"line":1990,"column":1,"offset":63630},"end":{"line":1990,"column":176,"offset":63805}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"7 * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">7</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":1992,"column":1,"offset":63809},"end":{"line":1995,"column":4,"offset":63894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To print a ","position":{"start":{"line":1997,"column":1,"offset":63898},"end":{"line":1997,"column":12,"offset":63909}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":1997,"column":12,"offset":63909},"end":{"line":1997,"column":15,"offset":63912}}},{"type":"text","value":" table, it would be awesome if could say ","position":{"start":{"line":1997,"column":15,"offset":63912},"end":{"line":1997,"column":56,"offset":63953}}},{"type":"raw","value":"<code class=\"language-text\">print_multiplication_table</code>","position":{"start":{"line":1997,"column":56,"offset":63953},"end":{"line":1997,"column":84,"offset":63981}}},{"type":"text","value":", and give a value of 7 beside it, and it would do the rest:","position":{"start":{"line":1997,"column":84,"offset":63981},"end":{"line":1997,"column":144,"offset":64041}}}],"position":{"start":{"line":1997,"column":1,"offset":63898},"end":{"line":1997,"column":144,"offset":64041}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_multiplication_table<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'print_multiplication_table'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_multiplication_table<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'print_multiplication_table'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined</code></pre></div>","position":{"start":{"line":1999,"column":1,"offset":64045},"end":{"line":2008,"column":4,"offset":64433}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Similarly, ","position":{"start":{"line":2010,"column":1,"offset":64437},"end":{"line":2010,"column":12,"offset":64448}}},{"type":"raw","value":"<code class=\"language-text\">print_multiplication_table(8)</code>","position":{"start":{"line":2010,"column":12,"offset":64448},"end":{"line":2010,"column":43,"offset":64479}}},{"type":"text","value":", could print the multiplication table for ","position":{"start":{"line":2010,"column":43,"offset":64479},"end":{"line":2010,"column":86,"offset":64522}}},{"type":"raw","value":"<code class=\"language-text\">8</code>","position":{"start":{"line":2010,"column":86,"offset":64522},"end":{"line":2010,"column":89,"offset":64525}}},{"type":"text","value":"!","position":{"start":{"line":2010,"column":89,"offset":64525},"end":{"line":2010,"column":90,"offset":64526}}}],"position":{"start":{"line":2010,"column":1,"offset":64437},"end":{"line":2010,"column":90,"offset":64526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To be able to do this, we need to create a ","position":{"start":{"line":2012,"column":1,"offset":64530},"end":{"line":2012,"column":44,"offset":64573}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"method","position":{"start":{"line":2012,"column":46,"offset":64575},"end":{"line":2012,"column":52,"offset":64581}}}],"position":{"start":{"line":2012,"column":44,"offset":64573},"end":{"line":2012,"column":54,"offset":64583}}},{"type":"text","value":", or a ","position":{"start":{"line":2012,"column":54,"offset":64583},"end":{"line":2012,"column":61,"offset":64590}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"function","position":{"start":{"line":2012,"column":63,"offset":64592},"end":{"line":2012,"column":71,"offset":64600}}}],"position":{"start":{"line":2012,"column":61,"offset":64590},"end":{"line":2012,"column":73,"offset":64602}}},{"type":"text","value":". Creating a method makes the code ","position":{"start":{"line":2012,"column":73,"offset":64602},"end":{"line":2012,"column":108,"offset":64637}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"reusable","position":{"start":{"line":2012,"column":109,"offset":64638},"end":{"line":2012,"column":117,"offset":64646}}}],"position":{"start":{"line":2012,"column":108,"offset":64637},"end":{"line":2012,"column":118,"offset":64647}}},{"type":"text","value":", and we can invoke that method very easily by passing ","position":{"start":{"line":2012,"column":118,"offset":64647},"end":{"line":2012,"column":173,"offset":64702}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"arguments","position":{"start":{"line":2012,"column":174,"offset":64703},"end":{"line":2012,"column":183,"offset":64712}}}],"position":{"start":{"line":2012,"column":173,"offset":64702},"end":{"line":2012,"column":184,"offset":64713}}},{"type":"text","value":".","position":{"start":{"line":2012,"column":184,"offset":64713},"end":{"line":2012,"column":185,"offset":64714}}}],"position":{"start":{"line":2012,"column":1,"offset":64530},"end":{"line":2012,"column":185,"offset":64714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this section, we take an in-depth look at methods.","position":{"start":{"line":2014,"column":1,"offset":64718},"end":{"line":2014,"column":54,"offset":64771}}}],"position":{"start":{"line":2014,"column":1,"offset":64718},"end":{"line":2014,"column":54,"offset":64771}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 01: Defining Your First Method","position":{"start":{"line":2016,"column":3,"offset":64777},"end":{"line":2016,"column":38,"offset":64812}}}],"position":{"start":{"line":2016,"column":1,"offset":64775},"end":{"line":2016,"column":40,"offset":64814}}}],"position":{"start":{"line":2016,"column":1,"offset":64775},"end":{"line":2016,"column":40,"offset":64814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Methods are very important building blocks in Python programming. In this step, we will create a simple method that prints ","position":{"start":{"line":2018,"column":1,"offset":64818},"end":{"line":2018,"column":124,"offset":64941}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2018,"column":124,"offset":64941},"end":{"line":2018,"column":139,"offset":64956}}},{"type":"text","value":", twice.","position":{"start":{"line":2018,"column":139,"offset":64956},"end":{"line":2018,"column":147,"offset":64964}}}],"position":{"start":{"line":2018,"column":1,"offset":64818},"end":{"line":2018,"column":147,"offset":64964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":2020,"column":3,"offset":64970},"end":{"line":2020,"column":14,"offset":64981}}}],"position":{"start":{"line":2020,"column":1,"offset":64968},"end":{"line":2020,"column":16,"offset":64983}}}],"position":{"start":{"line":2020,"column":1,"offset":64968},"end":{"line":2020,"column":16,"offset":64983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we talk about a method, we need to give it a name. We are already using an in-built Python method here, which is ","position":{"start":{"line":2022,"column":1,"offset":64987},"end":{"line":2022,"column":119,"offset":65105}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":2022,"column":119,"offset":65105},"end":{"line":2022,"column":128,"offset":65114}}},{"type":"text","value":".","position":{"start":{"line":2022,"column":128,"offset":65114},"end":{"line":2022,"column":129,"offset":65115}}}],"position":{"start":{"line":2022,"column":1,"offset":64987},"end":{"line":2022,"column":129,"offset":65115}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    Hello World\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    Hello World</code></pre></div>","position":{"start":{"line":2024,"column":1,"offset":65119},"end":{"line":2029,"column":4,"offset":65227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Similar to that, we need to give a name to our body of code. Let's say the name is ","position":{"start":{"line":2031,"column":1,"offset":65231},"end":{"line":2031,"column":84,"offset":65314}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world_twice</code>","position":{"start":{"line":2031,"column":84,"offset":65314},"end":{"line":2031,"column":109,"offset":65339}}},{"type":"text","value":".","position":{"start":{"line":2031,"column":109,"offset":65339},"end":{"line":2031,"column":110,"offset":65340}}}],"position":{"start":{"line":2031,"column":1,"offset":65231},"end":{"line":2031,"column":110,"offset":65340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax to create a method in Python is straightforward:","position":{"start":{"line":2033,"column":1,"offset":65344},"end":{"line":2033,"column":60,"offset":65403}}}],"position":{"start":{"line":2033,"column":1,"offset":65344},"end":{"line":2033,"column":60,"offset":65403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"At the start, use the keyword ","position":{"start":{"line":2035,"column":5,"offset":65411},"end":{"line":2035,"column":35,"offset":65441}}},{"type":"raw","value":"<code class=\"language-text\">def</code>","position":{"start":{"line":2035,"column":35,"offset":65441},"end":{"line":2035,"column":40,"offset":65446}}},{"type":"text","value":" followed by a space.","position":{"start":{"line":2035,"column":40,"offset":65446},"end":{"line":2035,"column":61,"offset":65467}}}],"position":{"start":{"line":2035,"column":1,"offset":65407},"end":{"line":2035,"column":61,"offset":65467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Followed by name of the method - ","position":{"start":{"line":2036,"column":5,"offset":65473},"end":{"line":2036,"column":38,"offset":65506}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world_twice</code>","position":{"start":{"line":2036,"column":38,"offset":65506},"end":{"line":2036,"column":63,"offset":65531}}},{"type":"text","value":".","position":{"start":{"line":2036,"column":63,"offset":65531},"end":{"line":2036,"column":64,"offset":65532}}}],"position":{"start":{"line":2036,"column":1,"offset":65469},"end":{"line":2036,"column":64,"offset":65532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Add a pair of parenthesis: ","position":{"start":{"line":2037,"column":5,"offset":65538},"end":{"line":2037,"column":32,"offset":65565}}},{"type":"raw","value":"<code class=\"language-text\">()</code>","position":{"start":{"line":2037,"column":32,"offset":65565},"end":{"line":2037,"column":36,"offset":65569}}},{"type":"text","value":".","position":{"start":{"line":2037,"column":36,"offset":65569},"end":{"line":2037,"column":37,"offset":65570}}}],"position":{"start":{"line":2037,"column":1,"offset":65534},"end":{"line":2037,"column":37,"offset":65570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"This is followed by a colon ","position":{"start":{"line":2038,"column":5,"offset":65576},"end":{"line":2038,"column":33,"offset":65604}}},{"type":"raw","value":"<code class=\"language-text\">:</code>","position":{"start":{"line":2038,"column":33,"offset":65604},"end":{"line":2038,"column":36,"offset":65607}}},{"type":"text","value":" ","position":{"start":{"line":2038,"column":36,"offset":65607},"end":{"line":2038,"column":37,"offset":65608}}},{"type":"text","value":"(","position":{"start":{"line":2038,"column":37,"offset":65608},"end":{"line":2038,"column":39,"offset":65610}}},{"type":"text","value":"similar to what we used in a ","position":{"start":{"line":2038,"column":39,"offset":65610},"end":{"line":2038,"column":68,"offset":65639}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":2038,"column":68,"offset":65639},"end":{"line":2038,"column":73,"offset":65644}}},{"type":"text","value":" loop","position":{"start":{"line":2038,"column":73,"offset":65644},"end":{"line":2038,"column":78,"offset":65649}}},{"type":"text","value":")","position":{"start":{"line":2038,"column":78,"offset":65649},"end":{"line":2038,"column":80,"offset":65651}}},{"type":"text","value":".","position":{"start":{"line":2038,"column":80,"offset":65651},"end":{"line":2038,"column":81,"offset":65652}}}],"position":{"start":{"line":2038,"column":1,"offset":65572},"end":{"line":2038,"column":81,"offset":65652}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2035,"column":1,"offset":65407},"end":{"line":2038,"column":81,"offset":65652}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">   <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_hello_world_twice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":2040,"column":1,"offset":65656},"end":{"line":2045,"column":5,"offset":65789}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All statements in a method should be indented. The two ","position":{"start":{"line":2047,"column":1,"offset":65793},"end":{"line":2047,"column":56,"offset":65848}}},{"type":"raw","value":"<code class=\"language-text\">print(\"Hello World\")</code>","position":{"start":{"line":2047,"column":56,"offset":65848},"end":{"line":2047,"column":78,"offset":65870}}},{"type":"text","value":" are indented. So, they are part of the method body.","position":{"start":{"line":2047,"column":78,"offset":65870},"end":{"line":2047,"column":130,"offset":65922}}}],"position":{"start":{"line":2047,"column":1,"offset":65793},"end":{"line":2047,"column":130,"offset":65922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print_hello_world_twice()</code>","position":{"start":{"line":2049,"column":1,"offset":65926},"end":{"line":2049,"column":28,"offset":65953}}},{"type":"text","value":" defines a method, and it has certain code inside its body.","position":{"start":{"line":2049,"column":28,"offset":65953},"end":{"line":2049,"column":87,"offset":66012}}}],"position":{"start":{"line":2049,"column":1,"offset":65926},"end":{"line":2049,"column":87,"offset":66012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do we call this method? Is it sufficient to say ","position":{"start":{"line":2051,"column":1,"offset":66016},"end":{"line":2051,"column":53,"offset":66068}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world_twice</code>","position":{"start":{"line":2051,"column":53,"offset":66068},"end":{"line":2051,"column":78,"offset":66093}}},{"type":"text","value":"?","position":{"start":{"line":2051,"column":78,"offset":66093},"end":{"line":2051,"column":79,"offset":66094}}}],"position":{"start":{"line":2051,"column":1,"offset":66016},"end":{"line":2051,"column":79,"offset":66094}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world_twice\n    <span class=\"token operator\">&lt;</span>function print_hello_world_twice at <span class=\"token number\">0x10a71ef28</span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":2053,"column":1,"offset":66098},"end":{"line":2056,"column":4,"offset":66200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python Shell says, there's a function defined with that specific name.","position":{"start":{"line":2058,"column":1,"offset":66204},"end":{"line":2058,"column":71,"offset":66274}}}],"position":{"start":{"line":2058,"column":1,"offset":66204},"end":{"line":2058,"column":71,"offset":66274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do we execute a method? Very simple! Add a pair of parentheses to the name, ","position":{"start":{"line":2060,"column":1,"offset":66278},"end":{"line":2060,"column":81,"offset":66358}}},{"type":"raw","value":"<code class=\"language-text\">()</code>","position":{"start":{"line":2060,"column":81,"offset":66358},"end":{"line":2060,"column":85,"offset":66362}}},{"type":"text","value":"!","position":{"start":{"line":2060,"column":85,"offset":66362},"end":{"line":2060,"column":86,"offset":66363}}}],"position":{"start":{"line":2060,"column":1,"offset":66278},"end":{"line":2060,"column":86,"offset":66363}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world_twice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world_twice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2062,"column":1,"offset":66367},"end":{"line":2069,"column":4,"offset":66519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, we are able to run the method.","position":{"start":{"line":2071,"column":1,"offset":66523},"end":{"line":2071,"column":36,"offset":66558}}}],"position":{"start":{"line":2071,"column":1,"offset":66523},"end":{"line":2071,"column":36,"offset":66558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2073,"column":3,"offset":66564},"end":{"line":2073,"column":10,"offset":66571}}}],"position":{"start":{"line":2073,"column":1,"offset":66562},"end":{"line":2073,"column":12,"offset":66573}}}],"position":{"start":{"line":2073,"column":1,"offset":66562},"end":{"line":2073,"column":12,"offset":66573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2075,"column":1,"offset":66577},"end":{"line":2075,"column":18,"offset":66594}}}],"position":{"start":{"line":2075,"column":1,"offset":66577},"end":{"line":2075,"column":18,"offset":66594}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned we can define our own methods in the code we write","position":{"start":{"line":2077,"column":5,"offset":66602},"end":{"line":2077,"column":63,"offset":66660}}}],"position":{"start":{"line":2077,"column":1,"offset":66598},"end":{"line":2077,"column":63,"offset":66660}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood how to define a method, and all its syntax elements","position":{"start":{"line":2078,"column":5,"offset":66666},"end":{"line":2078,"column":67,"offset":66728}}}],"position":{"start":{"line":2078,"column":1,"offset":66662},"end":{"line":2078,"column":67,"offset":66728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Saw how we can invoke a method we write","position":{"start":{"line":2079,"column":5,"offset":66734},"end":{"line":2079,"column":44,"offset":66773}}}],"position":{"start":{"line":2079,"column":1,"offset":66730},"end":{"line":2079,"column":44,"offset":66773}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2077,"column":1,"offset":66598},"end":{"line":2079,"column":44,"offset":66773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 02: Programming Exercise PE-MD-01","position":{"start":{"line":2081,"column":3,"offset":66779},"end":{"line":2081,"column":41,"offset":66817}}}],"position":{"start":{"line":2081,"column":1,"offset":66777},"end":{"line":2081,"column":43,"offset":66819}}}],"position":{"start":{"line":2081,"column":1,"offset":66777},"end":{"line":2081,"column":43,"offset":66819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We will now leave you with two exercises, based on what we have learned about methods so far.","position":{"start":{"line":2083,"column":1,"offset":66823},"end":{"line":2083,"column":94,"offset":66916}}}],"position":{"start":{"line":2083,"column":1,"offset":66823},"end":{"line":2083,"column":94,"offset":66916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":2085,"column":3,"offset":66922},"end":{"line":2085,"column":12,"offset":66931}}}],"position":{"start":{"line":2085,"column":1,"offset":66920},"end":{"line":2085,"column":14,"offset":66933}}}],"position":{"start":{"line":2085,"column":1,"offset":66920},"end":{"line":2085,"column":14,"offset":66933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write a method called ","position":{"start":{"line":2087,"column":4,"offset":66940},"end":{"line":2087,"column":26,"offset":66962}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world_thrice()</code>","position":{"start":{"line":2087,"column":26,"offset":66962},"end":{"line":2087,"column":54,"offset":66990}}},{"type":"text","value":". It should print ","position":{"start":{"line":2087,"column":54,"offset":66990},"end":{"line":2087,"column":72,"offset":67008}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2087,"column":72,"offset":67008},"end":{"line":2087,"column":87,"offset":67023}}},{"type":"text","value":" thrice to the output. Define this method, and also invoke it.","position":{"start":{"line":2087,"column":87,"offset":67023},"end":{"line":2087,"column":149,"offset":67085}}}],"position":{"start":{"line":2087,"column":1,"offset":66937},"end":{"line":2087,"column":149,"offset":67085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write and execute a method, that prints four statements:","position":{"start":{"line":2088,"column":4,"offset":67090},"end":{"line":2088,"column":60,"offset":67146}}}],"position":{"start":{"line":2088,"column":4,"offset":67090},"end":{"line":2088,"column":60,"offset":67146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\"I have created my first variable.\"","position":{"start":{"line":2089,"column":8,"offset":67155},"end":{"line":2089,"column":43,"offset":67190}}}],"position":{"start":{"line":2089,"column":5,"offset":67152},"end":{"line":2089,"column":43,"offset":67190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\"I've created in my first loop.\"","position":{"start":{"line":2090,"column":8,"offset":67199},"end":{"line":2090,"column":40,"offset":67231}}}],"position":{"start":{"line":2090,"column":5,"offset":67196},"end":{"line":2090,"column":40,"offset":67231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\"I've created my first method.\"","position":{"start":{"line":2091,"column":8,"offset":67240},"end":{"line":2091,"column":39,"offset":67271}}}],"position":{"start":{"line":2091,"column":5,"offset":67237},"end":{"line":2091,"column":39,"offset":67271}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\"I am excited to learn Python.\" You need to print these four statements on four consecutive lines.","position":{"start":{"line":2092,"column":8,"offset":67280},"end":{"line":2092,"column":106,"offset":67378}}}],"position":{"start":{"line":2092,"column":5,"offset":67277},"end":{"line":2092,"column":106,"offset":67378}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2089,"column":5,"offset":67152},"end":{"line":2092,"column":106,"offset":67378}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2088,"column":1,"offset":67087},"end":{"line":2092,"column":106,"offset":67378}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2087,"column":1,"offset":66937},"end":{"line":2092,"column":106,"offset":67378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solutions","position":{"start":{"line":2094,"column":3,"offset":67384},"end":{"line":2094,"column":12,"offset":67393}}}],"position":{"start":{"line":2094,"column":1,"offset":67382},"end":{"line":2094,"column":14,"offset":67395}}}],"position":{"start":{"line":2094,"column":1,"offset":67382},"end":{"line":2094,"column":14,"offset":67395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 1","position":{"start":{"line":2096,"column":3,"offset":67401},"end":{"line":2096,"column":13,"offset":67411}}}],"position":{"start":{"line":2096,"column":1,"offset":67399},"end":{"line":2096,"column":15,"offset":67413}}}],"position":{"start":{"line":2096,"column":1,"offset":67399},"end":{"line":2096,"column":15,"offset":67413}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_hello_world_thrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world_thrice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2098,"column":1,"offset":67417},"end":{"line":2108,"column":4,"offset":67670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 2","position":{"start":{"line":2110,"column":3,"offset":67676},"end":{"line":2110,"column":13,"offset":67686}}}],"position":{"start":{"line":2110,"column":1,"offset":67674},"end":{"line":2110,"column":15,"offset":67688}}}],"position":{"start":{"line":2110,"column":1,"offset":67674},"end":{"line":2110,"column":15,"offset":67688}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_your_progress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 1\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 2\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 3\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 4\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_your_progress<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Statement <span class=\"token number\">1</span>\n    Statement <span class=\"token number\">2</span>\n    Statement <span class=\"token number\">3</span>\n    Statement <span class=\"token number\">4</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">print_your_progress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 1\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 2\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 3\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 4\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2112,"column":1,"offset":67692},"end":{"line":2130,"column":4,"offset":68140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For convenience, we have changed the exact text we need to print. Call this method with the syntax ","position":{"start":{"line":2132,"column":1,"offset":68144},"end":{"line":2132,"column":100,"offset":68243}}},{"type":"raw","value":"<code class=\"language-text\">print_your_progress()</code>","position":{"start":{"line":2132,"column":100,"offset":68243},"end":{"line":2132,"column":123,"offset":68266}}},{"type":"text","value":", and you're able to execute its code.","position":{"start":{"line":2132,"column":123,"offset":68266},"end":{"line":2132,"column":161,"offset":68304}}}],"position":{"start":{"line":2132,"column":1,"offset":68144},"end":{"line":2132,"column":161,"offset":68304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now try another exercise. We want to print ","position":{"start":{"line":2134,"column":1,"offset":68308},"end":{"line":2134,"column":44,"offset":68351}}},{"type":"raw","value":"<code class=\"language-text\">\"Statement 1\"</code>","position":{"start":{"line":2134,"column":44,"offset":68351},"end":{"line":2134,"column":59,"offset":68366}}},{"type":"text","value":", ","position":{"start":{"line":2134,"column":59,"offset":68366},"end":{"line":2134,"column":61,"offset":68368}}},{"type":"raw","value":"<code class=\"language-text\">\"Statement 2\"</code>","position":{"start":{"line":2134,"column":61,"offset":68368},"end":{"line":2134,"column":76,"offset":68383}}},{"type":"text","value":", ","position":{"start":{"line":2134,"column":76,"offset":68383},"end":{"line":2134,"column":78,"offset":68385}}},{"type":"raw","value":"<code class=\"language-text\">\"Statement 3\"</code>","position":{"start":{"line":2134,"column":78,"offset":68385},"end":{"line":2134,"column":93,"offset":68400}}},{"type":"text","value":" and ","position":{"start":{"line":2134,"column":93,"offset":68400},"end":{"line":2134,"column":98,"offset":68405}}},{"type":"raw","value":"<code class=\"language-text\">\"Statement 4\"</code>","position":{"start":{"line":2134,"column":98,"offset":68405},"end":{"line":2134,"column":113,"offset":68420}}},{"type":"text","value":" on different lines, using just one print statement. How can you do that?","position":{"start":{"line":2134,"column":113,"offset":68420},"end":{"line":2134,"column":186,"offset":68493}}}],"position":{"start":{"line":2134,"column":1,"offset":68308},"end":{"line":2134,"column":186,"offset":68493}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_your_progress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Statement 1\\nStatement 2\\nStatement 3\\nStatement 4\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_your_progress<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Statement <span class=\"token number\">1</span>\n    Statement <span class=\"token number\">2</span>\n    Statement <span class=\"token number\">3</span>\n    Statement <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":2136,"column":1,"offset":68497},"end":{"line":2145,"column":4,"offset":68728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We are using the newline character ","position":{"start":{"line":2147,"column":1,"offset":68732},"end":{"line":2147,"column":36,"offset":68767}}},{"type":"raw","value":"<code class=\"language-text\">\\n</code>","position":{"start":{"line":2147,"column":36,"offset":68767},"end":{"line":2147,"column":40,"offset":68771}}},{"type":"text","value":".","position":{"start":{"line":2147,"column":40,"offset":68771},"end":{"line":2147,"column":41,"offset":68772}}}],"position":{"start":{"line":2147,"column":1,"offset":68732},"end":{"line":2147,"column":41,"offset":68772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at the difference between defining and executing a method.","position":{"start":{"line":2149,"column":1,"offset":68776},"end":{"line":2149,"column":70,"offset":68845}}}],"position":{"start":{"line":2149,"column":1,"offset":68776},"end":{"line":2149,"column":70,"offset":68845}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we are writing a method definition, we are writing the code as part of its body. It has a specific syntax, and starts with the ","position":{"start":{"line":2151,"column":1,"offset":68849},"end":{"line":2151,"column":133,"offset":68981}}},{"type":"raw","value":"<code class=\"language-text\">def</code>","position":{"start":{"line":2151,"column":133,"offset":68981},"end":{"line":2151,"column":138,"offset":68986}}},{"type":"text","value":" keyword.","position":{"start":{"line":2151,"column":138,"offset":68986},"end":{"line":2151,"column":147,"offset":68995}}}],"position":{"start":{"line":2151,"column":1,"offset":68849},"end":{"line":2151,"column":147,"offset":68995}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A definition by itself cannot cause the code in its body to be executed.","position":{"start":{"line":2153,"column":1,"offset":68999},"end":{"line":2153,"column":73,"offset":69071}}}],"position":{"start":{"line":2153,"column":1,"offset":68999},"end":{"line":2153,"column":73,"offset":69071}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print_your_progress()</code>","position":{"start":{"line":2155,"column":1,"offset":69075},"end":{"line":2155,"column":24,"offset":69098}}},{"type":"text","value":" represents a method call. The code inside the method is executed.","position":{"start":{"line":2155,"column":24,"offset":69098},"end":{"line":2155,"column":90,"offset":69164}}}],"position":{"start":{"line":2155,"column":1,"offset":69075},"end":{"line":2155,"column":90,"offset":69164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2157,"column":3,"offset":69170},"end":{"line":2157,"column":10,"offset":69177}}}],"position":{"start":{"line":2157,"column":1,"offset":69168},"end":{"line":2157,"column":12,"offset":69179}}}],"position":{"start":{"line":2157,"column":1,"offset":69168},"end":{"line":2157,"column":12,"offset":69179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2159,"column":1,"offset":69183},"end":{"line":2159,"column":18,"offset":69200}}}],"position":{"start":{"line":2159,"column":1,"offset":69183},"end":{"line":2159,"column":18,"offset":69200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Implemented solutions to a few exercises that test our understanding of Python methods. We touched concepts such as:","position":{"start":{"line":2161,"column":5,"offset":69208},"end":{"line":2161,"column":121,"offset":69324}}}],"position":{"start":{"line":2161,"column":5,"offset":69208},"end":{"line":2161,"column":121,"offset":69324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Defining a method body","position":{"start":{"line":2162,"column":9,"offset":69334},"end":{"line":2162,"column":31,"offset":69356}}}],"position":{"start":{"line":2162,"column":5,"offset":69330},"end":{"line":2162,"column":31,"offset":69356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The way to invoke a method, to run its code","position":{"start":{"line":2163,"column":9,"offset":69366},"end":{"line":2163,"column":52,"offset":69409}}}],"position":{"start":{"line":2163,"column":5,"offset":69362},"end":{"line":2163,"column":52,"offset":69409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The difference between the two","position":{"start":{"line":2164,"column":9,"offset":69419},"end":{"line":2164,"column":39,"offset":69449}}}],"position":{"start":{"line":2164,"column":5,"offset":69415},"end":{"line":2164,"column":39,"offset":69449}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2162,"column":5,"offset":69330},"end":{"line":2164,"column":39,"offset":69449}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2161,"column":1,"offset":69204},"end":{"line":2164,"column":39,"offset":69449}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2161,"column":1,"offset":69204},"end":{"line":2164,"column":39,"offset":69449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 03: Passing Parameters To Methods","position":{"start":{"line":2166,"column":3,"offset":69455},"end":{"line":2166,"column":41,"offset":69493}}}],"position":{"start":{"line":2166,"column":1,"offset":69453},"end":{"line":2166,"column":43,"offset":69495}}}],"position":{"start":{"line":2166,"column":1,"offset":69453},"end":{"line":2166,"column":43,"offset":69495}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step,we created methods. We defined ","position":{"start":{"line":2168,"column":1,"offset":69499},"end":{"line":2168,"column":53,"offset":69551}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world_twice()</code>","position":{"start":{"line":2168,"column":53,"offset":69551},"end":{"line":2168,"column":80,"offset":69578}}},{"type":"text","value":", and this printed ","position":{"start":{"line":2168,"column":80,"offset":69578},"end":{"line":2168,"column":99,"offset":69597}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2168,"column":99,"offset":69597},"end":{"line":2168,"column":114,"offset":69612}}},{"type":"text","value":" twice. In this step, let's talk about ","position":{"start":{"line":2168,"column":114,"offset":69612},"end":{"line":2168,"column":153,"offset":69651}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"method arguments","position":{"start":{"line":2168,"column":154,"offset":69652},"end":{"line":2168,"column":170,"offset":69668}}}],"position":{"start":{"line":2168,"column":153,"offset":69651},"end":{"line":2168,"column":171,"offset":69669}}},{"type":"text","value":", or ","position":{"start":{"line":2168,"column":171,"offset":69669},"end":{"line":2168,"column":176,"offset":69674}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"parameters","position":{"start":{"line":2168,"column":177,"offset":69675},"end":{"line":2168,"column":187,"offset":69685}}}],"position":{"start":{"line":2168,"column":176,"offset":69674},"end":{"line":2168,"column":188,"offset":69686}}},{"type":"text","value":".","position":{"start":{"line":2168,"column":188,"offset":69686},"end":{"line":2168,"column":189,"offset":69687}}}],"position":{"start":{"line":2168,"column":1,"offset":69499},"end":{"line":2168,"column":189,"offset":69687}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":2170,"column":3,"offset":69693},"end":{"line":2170,"column":14,"offset":69704}}}],"position":{"start":{"line":2170,"column":1,"offset":69691},"end":{"line":2170,"column":16,"offset":69706}}}],"position":{"start":{"line":2170,"column":1,"offset":69691},"end":{"line":2170,"column":16,"offset":69706}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world_twice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world_thrice<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2172,"column":1,"offset":69710},"end":{"line":2180,"column":4,"offset":69880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Earlier, we wrote code for ","position":{"start":{"line":2182,"column":1,"offset":69884},"end":{"line":2182,"column":28,"offset":69911}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world_thrice()</code>","position":{"start":{"line":2182,"column":28,"offset":69911},"end":{"line":2182,"column":56,"offset":69939}}},{"type":"text","value":", which prints the message three times.","position":{"start":{"line":2182,"column":56,"offset":69939},"end":{"line":2182,"column":95,"offset":69978}}}],"position":{"start":{"line":2182,"column":1,"offset":69884},"end":{"line":2182,"column":95,"offset":69978}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say you want to print it five times. You would need to write another method that does what you need. Doesn't that seem monotonous?","position":{"start":{"line":2184,"column":1,"offset":69982},"end":{"line":2184,"column":137,"offset":70118}}}],"position":{"start":{"line":2184,"column":1,"offset":69982},"end":{"line":2184,"column":137,"offset":70118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of that, Won't it be great if I can call the method by the same name, say ","position":{"start":{"line":2186,"column":1,"offset":70122},"end":{"line":2186,"column":83,"offset":70204}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world(5)</code>","position":{"start":{"line":2186,"column":83,"offset":70204},"end":{"line":2186,"column":105,"offset":70226}}},{"type":"text","value":", and it would print \"Hello World\" five times?","position":{"start":{"line":2186,"column":105,"offset":70226},"end":{"line":2186,"column":151,"offset":70272}}}],"position":{"start":{"line":2186,"column":1,"offset":70122},"end":{"line":2186,"column":151,"offset":70272}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":2188,"column":1,"offset":70276},"end":{"line":2188,"column":5,"offset":70280}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2188,"column":5,"offset":70280},"end":{"line":2188,"column":8,"offset":70283}}},{"type":"text","value":" which we are passing here is called an ","position":{"start":{"line":2188,"column":8,"offset":70283},"end":{"line":2188,"column":48,"offset":70323}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"argument","position":{"start":{"line":2188,"column":50,"offset":70325},"end":{"line":2188,"column":58,"offset":70333}}}],"position":{"start":{"line":2188,"column":48,"offset":70323},"end":{"line":2188,"column":60,"offset":70335}}},{"type":"text","value":".","position":{"start":{"line":2188,"column":60,"offset":70335},"end":{"line":2188,"column":61,"offset":70336}}}],"position":{"start":{"line":2188,"column":1,"offset":70276},"end":{"line":2188,"column":61,"offset":70336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do we define our method to accept this argument?","position":{"start":{"line":2190,"column":1,"offset":70340},"end":{"line":2190,"column":53,"offset":70392}}}],"position":{"start":{"line":2190,"column":1,"offset":70340},"end":{"line":2190,"column":53,"offset":70392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's call our argument ","position":{"start":{"line":2192,"column":1,"offset":70396},"end":{"line":2192,"column":25,"offset":70420}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2192,"column":25,"offset":70420},"end":{"line":2192,"column":38,"offset":70433}}},{"type":"text","value":". If you have any experience with other programming languages, they generally need you to specify the parameter type. Something like ","position":{"start":{"line":2192,"column":38,"offset":70433},"end":{"line":2192,"column":171,"offset":70566}}},{"type":"raw","value":"<code class=\"language-text\">This parameter is an integer/float/string, or other types</code>","position":{"start":{"line":2192,"column":171,"offset":70566},"end":{"line":2192,"column":230,"offset":70625}}},{"type":"text","value":". But Python does not require parameter type.","position":{"start":{"line":2192,"column":230,"offset":70625},"end":{"line":2192,"column":275,"offset":70670}}}],"position":{"start":{"line":2192,"column":1,"offset":70396},"end":{"line":2192,"column":275,"offset":70670}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_hello_world</span><span class=\"token punctuation\">(</span>no_of_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>no_of_times<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":2194,"column":1,"offset":70674},"end":{"line":2199,"column":4,"offset":70806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Although we are not doing exactly what we set out to, let's see what would happen. What would happen if we say ","position":{"start":{"line":2201,"column":1,"offset":70810},"end":{"line":2201,"column":112,"offset":70921}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world()</code>","position":{"start":{"line":2201,"column":112,"offset":70921},"end":{"line":2201,"column":133,"offset":70942}}},{"type":"text","value":" ?","position":{"start":{"line":2201,"column":133,"offset":70942},"end":{"line":2201,"column":135,"offset":70944}}}],"position":{"start":{"line":2201,"column":1,"offset":70810},"end":{"line":2201,"column":135,"offset":70944}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    TypeError<span class=\"token punctuation\">:</span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> missing <span class=\"token number\">1</span> required positional argument<span class=\"token punctuation\">:</span> <span class=\"token string\">'no_of_times'</span></code></pre></div>","position":{"start":{"line":2203,"column":1,"offset":70948},"end":{"line":2208,"column":4,"offset":71164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Error! Something like \"Hey, you have created ","position":{"start":{"line":2210,"column":1,"offset":71168},"end":{"line":2210,"column":46,"offset":71213}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world</code>","position":{"start":{"line":2210,"column":46,"offset":71213},"end":{"line":2210,"column":65,"offset":71232}}},{"type":"text","value":" with a parameter, but not passing anything in here! Go ahead and pass a value\". Let's pass in a value, such as ","position":{"start":{"line":2210,"column":65,"offset":71232},"end":{"line":2210,"column":177,"offset":71344}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2210,"column":177,"offset":71344},"end":{"line":2210,"column":180,"offset":71347}}},{"type":"text","value":".","position":{"start":{"line":2210,"column":180,"offset":71347},"end":{"line":2210,"column":181,"offset":71348}}}],"position":{"start":{"line":2210,"column":1,"offset":71168},"end":{"line":2210,"column":181,"offset":71348}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    Hello World\n    <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    Hello World\n    <span class=\"token number\">10</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n    Hello World\n    <span class=\"token number\">100</span></code></pre></div>","position":{"start":{"line":2212,"column":1,"offset":71352},"end":{"line":2222,"column":4,"offset":71534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With ","position":{"start":{"line":2224,"column":1,"offset":71538},"end":{"line":2224,"column":6,"offset":71543}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world(5)</code>","position":{"start":{"line":2224,"column":6,"offset":71543},"end":{"line":2224,"column":28,"offset":71565}}},{"type":"text","value":", you can see ","position":{"start":{"line":2224,"column":28,"offset":71565},"end":{"line":2224,"column":42,"offset":71579}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2224,"column":42,"offset":71579},"end":{"line":2224,"column":57,"offset":71594}}},{"type":"text","value":" and ","position":{"start":{"line":2224,"column":57,"offset":71594},"end":{"line":2224,"column":62,"offset":71599}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2224,"column":62,"offset":71599},"end":{"line":2224,"column":65,"offset":71602}}},{"type":"text","value":" being printed. We are now able to define this method to accept a value, and print that value by invoking it. You can pass in any value, such as","position":{"start":{"line":2224,"column":65,"offset":71602},"end":{"line":2224,"column":209,"offset":71746}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":2224,"column":209,"offset":71746},"end":{"line":2224,"column":213,"offset":71750}}},{"type":"text","value":", ","position":{"start":{"line":2224,"column":213,"offset":71750},"end":{"line":2224,"column":215,"offset":71752}}},{"type":"raw","value":"<code class=\"language-text\">100</code>","position":{"start":{"line":2224,"column":215,"offset":71752},"end":{"line":2224,"column":220,"offset":71757}}},{"type":"text","value":", or others.","position":{"start":{"line":2224,"column":220,"offset":71757},"end":{"line":2224,"column":232,"offset":71769}}}],"position":{"start":{"line":2224,"column":1,"offset":71538},"end":{"line":2224,"column":232,"offset":71769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now think of a different solution for this method, where you don't repeat the same piece of code to print ","position":{"start":{"line":2226,"column":1,"offset":71773},"end":{"line":2226,"column":107,"offset":71879}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2226,"column":107,"offset":71879},"end":{"line":2226,"column":122,"offset":71894}}},{"type":"text","value":". Consider ","position":{"start":{"line":2226,"column":122,"offset":71894},"end":{"line":2226,"column":133,"offset":71905}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world(5)</code>","position":{"start":{"line":2226,"column":133,"offset":71905},"end":{"line":2226,"column":155,"offset":71927}}},{"type":"text","value":", it should still print ","position":{"start":{"line":2226,"column":155,"offset":71927},"end":{"line":2226,"column":179,"offset":71951}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2226,"column":179,"offset":71951},"end":{"line":2226,"column":194,"offset":71966}}},{"type":"text","value":" ","position":{"start":{"line":2226,"column":194,"offset":71966},"end":{"line":2226,"column":195,"offset":71967}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2226,"column":195,"offset":71967},"end":{"line":2226,"column":198,"offset":71970}}},{"type":"text","value":" times. How do you do that?","position":{"start":{"line":2226,"column":198,"offset":71970},"end":{"line":2226,"column":225,"offset":71997}}}],"position":{"start":{"line":2226,"column":1,"offset":71773},"end":{"line":2226,"column":225,"offset":71997}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Think about using something along the lines of a loop.","position":{"start":{"line":2228,"column":1,"offset":72001},"end":{"line":2228,"column":55,"offset":72055}}}],"position":{"start":{"line":2228,"column":1,"offset":72001},"end":{"line":2228,"column":55,"offset":72055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-02:","position":{"start":{"line":2230,"column":3,"offset":72061},"end":{"line":2230,"column":14,"offset":72072}}}],"position":{"start":{"line":2230,"column":1,"offset":72059},"end":{"line":2230,"column":16,"offset":72074}}}],"position":{"start":{"line":2230,"column":1,"offset":72059},"end":{"line":2230,"column":16,"offset":72074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For now, what we are doing is we are printing ","position":{"start":{"line":2232,"column":1,"offset":72078},"end":{"line":2232,"column":47,"offset":72124}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2232,"column":47,"offset":72124},"end":{"line":2232,"column":62,"offset":72139}}},{"type":"text","value":" ","position":{"start":{"line":2232,"column":62,"offset":72139},"end":{"line":2232,"column":63,"offset":72140}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":2232,"column":63,"offset":72140},"end":{"line":2232,"column":67,"offset":72144}}},{"type":"text","value":" times.","position":{"start":{"line":2232,"column":67,"offset":72144},"end":{"line":2232,"column":74,"offset":72151}}}],"position":{"start":{"line":2232,"column":1,"offset":72078},"end":{"line":2232,"column":74,"offset":72151}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_hello_world</span><span class=\"token punctuation\">(</span>no_of_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2234,"column":1,"offset":72155},"end":{"line":2250,"column":4,"offset":72478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Our method call ","position":{"start":{"line":2252,"column":1,"offset":72482},"end":{"line":2252,"column":17,"offset":72498}}},{"type":"raw","value":"<code class=\"language-text\">print_hello_world(5)</code>","position":{"start":{"line":2252,"column":17,"offset":72498},"end":{"line":2252,"column":39,"offset":72520}}},{"type":"text","value":" now prints ","position":{"start":{"line":2252,"column":39,"offset":72520},"end":{"line":2252,"column":51,"offset":72532}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2252,"column":51,"offset":72532},"end":{"line":2252,"column":66,"offset":72547}}},{"type":"text","value":" ","position":{"start":{"line":2252,"column":66,"offset":72547},"end":{"line":2252,"column":67,"offset":72548}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":2252,"column":67,"offset":72548},"end":{"line":2252,"column":71,"offset":72552}}},{"type":"text","value":" times.","position":{"start":{"line":2252,"column":71,"offset":72552},"end":{"line":2252,"column":78,"offset":72559}}}],"position":{"start":{"line":2252,"column":1,"offset":72482},"end":{"line":2252,"column":78,"offset":72559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However just print the message ","position":{"start":{"line":2254,"column":1,"offset":72563},"end":{"line":2254,"column":32,"offset":72594}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2254,"column":32,"offset":72594},"end":{"line":2254,"column":35,"offset":72597}}},{"type":"text","value":" times. We need to make use of the parameter ","position":{"start":{"line":2254,"column":35,"offset":72597},"end":{"line":2254,"column":80,"offset":72642}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2254,"column":80,"offset":72642},"end":{"line":2254,"column":93,"offset":72655}}},{"type":"text","value":" inside the ","position":{"start":{"line":2254,"column":93,"offset":72655},"end":{"line":2254,"column":105,"offset":72667}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":2254,"column":105,"offset":72667},"end":{"line":2254,"column":110,"offset":72672}}},{"type":"text","value":" loop as well.","position":{"start":{"line":2254,"column":110,"offset":72672},"end":{"line":2254,"column":124,"offset":72686}}}],"position":{"start":{"line":2254,"column":1,"offset":72563},"end":{"line":2254,"column":124,"offset":72686}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_hello_world</span><span class=\"token punctuation\">(</span>no_of_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>no_of_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2256,"column":1,"offset":72690},"end":{"line":2267,"column":4,"offset":72937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let's execute the method again. You can see that it's printing ","position":{"start":{"line":2269,"column":1,"offset":72941},"end":{"line":2269,"column":68,"offset":73008}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":2269,"column":68,"offset":73008},"end":{"line":2269,"column":71,"offset":73011}}},{"type":"text","value":" times only.","position":{"start":{"line":2269,"column":71,"offset":73011},"end":{"line":2269,"column":83,"offset":73023}}}],"position":{"start":{"line":2269,"column":1,"offset":72941},"end":{"line":2269,"column":83,"offset":73023}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Why is it not printing ","position":{"start":{"line":2271,"column":1,"offset":73027},"end":{"line":2271,"column":24,"offset":73050}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2271,"column":24,"offset":73050},"end":{"line":2271,"column":27,"offset":73053}}},{"type":"text","value":" times?","position":{"start":{"line":2271,"column":27,"offset":73053},"end":{"line":2271,"column":34,"offset":73060}}}],"position":{"start":{"line":2271,"column":1,"offset":73027},"end":{"line":2271,"column":34,"offset":73060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That's because ","position":{"start":{"line":2273,"column":1,"offset":73064},"end":{"line":2273,"column":16,"offset":73079}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2273,"column":16,"offset":73079},"end":{"line":2273,"column":29,"offset":73092}}},{"type":"text","value":" as a second parameter to ","position":{"start":{"line":2273,"column":29,"offset":73092},"end":{"line":2273,"column":55,"offset":73118}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":2273,"column":55,"offset":73118},"end":{"line":2273,"column":64,"offset":73127}}},{"type":"text","value":" is exclusive.","position":{"start":{"line":2273,"column":64,"offset":73127},"end":{"line":2273,"column":78,"offset":73141}}}],"position":{"start":{"line":2273,"column":1,"offset":73064},"end":{"line":2273,"column":78,"offset":73141}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_hello_world</span><span class=\"token punctuation\">(</span>no_of_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>no_of_times<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2275,"column":1,"offset":73145},"end":{"line":2286,"column":4,"offset":73409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Great, it's now printing the message ","position":{"start":{"line":2288,"column":1,"offset":73413},"end":{"line":2288,"column":38,"offset":73450}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2288,"column":38,"offset":73450},"end":{"line":2288,"column":41,"offset":73453}}},{"type":"text","value":" times!","position":{"start":{"line":2288,"column":41,"offset":73453},"end":{"line":2288,"column":48,"offset":73460}}}],"position":{"start":{"line":2288,"column":1,"offset":73413},"end":{"line":2288,"column":48,"offset":73460}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_hello_world<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2290,"column":1,"offset":73464},"end":{"line":2299,"column":4,"offset":73627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you pass a different argument like ","position":{"start":{"line":2301,"column":1,"offset":73631},"end":{"line":2301,"column":39,"offset":73669}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":2301,"column":39,"offset":73669},"end":{"line":2301,"column":42,"offset":73672}}},{"type":"text","value":", the message is displayed ","position":{"start":{"line":2301,"column":42,"offset":73672},"end":{"line":2301,"column":69,"offset":73699}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":2301,"column":69,"offset":73699},"end":{"line":2301,"column":72,"offset":73702}}},{"type":"text","value":" times.","position":{"start":{"line":2301,"column":72,"offset":73702},"end":{"line":2301,"column":79,"offset":73709}}}],"position":{"start":{"line":2301,"column":1,"offset":73631},"end":{"line":2301,"column":79,"offset":73709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Something you need to always be cautious about in Python, is the indentation. Over here, the ","position":{"start":{"line":2303,"column":1,"offset":73713},"end":{"line":2303,"column":94,"offset":73806}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":2303,"column":94,"offset":73806},"end":{"line":2303,"column":99,"offset":73811}}},{"type":"text","value":" loop is part of the method body. So we have extra indentation for it. The print is part of the ","position":{"start":{"line":2303,"column":99,"offset":73811},"end":{"line":2303,"column":195,"offset":73907}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":2303,"column":195,"offset":73907},"end":{"line":2303,"column":200,"offset":73912}}},{"type":"text","value":" loop body. So guess what, even more indentation for that code.","position":{"start":{"line":2303,"column":200,"offset":73912},"end":{"line":2303,"column":263,"offset":73975}}}],"position":{"start":{"line":2303,"column":1,"offset":73713},"end":{"line":2303,"column":263,"offset":73975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2305,"column":3,"offset":73981},"end":{"line":2305,"column":10,"offset":73988}}}],"position":{"start":{"line":2305,"column":1,"offset":73979},"end":{"line":2305,"column":12,"offset":73990}}}],"position":{"start":{"line":2305,"column":1,"offset":73979},"end":{"line":2305,"column":12,"offset":73990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2307,"column":1,"offset":73994},"end":{"line":2307,"column":18,"offset":74011}}}],"position":{"start":{"line":2307,"column":1,"offset":73994},"end":{"line":2307,"column":18,"offset":74011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned how to pass arguments to a method","position":{"start":{"line":2309,"column":5,"offset":74019},"end":{"line":2309,"column":46,"offset":74060}}}],"position":{"start":{"line":2309,"column":1,"offset":74015},"end":{"line":2309,"column":46,"offset":74060}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood that the method definition needs to have parameters coded in","position":{"start":{"line":2310,"column":5,"offset":74066},"end":{"line":2310,"column":76,"offset":74137}}}],"position":{"start":{"line":2310,"column":1,"offset":74062},"end":{"line":2310,"column":76,"offset":74137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Observed that arguments passed during a method call can be accessed inside a methods body","position":{"start":{"line":2311,"column":5,"offset":74143},"end":{"line":2311,"column":94,"offset":74232}}}],"position":{"start":{"line":2311,"column":1,"offset":74139},"end":{"line":2311,"column":94,"offset":74232}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2309,"column":1,"offset":74015},"end":{"line":2311,"column":94,"offset":74232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 04: Classroom Exercise CE-MD-01","position":{"start":{"line":2313,"column":3,"offset":74238},"end":{"line":2313,"column":39,"offset":74274}}}],"position":{"start":{"line":2313,"column":1,"offset":74236},"end":{"line":2313,"column":41,"offset":74276}}}],"position":{"start":{"line":2313,"column":1,"offset":74236},"end":{"line":2313,"column":41,"offset":74276}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, Let's look at a few exercises related to the method parameter.","position":{"start":{"line":2315,"column":1,"offset":74280},"end":{"line":2315,"column":77,"offset":74356}}}],"position":{"start":{"line":2315,"column":1,"offset":74280},"end":{"line":2315,"column":77,"offset":74356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":2317,"column":3,"offset":74362},"end":{"line":2317,"column":12,"offset":74371}}}],"position":{"start":{"line":2317,"column":1,"offset":74360},"end":{"line":2317,"column":14,"offset":74373}}}],"position":{"start":{"line":2317,"column":1,"offset":74360},"end":{"line":2317,"column":14,"offset":74373}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write a method called ","position":{"start":{"line":2319,"column":4,"offset":74380},"end":{"line":2319,"column":26,"offset":74402}}},{"type":"raw","value":"<code class=\"language-text\">print_numbers()</code>","position":{"start":{"line":2319,"column":26,"offset":74402},"end":{"line":2319,"column":43,"offset":74419}}},{"type":"text","value":", that would print all successive integers from ","position":{"start":{"line":2319,"column":43,"offset":74419},"end":{"line":2319,"column":91,"offset":74467}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":2319,"column":91,"offset":74467},"end":{"line":2319,"column":94,"offset":74470}}},{"type":"text","value":" to ","position":{"start":{"line":2319,"column":94,"offset":74470},"end":{"line":2319,"column":98,"offset":74474}}},{"type":"raw","value":"<code class=\"language-text\">n</code>","position":{"start":{"line":2319,"column":98,"offset":74474},"end":{"line":2319,"column":101,"offset":74477}}},{"type":"text","value":".","position":{"start":{"line":2319,"column":101,"offset":74477},"end":{"line":2319,"column":102,"offset":74478}}}],"position":{"start":{"line":2319,"column":1,"offset":74377},"end":{"line":2319,"column":102,"offset":74478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The second one is to write a method called ","position":{"start":{"line":2320,"column":4,"offset":74483},"end":{"line":2320,"column":47,"offset":74526}}},{"type":"raw","value":"<code class=\"language-text\">print_squares_of_numbers()</code>","position":{"start":{"line":2320,"column":47,"offset":74526},"end":{"line":2320,"column":75,"offset":74554}}},{"type":"text","value":", that prints squares of all successive integers from ","position":{"start":{"line":2320,"column":75,"offset":74554},"end":{"line":2320,"column":129,"offset":74608}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":2320,"column":129,"offset":74608},"end":{"line":2320,"column":132,"offset":74611}}},{"type":"text","value":" to ","position":{"start":{"line":2320,"column":132,"offset":74611},"end":{"line":2320,"column":136,"offset":74615}}},{"type":"raw","value":"<code class=\"language-text\">n</code>","position":{"start":{"line":2320,"column":136,"offset":74615},"end":{"line":2320,"column":139,"offset":74618}}},{"type":"text","value":".","position":{"start":{"line":2320,"column":139,"offset":74618},"end":{"line":2320,"column":140,"offset":74619}}}],"position":{"start":{"line":2320,"column":1,"offset":74480},"end":{"line":2320,"column":140,"offset":74619}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2319,"column":1,"offset":74377},"end":{"line":2320,"column":140,"offset":74619}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solutions","position":{"start":{"line":2322,"column":3,"offset":74625},"end":{"line":2322,"column":12,"offset":74634}}}],"position":{"start":{"line":2322,"column":1,"offset":74623},"end":{"line":2322,"column":14,"offset":74636}}}],"position":{"start":{"line":2322,"column":1,"offset":74623},"end":{"line":2322,"column":14,"offset":74636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 1","position":{"start":{"line":2324,"column":3,"offset":74642},"end":{"line":2324,"column":13,"offset":74652}}}],"position":{"start":{"line":2324,"column":1,"offset":74640},"end":{"line":2324,"column":15,"offset":74654}}}],"position":{"start":{"line":2324,"column":1,"offset":74640},"end":{"line":2324,"column":15,"offset":74654}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_numbers</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":2326,"column":1,"offset":74658},"end":{"line":2338,"column":4,"offset":74842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you are programming in other languages such as Java, you are used to naming methods in this way: ","position":{"start":{"line":2340,"column":1,"offset":74846},"end":{"line":2340,"column":101,"offset":74946}}},{"type":"raw","value":"<code class=\"language-text\">printNumbers()</code>","position":{"start":{"line":2340,"column":101,"offset":74946},"end":{"line":2340,"column":117,"offset":74962}}},{"type":"text","value":". This convention is popularly known as \"Camel Case\".","position":{"start":{"line":2340,"column":117,"offset":74962},"end":{"line":2340,"column":170,"offset":75015}}}],"position":{"start":{"line":2340,"column":1,"offset":74846},"end":{"line":2340,"column":170,"offset":75015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That's NOT how Python programmers name their methods. Pythonic way is to use underscore ","position":{"start":{"line":2342,"column":1,"offset":75019},"end":{"line":2342,"column":89,"offset":75107}}},{"type":"raw","value":"<code class=\"language-text\">_</code>","position":{"start":{"line":2342,"column":89,"offset":75107},"end":{"line":2342,"column":92,"offset":75110}}},{"type":"text","value":" to separate words in the method name, as in ","position":{"start":{"line":2342,"column":92,"offset":75110},"end":{"line":2342,"column":137,"offset":75155}}},{"type":"raw","value":"<code class=\"language-text\">print_numbers()</code>","position":{"start":{"line":2342,"column":137,"offset":75155},"end":{"line":2342,"column":154,"offset":75172}}},{"type":"text","value":".","position":{"start":{"line":2342,"column":154,"offset":75172},"end":{"line":2342,"column":155,"offset":75173}}}],"position":{"start":{"line":2342,"column":1,"offset":75019},"end":{"line":2342,"column":155,"offset":75173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 2","position":{"start":{"line":2344,"column":3,"offset":75179},"end":{"line":2344,"column":13,"offset":75189}}}],"position":{"start":{"line":2344,"column":1,"offset":75177},"end":{"line":2344,"column":15,"offset":75191}}}],"position":{"start":{"line":2344,"column":1,"offset":75177},"end":{"line":2344,"column":15,"offset":75191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define ","position":{"start":{"line":2346,"column":1,"offset":75195},"end":{"line":2346,"column":14,"offset":75208}}},{"type":"raw","value":"<code class=\"language-text\">print_squares_of_numbers()</code>","position":{"start":{"line":2346,"column":14,"offset":75208},"end":{"line":2346,"column":42,"offset":75236}}},{"type":"text","value":". This would be very similar to ","position":{"start":{"line":2346,"column":42,"offset":75236},"end":{"line":2346,"column":74,"offset":75268}}},{"type":"raw","value":"<code class=\"language-text\">print_numbers()</code>","position":{"start":{"line":2346,"column":74,"offset":75268},"end":{"line":2346,"column":91,"offset":75285}}},{"type":"text","value":", working with the same range. Only, we need to say ","position":{"start":{"line":2346,"column":91,"offset":75285},"end":{"line":2346,"column":143,"offset":75337}}},{"type":"raw","value":"<code class=\"language-text\">print(i*i)</code>","position":{"start":{"line":2346,"column":143,"offset":75337},"end":{"line":2346,"column":155,"offset":75349}}},{"type":"text","value":" .","position":{"start":{"line":2346,"column":155,"offset":75349},"end":{"line":2346,"column":157,"offset":75351}}}],"position":{"start":{"line":2346,"column":1,"offset":75195},"end":{"line":2346,"column":157,"offset":75351}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_squares_of_numbers</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_squares_of_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">16</span>\n    <span class=\"token number\">25</span></code></pre></div>","position":{"start":{"line":2348,"column":1,"offset":75355},"end":{"line":2359,"column":4,"offset":75556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How is a parameter different from an argument?","position":{"start":{"line":2361,"column":1,"offset":75560},"end":{"line":2361,"column":47,"offset":75606}}}],"position":{"start":{"line":2361,"column":1,"offset":75560},"end":{"line":2361,"column":47,"offset":75606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Inside the definition of the method, the name within parentheses is referred to as a ","position":{"start":{"line":2363,"column":5,"offset":75614},"end":{"line":2363,"column":90,"offset":75699}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"parameter","position":{"start":{"line":2363,"column":92,"offset":75701},"end":{"line":2363,"column":101,"offset":75710}}}],"position":{"start":{"line":2363,"column":90,"offset":75699},"end":{"line":2363,"column":103,"offset":75712}}},{"type":"text","value":". In our recent exercise, ","position":{"start":{"line":2363,"column":103,"offset":75712},"end":{"line":2363,"column":129,"offset":75738}}},{"type":"raw","value":"<code class=\"language-text\">n</code>","position":{"start":{"line":2363,"column":129,"offset":75738},"end":{"line":2363,"column":132,"offset":75741}}},{"type":"text","value":" is a parameter, because it's used in the definition of ","position":{"start":{"line":2363,"column":132,"offset":75741},"end":{"line":2363,"column":188,"offset":75797}}},{"type":"raw","value":"<code class=\"language-text\">print_squares_of_numbers</code>","position":{"start":{"line":2363,"column":188,"offset":75797},"end":{"line":2363,"column":214,"offset":75823}}},{"type":"text","value":".","position":{"start":{"line":2363,"column":214,"offset":75823},"end":{"line":2363,"column":215,"offset":75824}}}],"position":{"start":{"line":2363,"column":1,"offset":75610},"end":{"line":2363,"column":215,"offset":75824}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"When you are passing a value to a method during a method call, say ","position":{"start":{"line":2364,"column":5,"offset":75830},"end":{"line":2364,"column":72,"offset":75897}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2364,"column":72,"offset":75897},"end":{"line":2364,"column":75,"offset":75900}}},{"type":"text","value":", that value is called an ","position":{"start":{"line":2364,"column":75,"offset":75900},"end":{"line":2364,"column":101,"offset":75926}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"argument","position":{"start":{"line":2364,"column":103,"offset":75928},"end":{"line":2364,"column":111,"offset":75936}}}],"position":{"start":{"line":2364,"column":101,"offset":75926},"end":{"line":2364,"column":113,"offset":75938}}},{"type":"text","value":".","position":{"start":{"line":2364,"column":113,"offset":75938},"end":{"line":2364,"column":114,"offset":75939}}}],"position":{"start":{"line":2364,"column":1,"offset":75826},"end":{"line":2364,"column":114,"offset":75939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Don't worry too much about it. Just follow this convention for now:","position":{"start":{"line":2365,"column":5,"offset":75945},"end":{"line":2365,"column":72,"offset":76012}}}],"position":{"start":{"line":2365,"column":5,"offset":75945},"end":{"line":2365,"column":72,"offset":76012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In the method call, call it an ","position":{"start":{"line":2366,"column":9,"offset":76022},"end":{"line":2366,"column":40,"offset":76053}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"argument","position":{"start":{"line":2366,"column":41,"offset":76054},"end":{"line":2366,"column":49,"offset":76062}}}],"position":{"start":{"line":2366,"column":40,"offset":76053},"end":{"line":2366,"column":50,"offset":76063}}},{"type":"text","value":".","position":{"start":{"line":2366,"column":50,"offset":76063},"end":{"line":2366,"column":51,"offset":76064}}}],"position":{"start":{"line":2366,"column":5,"offset":76018},"end":{"line":2366,"column":51,"offset":76064}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"In a method definition, call it a ","position":{"start":{"line":2367,"column":9,"offset":76074},"end":{"line":2367,"column":43,"offset":76108}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"parameter","position":{"start":{"line":2367,"column":44,"offset":76109},"end":{"line":2367,"column":53,"offset":76118}}}],"position":{"start":{"line":2367,"column":43,"offset":76108},"end":{"line":2367,"column":54,"offset":76119}}},{"type":"text","value":".","position":{"start":{"line":2367,"column":54,"offset":76119},"end":{"line":2367,"column":55,"offset":76120}}}],"position":{"start":{"line":2367,"column":5,"offset":76070},"end":{"line":2367,"column":55,"offset":76120}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2366,"column":5,"offset":76018},"end":{"line":2367,"column":55,"offset":76120}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2365,"column":1,"offset":75941},"end":{"line":2367,"column":55,"offset":76120}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2363,"column":1,"offset":75610},"end":{"line":2367,"column":55,"offset":76120}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2369,"column":3,"offset":76126},"end":{"line":2369,"column":10,"offset":76133}}}],"position":{"start":{"line":2369,"column":1,"offset":76124},"end":{"line":2369,"column":12,"offset":76135}}}],"position":{"start":{"line":2369,"column":1,"offset":76124},"end":{"line":2369,"column":12,"offset":76135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we looked at a few simple exercises related to passing method arguments","position":{"start":{"line":2371,"column":1,"offset":76139},"end":{"line":2371,"column":86,"offset":76224}}}],"position":{"start":{"line":2371,"column":1,"offset":76139},"end":{"line":2371,"column":86,"offset":76224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 05: Methods With Multiple Parameters","position":{"start":{"line":2373,"column":3,"offset":76230},"end":{"line":2373,"column":44,"offset":76271}}}],"position":{"start":{"line":2373,"column":1,"offset":76228},"end":{"line":2373,"column":46,"offset":76273}}}],"position":{"start":{"line":2373,"column":1,"offset":76228},"end":{"line":2373,"column":46,"offset":76273}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at creating a method with multiple parameters.","position":{"start":{"line":2375,"column":1,"offset":76277},"end":{"line":2375,"column":72,"offset":76348}}}],"position":{"start":{"line":2375,"column":1,"offset":76277},"end":{"line":2375,"column":72,"offset":76348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":2377,"column":3,"offset":76354},"end":{"line":2377,"column":14,"offset":76365}}}],"position":{"start":{"line":2377,"column":1,"offset":76352},"end":{"line":2377,"column":16,"offset":76367}}}],"position":{"start":{"line":2377,"column":1,"offset":76352},"end":{"line":2377,"column":16,"offset":76367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print_hello_world</code>","position":{"start":{"line":2379,"column":1,"offset":76371},"end":{"line":2379,"column":20,"offset":76390}}},{"type":"text","value":" accepts one parameter and prints \"Hello World\" the specified number of times.","position":{"start":{"line":2379,"column":20,"offset":76390},"end":{"line":2379,"column":98,"offset":76468}}}],"position":{"start":{"line":2379,"column":1,"offset":76371},"end":{"line":2379,"column":98,"offset":76468}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_hello_world</span><span class=\"token punctuation\">(</span>no_of_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>no_of_times<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":2381,"column":1,"offset":76472},"end":{"line":2386,"column":4,"offset":76621}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we want to print another piece of text ","position":{"start":{"line":2388,"column":1,"offset":76625},"end":{"line":2388,"column":50,"offset":76674}}},{"type":"raw","value":"<code class=\"language-text\">Welcome To Python</code>","position":{"start":{"line":2388,"column":50,"offset":76674},"end":{"line":2388,"column":69,"offset":76693}}},{"type":"text","value":", a specified number of times. How do you do that?","position":{"start":{"line":2388,"column":69,"offset":76693},"end":{"line":2388,"column":119,"offset":76743}}}],"position":{"start":{"line":2388,"column":1,"offset":76625},"end":{"line":2388,"column":119,"offset":76743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can always create another method similar to the first one, such as ","position":{"start":{"line":2390,"column":1,"offset":76747},"end":{"line":2390,"column":72,"offset":76818}}},{"type":"raw","value":"<code class=\"language-text\">print_welcome_to_python(no_of_times)</code>","position":{"start":{"line":2390,"column":72,"offset":76818},"end":{"line":2390,"column":110,"offset":76856}}},{"type":"text","value":" and print the necessary text inside.","position":{"start":{"line":2390,"column":110,"offset":76856},"end":{"line":2390,"column":147,"offset":76893}}}],"position":{"start":{"line":2390,"column":1,"offset":76747},"end":{"line":2390,"column":147,"offset":76893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, is that what a good programmer does?","position":{"start":{"line":2392,"column":1,"offset":76897},"end":{"line":2392,"column":46,"offset":76942}}}],"position":{"start":{"line":2392,"column":1,"offset":76897},"end":{"line":2392,"column":46,"offset":76942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A good programmer tries to create a more generic solution.","position":{"start":{"line":2394,"column":1,"offset":76946},"end":{"line":2394,"column":59,"offset":77004}}}],"position":{"start":{"line":2394,"column":1,"offset":76946},"end":{"line":2394,"column":59,"offset":77004}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_string</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> no_of_times<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>no_of_times<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2396,"column":1,"offset":77008},"end":{"line":2405,"column":4,"offset":77238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The good programmer that you are, you created a new method called ","position":{"start":{"line":2407,"column":1,"offset":77242},"end":{"line":2407,"column":67,"offset":77308}}},{"type":"raw","value":"<code class=\"language-text\">print_string(str, no_of_times)</code>","position":{"start":{"line":2407,"column":67,"offset":77308},"end":{"line":2407,"column":99,"offset":77340}}},{"type":"text","value":" accepting a text parameter, in addition to ","position":{"start":{"line":2407,"column":99,"offset":77340},"end":{"line":2407,"column":143,"offset":77384}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2407,"column":143,"offset":77384},"end":{"line":2407,"column":156,"offset":77397}}},{"type":"text","value":".","position":{"start":{"line":2407,"column":156,"offset":77397},"end":{"line":2407,"column":157,"offset":77398}}}],"position":{"start":{"line":2407,"column":1,"offset":77242},"end":{"line":2407,"column":157,"offset":77398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Syntax rules for method parameters are quite strict. If we say ","position":{"start":{"line":2409,"column":1,"offset":77402},"end":{"line":2409,"column":64,"offset":77465}}},{"type":"raw","value":"<code class=\"language-text\">print_string(\"Welcome to Python\")</code>","position":{"start":{"line":2409,"column":64,"offset":77465},"end":{"line":2409,"column":99,"offset":77500}}},{"type":"text","value":" and run it, we get an error! Python Shell says: \"I need ","position":{"start":{"line":2409,"column":99,"offset":77500},"end":{"line":2409,"column":156,"offset":77557}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2409,"column":156,"offset":77557},"end":{"line":2409,"column":169,"offset":77570}}},{"type":"text","value":" to be present in here\".","position":{"start":{"line":2409,"column":169,"offset":77570},"end":{"line":2409,"column":193,"offset":77594}}}],"position":{"start":{"line":2409,"column":1,"offset":77402},"end":{"line":2409,"column":193,"offset":77594}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to Python\"</span><span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    TypeError<span class=\"token punctuation\">:</span> print_string<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> missing <span class=\"token number\">1</span> required positional argument<span class=\"token punctuation\">:</span> <span class=\"token string\">'no_of_times'</span></code></pre></div>","position":{"start":{"line":2411,"column":1,"offset":77598},"end":{"line":2416,"column":4,"offset":77823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say you want to assign default values for ","position":{"start":{"line":2418,"column":1,"offset":77827},"end":{"line":2418,"column":49,"offset":77875}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":2418,"column":49,"offset":77875},"end":{"line":2418,"column":54,"offset":77880}}},{"type":"text","value":" and ","position":{"start":{"line":2418,"column":54,"offset":77880},"end":{"line":2418,"column":59,"offset":77885}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2418,"column":59,"offset":77885},"end":{"line":2418,"column":72,"offset":77898}}},{"type":"text","value":" in ","position":{"start":{"line":2418,"column":72,"offset":77898},"end":{"line":2418,"column":76,"offset":77902}}},{"type":"raw","value":"<code class=\"language-text\">print_string()</code>","position":{"start":{"line":2418,"column":76,"offset":77902},"end":{"line":2418,"column":92,"offset":77918}}},{"type":"text","value":". By default, we want to always print ","position":{"start":{"line":2418,"column":92,"offset":77918},"end":{"line":2418,"column":130,"offset":77956}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2418,"column":130,"offset":77956},"end":{"line":2418,"column":145,"offset":77971}}},{"type":"text","value":", and that too ","position":{"start":{"line":2418,"column":145,"offset":77971},"end":{"line":2418,"column":160,"offset":77986}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2418,"column":160,"offset":77986},"end":{"line":2418,"column":163,"offset":77989}}},{"type":"text","value":" times.","position":{"start":{"line":2418,"column":163,"offset":77989},"end":{"line":2418,"column":170,"offset":77996}}}],"position":{"start":{"line":2418,"column":1,"offset":77827},"end":{"line":2418,"column":170,"offset":77996}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Python language makes this very easy. ","position":{"start":{"line":2420,"column":1,"offset":78000},"end":{"line":2420,"column":43,"offset":78042}}},{"type":"raw","value":"<code class=\"language-text\">def print_string(str = \"Hello World\", no_of_times=5)</code>","position":{"start":{"line":2420,"column":43,"offset":78042},"end":{"line":2420,"column":97,"offset":78096}}},{"type":"text","value":". The rest of the method remains the same.","position":{"start":{"line":2420,"column":97,"offset":78096},"end":{"line":2420,"column":139,"offset":78138}}}],"position":{"start":{"line":2420,"column":1,"offset":78000},"end":{"line":2420,"column":139,"offset":78138}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_string</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">,</span> no_of_times<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>no_of_times<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":2422,"column":1,"offset":78142},"end":{"line":2427,"column":4,"offset":78297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now you can call ","position":{"start":{"line":2429,"column":1,"offset":78301},"end":{"line":2429,"column":18,"offset":78318}}},{"type":"raw","value":"<code class=\"language-text\">print_string()</code>","position":{"start":{"line":2429,"column":18,"offset":78318},"end":{"line":2429,"column":34,"offset":78334}}},{"type":"text","value":", and ","position":{"start":{"line":2429,"column":34,"offset":78334},"end":{"line":2429,"column":40,"offset":78340}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2429,"column":40,"offset":78340},"end":{"line":2429,"column":55,"offset":78355}}},{"type":"text","value":" is displayed ","position":{"start":{"line":2429,"column":55,"offset":78355},"end":{"line":2429,"column":69,"offset":78369}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2429,"column":69,"offset":78369},"end":{"line":2429,"column":72,"offset":78372}}},{"type":"text","value":" times.","position":{"start":{"line":2429,"column":72,"offset":78372},"end":{"line":2429,"column":79,"offset":78379}}}],"position":{"start":{"line":2429,"column":1,"offset":78301},"end":{"line":2429,"column":79,"offset":78379}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2431,"column":1,"offset":78383},"end":{"line":2438,"column":4,"offset":78506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If it's ","position":{"start":{"line":2440,"column":1,"offset":78510},"end":{"line":2440,"column":9,"offset":78518}}},{"type":"raw","value":"<code class=\"language-text\">print_string(\"Welcome To Python\")</code>","position":{"start":{"line":2440,"column":9,"offset":78518},"end":{"line":2440,"column":44,"offset":78553}}},{"type":"text","value":", what does it do? It prints ","position":{"start":{"line":2440,"column":44,"offset":78553},"end":{"line":2440,"column":73,"offset":78582}}},{"type":"raw","value":"<code class=\"language-text\">\"Welcome To Python\"</code>","position":{"start":{"line":2440,"column":73,"offset":78582},"end":{"line":2440,"column":94,"offset":78603}}},{"type":"text","value":", ","position":{"start":{"line":2440,"column":94,"offset":78603},"end":{"line":2440,"column":96,"offset":78605}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2440,"column":96,"offset":78605},"end":{"line":2440,"column":99,"offset":78608}}},{"type":"text","value":" times.","position":{"start":{"line":2440,"column":99,"offset":78608},"end":{"line":2440,"column":106,"offset":78615}}}],"position":{"start":{"line":2440,"column":1,"offset":78510},"end":{"line":2440,"column":106,"offset":78615}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to Python\"</span><span class=\"token punctuation\">)</span>\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python</code></pre></div>","position":{"start":{"line":2442,"column":1,"offset":78619},"end":{"line":2449,"column":4,"offset":78791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider ","position":{"start":{"line":2451,"column":1,"offset":78795},"end":{"line":2451,"column":10,"offset":78804}}},{"type":"raw","value":"<code class=\"language-text\">print_string(\"Welcome to Python\", 8)</code>","position":{"start":{"line":2451,"column":10,"offset":78804},"end":{"line":2451,"column":48,"offset":78842}}},{"type":"text","value":", it would print that string ","position":{"start":{"line":2451,"column":48,"offset":78842},"end":{"line":2451,"column":77,"offset":78871}}},{"type":"raw","value":"<code class=\"language-text\">8</code>","position":{"start":{"line":2451,"column":77,"offset":78871},"end":{"line":2451,"column":80,"offset":78874}}},{"type":"text","value":" times.","position":{"start":{"line":2451,"column":80,"offset":78874},"end":{"line":2451,"column":87,"offset":78881}}}],"position":{"start":{"line":2451,"column":1,"offset":78795},"end":{"line":2451,"column":87,"offset":78881}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to Python\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python\n    Welcome to Python</code></pre></div>","position":{"start":{"line":2453,"column":1,"offset":78885},"end":{"line":2463,"column":4,"offset":79129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Isn't that cool!","position":{"start":{"line":2465,"column":1,"offset":79133},"end":{"line":2465,"column":17,"offset":79149}}}],"position":{"start":{"line":2465,"column":1,"offset":79133},"end":{"line":2465,"column":17,"offset":79149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2467,"column":3,"offset":79155},"end":{"line":2467,"column":10,"offset":79162}}}],"position":{"start":{"line":2467,"column":1,"offset":79153},"end":{"line":2467,"column":12,"offset":79164}}}],"position":{"start":{"line":2467,"column":1,"offset":79153},"end":{"line":2467,"column":12,"offset":79164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2469,"column":1,"offset":79168},"end":{"line":2469,"column":18,"offset":79185}}}],"position":{"start":{"line":2469,"column":1,"offset":79168},"end":{"line":2469,"column":18,"offset":79185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at how to pass multiple parameters to a method, starting with two arguments","position":{"start":{"line":2471,"column":5,"offset":79193},"end":{"line":2471,"column":87,"offset":79275}}}],"position":{"start":{"line":2471,"column":1,"offset":79189},"end":{"line":2471,"column":87,"offset":79275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned how you can define default values for those parameters","position":{"start":{"line":2472,"column":5,"offset":79281},"end":{"line":2472,"column":67,"offset":79343}}}],"position":{"start":{"line":2472,"column":1,"offset":79277},"end":{"line":2472,"column":67,"offset":79343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Observed we could pass default arguments for none, some or all of those parameters","position":{"start":{"line":2473,"column":5,"offset":79349},"end":{"line":2473,"column":87,"offset":79431}}}],"position":{"start":{"line":2473,"column":1,"offset":79345},"end":{"line":2473,"column":87,"offset":79431}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2471,"column":1,"offset":79189},"end":{"line":2473,"column":87,"offset":79431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 06: Back To Multiplication Table - Using Methods","position":{"start":{"line":2475,"column":3,"offset":79437},"end":{"line":2475,"column":56,"offset":79490}}}],"position":{"start":{"line":2475,"column":1,"offset":79435},"end":{"line":2475,"column":58,"offset":79492}}}],"position":{"start":{"line":2475,"column":1,"offset":79435},"end":{"line":2475,"column":58,"offset":79492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's get back to our original goal, of why we needed methods. We wanted to create a multiplication table for a number, and observed that each time we needed to we needed change that number, we were forced to make a change in the code. This is not something we liked, and that's why we started investigating how methods can be used.","position":{"start":{"line":2477,"column":1,"offset":79496},"end":{"line":2477,"column":333,"offset":79828}}}],"position":{"start":{"line":2477,"column":1,"offset":79496},"end":{"line":2477,"column":333,"offset":79828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, Let's try our hand at creating a multiplication table method.","position":{"start":{"line":2479,"column":1,"offset":79832},"end":{"line":2479,"column":76,"offset":79907}}}],"position":{"start":{"line":2479,"column":1,"offset":79832},"end":{"line":2479,"column":76,"offset":79907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":2481,"column":3,"offset":79913},"end":{"line":2481,"column":14,"offset":79924}}}],"position":{"start":{"line":2481,"column":1,"offset":79911},"end":{"line":2481,"column":16,"offset":79926}}}],"position":{"start":{"line":2481,"column":1,"offset":79911},"end":{"line":2481,"column":16,"offset":79926}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"7 * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token number\">7</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2483,"column":1,"offset":79930},"end":{"line":2486,"column":4,"offset":80016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's define a method called ","position":{"start":{"line":2488,"column":1,"offset":80020},"end":{"line":2488,"column":30,"offset":80049}}},{"type":"raw","value":"<code class=\"language-text\">print_multiplication_table()</code>","position":{"start":{"line":2488,"column":30,"offset":80049},"end":{"line":2488,"column":60,"offset":80079}}},{"type":"text","value":", and pass in a parameter to it.","position":{"start":{"line":2488,"column":60,"offset":80079},"end":{"line":2488,"column":92,"offset":80111}}}],"position":{"start":{"line":2488,"column":1,"offset":80020},"end":{"line":2488,"column":92,"offset":80111}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_multiplication_table</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>table<span class=\"token punctuation\">}</span></span><span class=\"token string\"> * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>table <span class=\"token operator\">*</span> i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_multiplication_table<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">14</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">28</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">49</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">56</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">9</span> <span class=\"token operator\">=</span> <span class=\"token number\">63</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">=</span> <span class=\"token number\">70</span></code></pre></div>","position":{"start":{"line":2490,"column":1,"offset":80115},"end":{"line":2506,"column":4,"offset":80472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now you have the entire multiplication table for ","position":{"start":{"line":2508,"column":1,"offset":80476},"end":{"line":2508,"column":50,"offset":80525}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":2508,"column":50,"offset":80525},"end":{"line":2508,"column":53,"offset":80528}}},{"type":"text","value":".","position":{"start":{"line":2508,"column":53,"offset":80528},"end":{"line":2508,"column":54,"offset":80529}}}],"position":{"start":{"line":2508,"column":1,"offset":80476},"end":{"line":2508,"column":54,"offset":80529}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can then call ","position":{"start":{"line":2510,"column":1,"offset":80533},"end":{"line":2510,"column":19,"offset":80551}}},{"type":"raw","value":"<code class=\"language-text\">print_multiplication_table()</code>","position":{"start":{"line":2510,"column":19,"offset":80551},"end":{"line":2510,"column":49,"offset":80581}}},{"type":"text","value":" with arguments ","position":{"start":{"line":2510,"column":49,"offset":80581},"end":{"line":2510,"column":65,"offset":80597}}},{"type":"raw","value":"<code class=\"language-text\">8</code>","position":{"start":{"line":2510,"column":65,"offset":80597},"end":{"line":2510,"column":68,"offset":80600}}},{"type":"text","value":", ","position":{"start":{"line":2510,"column":68,"offset":80600},"end":{"line":2510,"column":70,"offset":80602}}},{"type":"raw","value":"<code class=\"language-text\">9</code>","position":{"start":{"line":2510,"column":70,"offset":80602},"end":{"line":2510,"column":73,"offset":80605}}},{"type":"text","value":",and so on, by simply changing the ","position":{"start":{"line":2510,"column":73,"offset":80605},"end":{"line":2510,"column":108,"offset":80640}}},{"type":"raw","value":"<code class=\"language-text\">table</code>","position":{"start":{"line":2510,"column":108,"offset":80640},"end":{"line":2510,"column":115,"offset":80647}}},{"type":"text","value":" arguemnt value.","position":{"start":{"line":2510,"column":115,"offset":80647},"end":{"line":2510,"column":131,"offset":80663}}}],"position":{"start":{"line":2510,"column":1,"offset":80533},"end":{"line":2510,"column":131,"offset":80663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now want to create even better ","position":{"start":{"line":2512,"column":1,"offset":80667},"end":{"line":2512,"column":35,"offset":80701}}},{"type":"raw","value":"<code class=\"language-text\">print_multiplication_table()</code>","position":{"start":{"line":2512,"column":35,"offset":80701},"end":{"line":2512,"column":65,"offset":80731}}},{"type":"text","value":" method.","position":{"start":{"line":2512,"column":65,"offset":80731},"end":{"line":2512,"column":73,"offset":80739}}}],"position":{"start":{"line":2512,"column":1,"offset":80667},"end":{"line":2512,"column":73,"offset":80739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to control the start point, as well as the end point, in the call to ","position":{"start":{"line":2514,"column":1,"offset":80743},"end":{"line":2514,"column":78,"offset":80820}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":2514,"column":78,"offset":80820},"end":{"line":2514,"column":87,"offset":80829}}},{"type":"text","value":". We want to say ","position":{"start":{"line":2514,"column":87,"offset":80829},"end":{"line":2514,"column":104,"offset":80846}}},{"type":"raw","value":"<code class=\"language-text\">print_multiplication_table(7, 1, 6)</code>","position":{"start":{"line":2514,"column":104,"offset":80846},"end":{"line":2514,"column":141,"offset":80883}}},{"type":"text","value":", to print the ","position":{"start":{"line":2514,"column":141,"offset":80883},"end":{"line":2514,"column":156,"offset":80898}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":2514,"column":156,"offset":80898},"end":{"line":2514,"column":159,"offset":80901}}},{"type":"text","value":" table with entries from ","position":{"start":{"line":2514,"column":159,"offset":80901},"end":{"line":2514,"column":184,"offset":80926}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":2514,"column":184,"offset":80926},"end":{"line":2514,"column":187,"offset":80929}}},{"type":"text","value":" to ","position":{"start":{"line":2514,"column":187,"offset":80929},"end":{"line":2514,"column":191,"offset":80933}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":2514,"column":191,"offset":80933},"end":{"line":2514,"column":194,"offset":80936}}},{"type":"text","value":". How can you do that?","position":{"start":{"line":2514,"column":194,"offset":80936},"end":{"line":2514,"column":216,"offset":80958}}}],"position":{"start":{"line":2514,"column":1,"offset":80743},"end":{"line":2514,"column":216,"offset":80958}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_multiplication_table</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>table<span class=\"token punctuation\">}</span></span><span class=\"token string\"> * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>table <span class=\"token operator\">*</span> i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_multiplication_table<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">14</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">28</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span></code></pre></div>","position":{"start":{"line":2516,"column":1,"offset":80962},"end":{"line":2528,"column":4,"offset":81281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Simple! Define those range limits as additional parameters!","position":{"start":{"line":2530,"column":1,"offset":81285},"end":{"line":2530,"column":60,"offset":81344}}}],"position":{"start":{"line":2530,"column":1,"offset":81285},"end":{"line":2530,"column":60,"offset":81344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The other thing we can obviously do, is have default values for the ","position":{"start":{"line":2532,"column":1,"offset":81348},"end":{"line":2532,"column":69,"offset":81416}}},{"type":"raw","value":"<code class=\"language-text\">start</code>","position":{"start":{"line":2532,"column":69,"offset":81416},"end":{"line":2532,"column":76,"offset":81423}}},{"type":"text","value":", and the ","position":{"start":{"line":2532,"column":76,"offset":81423},"end":{"line":2532,"column":86,"offset":81433}}},{"type":"raw","value":"<code class=\"language-text\">end</code>","position":{"start":{"line":2532,"column":86,"offset":81433},"end":{"line":2532,"column":91,"offset":81438}}},{"type":"text","value":".","position":{"start":{"line":2532,"column":91,"offset":81438},"end":{"line":2532,"column":92,"offset":81439}}}],"position":{"start":{"line":2532,"column":1,"offset":81348},"end":{"line":2532,"column":92,"offset":81439}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_multiplication_table</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">,</span> start<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>       <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>table<span class=\"token punctuation\">}</span></span><span class=\"token string\"> * </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> = </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>table <span class=\"token operator\">*</span> i<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_multiplication_table<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">1</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">=</span> <span class=\"token number\">14</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">=</span> <span class=\"token number\">28</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token operator\">=</span> <span class=\"token number\">35</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">6</span> <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">=</span> <span class=\"token number\">49</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span> <span class=\"token operator\">=</span> <span class=\"token number\">56</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">9</span> <span class=\"token operator\">=</span> <span class=\"token number\">63</span>\n    <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">=</span> <span class=\"token number\">70</span></code></pre></div>","position":{"start":{"line":2534,"column":1,"offset":81443},"end":{"line":2551,"column":4,"offset":81827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Calling ","position":{"start":{"line":2553,"column":1,"offset":81831},"end":{"line":2553,"column":9,"offset":81839}}},{"type":"raw","value":"<code class=\"language-text\">print_multiplication_table(7)</code>","position":{"start":{"line":2553,"column":9,"offset":81839},"end":{"line":2553,"column":40,"offset":81870}}},{"type":"text","value":" would give us entries from ","position":{"start":{"line":2553,"column":40,"offset":81870},"end":{"line":2553,"column":68,"offset":81898}}},{"type":"raw","value":"<code class=\"language-text\">7 * 1 = 7</code>","position":{"start":{"line":2553,"column":68,"offset":81898},"end":{"line":2553,"column":79,"offset":81909}}},{"type":"text","value":" to ","position":{"start":{"line":2553,"column":79,"offset":81909},"end":{"line":2553,"column":83,"offset":81913}}},{"type":"raw","value":"<code class=\"language-text\">7 * 10 = 70</code>","position":{"start":{"line":2553,"column":83,"offset":81913},"end":{"line":2553,"column":96,"offset":81926}}},{"type":"text","value":".","position":{"start":{"line":2553,"column":96,"offset":81926},"end":{"line":2553,"column":97,"offset":81927}}}],"position":{"start":{"line":2553,"column":1,"offset":81831},"end":{"line":2553,"column":97,"offset":81927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now you can actually send out this method, to your friends, who would find it easy to use, and cool!","position":{"start":{"line":2555,"column":1,"offset":81931},"end":{"line":2555,"column":101,"offset":82031}}}],"position":{"start":{"line":2555,"column":1,"offset":81931},"end":{"line":2555,"column":101,"offset":82031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2557,"column":3,"offset":82037},"end":{"line":2557,"column":10,"offset":82044}}}],"position":{"start":{"line":2557,"column":1,"offset":82035},"end":{"line":2557,"column":12,"offset":82046}}}],"position":{"start":{"line":2557,"column":1,"offset":82035},"end":{"line":2557,"column":12,"offset":82046}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2559,"column":1,"offset":82050},"end":{"line":2559,"column":18,"offset":82067}}}],"position":{"start":{"line":2559,"column":1,"offset":82050},"end":{"line":2559,"column":18,"offset":82067}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned how to define a method to print the multiplication table for a number","position":{"start":{"line":2561,"column":5,"offset":82075},"end":{"line":2561,"column":82,"offset":82152}}}],"position":{"start":{"line":2561,"column":1,"offset":82071},"end":{"line":2561,"column":82,"offset":82152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at how to enhance this method to make table printing more flexible","position":{"start":{"line":2562,"column":5,"offset":82158},"end":{"line":2562,"column":78,"offset":82231}}}],"position":{"start":{"line":2562,"column":1,"offset":82154},"end":{"line":2562,"column":78,"offset":82231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Further enhanced that method to accept default arguments while printing a table","position":{"start":{"line":2563,"column":5,"offset":82237},"end":{"line":2563,"column":84,"offset":82316}}}],"position":{"start":{"line":2563,"column":1,"offset":82233},"end":{"line":2563,"column":84,"offset":82316}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2561,"column":1,"offset":82071},"end":{"line":2563,"column":84,"offset":82316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 07: Indentation Is King","position":{"start":{"line":2565,"column":3,"offset":82322},"end":{"line":2565,"column":31,"offset":82350}}}],"position":{"start":{"line":2565,"column":1,"offset":82320},"end":{"line":2565,"column":33,"offset":82352}}}],"position":{"start":{"line":2565,"column":1,"offset":82320},"end":{"line":2565,"column":33,"offset":82352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, indentation denote blocks of code. So if you want to put something in a ","position":{"start":{"line":2567,"column":1,"offset":82356},"end":{"line":2567,"column":84,"offset":82439}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":2567,"column":84,"offset":82439},"end":{"line":2567,"column":89,"offset":82444}}},{"type":"text","value":" loop, or outside it, proper indentation would be sufficient. In this step, let's explore indentation in depth. Let's start by creating a simple method.","position":{"start":{"line":2567,"column":89,"offset":82444},"end":{"line":2567,"column":241,"offset":82596}}}],"position":{"start":{"line":2567,"column":1,"offset":82356},"end":{"line":2567,"column":241,"offset":82596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":2569,"column":3,"offset":82602},"end":{"line":2569,"column":14,"offset":82613}}}],"position":{"start":{"line":2569,"column":1,"offset":82600},"end":{"line":2569,"column":16,"offset":82615}}}],"position":{"start":{"line":2569,"column":1,"offset":82600},"end":{"line":2569,"column":16,"offset":82615}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">method_to_understand_indentation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> method_to_understand_indentation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">10</span></code></pre></div>","position":{"start":{"line":2571,"column":1,"offset":82619},"end":{"line":2587,"column":4,"offset":82867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider the code below: ","position":{"start":{"line":2589,"column":1,"offset":82871},"end":{"line":2589,"column":26,"offset":82896}}},{"type":"raw","value":"<code class=\"language-text\">print(5)</code>","position":{"start":{"line":2589,"column":26,"offset":82896},"end":{"line":2589,"column":36,"offset":82906}}},{"type":"text","value":" is indented at the same level as ","position":{"start":{"line":2589,"column":36,"offset":82906},"end":{"line":2589,"column":70,"offset":82940}}},{"type":"raw","value":"<code class=\"language-text\">for loop</code>","position":{"start":{"line":2589,"column":70,"offset":82940},"end":{"line":2589,"column":80,"offset":82950}}},{"type":"text","value":".","position":{"start":{"line":2589,"column":80,"offset":82950},"end":{"line":2589,"column":81,"offset":82951}}}],"position":{"start":{"line":2589,"column":1,"offset":82871},"end":{"line":2589,"column":81,"offset":82951}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">method_to_understand_indentation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":2591,"column":1,"offset":82955},"end":{"line":2597,"column":4,"offset":83110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see that ","position":{"start":{"line":2599,"column":1,"offset":83114},"end":{"line":2599,"column":18,"offset":83131}}},{"type":"raw","value":"<code class=\"language-text\">print(5)</code>","position":{"start":{"line":2599,"column":18,"offset":83131},"end":{"line":2599,"column":28,"offset":83141}}},{"type":"text","value":" is called only once. It is not part of the ","position":{"start":{"line":2599,"column":28,"offset":83141},"end":{"line":2599,"column":72,"offset":83185}}},{"type":"raw","value":"<code class=\"language-text\">for loop</code>","position":{"start":{"line":2599,"column":72,"offset":83185},"end":{"line":2599,"column":82,"offset":83195}}},{"type":"text","value":".","position":{"start":{"line":2599,"column":82,"offset":83195},"end":{"line":2599,"column":83,"offset":83196}}}],"position":{"start":{"line":2599,"column":1,"offset":83114},"end":{"line":2599,"column":83,"offset":83196}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> method_to_understand_indentation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">10</span>\n    <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":2601,"column":1,"offset":83200},"end":{"line":2614,"column":4,"offset":83336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's change the code in this method a bit. ","position":{"start":{"line":2616,"column":1,"offset":83340},"end":{"line":2616,"column":45,"offset":83384}}},{"type":"raw","value":"<code class=\"language-text\">print(5)</code>","position":{"start":{"line":2616,"column":45,"offset":83384},"end":{"line":2616,"column":55,"offset":83394}}},{"type":"text","value":" is indented the same way as ","position":{"start":{"line":2616,"column":55,"offset":83394},"end":{"line":2616,"column":84,"offset":83423}}},{"type":"raw","value":"<code class=\"language-text\">print(i)</code>","position":{"start":{"line":2616,"column":84,"offset":83423},"end":{"line":2616,"column":94,"offset":83433}}}],"position":{"start":{"line":2616,"column":1,"offset":83340},"end":{"line":2616,"column":94,"offset":83433}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">method_to_understand_indentation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":2618,"column":1,"offset":83437},"end":{"line":2624,"column":4,"offset":83595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print(5)</code>","position":{"start":{"line":2626,"column":1,"offset":83599},"end":{"line":2626,"column":11,"offset":83609}}},{"type":"text","value":" is part of the for loop. It is executed 10 times.","position":{"start":{"line":2626,"column":11,"offset":83609},"end":{"line":2626,"column":61,"offset":83659}}}],"position":{"start":{"line":2626,"column":1,"offset":83599},"end":{"line":2626,"column":61,"offset":83659}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> method_to_understand_indentation<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">10</span>\n    <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":2628,"column":1,"offset":83663},"end":{"line":2650,"column":4,"offset":83862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Whether we're talking about loops, methods or conditionals, proper indentation is very important in Python.","position":{"start":{"line":2652,"column":1,"offset":83866},"end":{"line":2652,"column":108,"offset":83973}}}],"position":{"start":{"line":2652,"column":1,"offset":83866},"end":{"line":2652,"column":108,"offset":83973}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We indicate a block of code, by having all lines of that block at the same indentation level. There are no specific delimiters like for instance a pair of braces ","position":{"start":{"line":2654,"column":1,"offset":83977},"end":{"line":2654,"column":163,"offset":84139}}},{"type":"raw","value":"<code class=\"language-text\">{...}</code>","position":{"start":{"line":2654,"column":163,"offset":84139},"end":{"line":2654,"column":170,"offset":84146}}},{"type":"text","value":", as in other programming languages.","position":{"start":{"line":2654,"column":170,"offset":84146},"end":{"line":2654,"column":206,"offset":84182}}}],"position":{"start":{"line":2654,"column":1,"offset":83977},"end":{"line":2654,"column":206,"offset":84182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2656,"column":3,"offset":84188},"end":{"line":2656,"column":10,"offset":84195}}}],"position":{"start":{"line":2656,"column":1,"offset":84186},"end":{"line":2656,"column":12,"offset":84197}}}],"position":{"start":{"line":2656,"column":1,"offset":84186},"end":{"line":2656,"column":12,"offset":84197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2658,"column":1,"offset":84201},"end":{"line":2658,"column":18,"offset":84218}}}],"position":{"start":{"line":2658,"column":1,"offset":84201},"end":{"line":2658,"column":18,"offset":84218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Ran through a few examples to see how indentation works in Python","position":{"start":{"line":2660,"column":5,"offset":84226},"end":{"line":2660,"column":70,"offset":84291}}}],"position":{"start":{"line":2660,"column":1,"offset":84222},"end":{"line":2660,"column":70,"offset":84291}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2660,"column":1,"offset":84222},"end":{"line":2660,"column":70,"offset":84291}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 08: Puzzles on Methods - Named Parameters","position":{"start":{"line":2662,"column":3,"offset":84297},"end":{"line":2662,"column":49,"offset":84343}}}],"position":{"start":{"line":2662,"column":1,"offset":84295},"end":{"line":2662,"column":51,"offset":84345}}}],"position":{"start":{"line":2662,"column":1,"offset":84295},"end":{"line":2662,"column":51,"offset":84345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at a variety of puzzles related to methods.","position":{"start":{"line":2664,"column":1,"offset":84349},"end":{"line":2664,"column":69,"offset":84417}}}],"position":{"start":{"line":2664,"column":1,"offset":84349},"end":{"line":2664,"column":69,"offset":84417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":2666,"column":3,"offset":84423},"end":{"line":2666,"column":14,"offset":84434}}}],"position":{"start":{"line":2666,"column":1,"offset":84421},"end":{"line":2666,"column":16,"offset":84436}}}],"position":{"start":{"line":2666,"column":1,"offset":84421},"end":{"line":2666,"column":16,"offset":84436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider the following method: I would want to print the default string 6 times. How do we do it?","position":{"start":{"line":2668,"column":1,"offset":84440},"end":{"line":2668,"column":98,"offset":84537}}}],"position":{"start":{"line":2668,"column":1,"offset":84440},"end":{"line":2668,"column":98,"offset":84537}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">print_string</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">,</span> no_of_times<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>no_of_times<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2670,"column":1,"offset":84541},"end":{"line":2681,"column":4,"offset":84807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Will it work if we call the method as in: ","position":{"start":{"line":2683,"column":1,"offset":84811},"end":{"line":2683,"column":43,"offset":84853}}},{"type":"raw","value":"<code class=\"language-text\">print_string(6)</code>","position":{"start":{"line":2683,"column":43,"offset":84853},"end":{"line":2683,"column":60,"offset":84870}}},{"type":"text","value":"?","position":{"start":{"line":2683,"column":60,"offset":84870},"end":{"line":2683,"column":61,"offset":84871}}}],"position":{"start":{"line":2683,"column":1,"offset":84811},"end":{"line":2683,"column":61,"offset":84871}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":2685,"column":1,"offset":84875},"end":{"line":2692,"column":4,"offset":84949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":2694,"column":1,"offset":84953},"end":{"line":2694,"column":4,"offset":84956}}},{"type":"text","value":" is passed as the first parameter. ","position":{"start":{"line":2694,"column":4,"offset":84956},"end":{"line":2694,"column":39,"offset":84991}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":2694,"column":39,"offset":84991},"end":{"line":2694,"column":42,"offset":84994}}},{"type":"text","value":" is matched to ","position":{"start":{"line":2694,"column":42,"offset":84994},"end":{"line":2694,"column":57,"offset":85009}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":2694,"column":57,"offset":85009},"end":{"line":2694,"column":62,"offset":85014}}},{"type":"text","value":", and the method prints ","position":{"start":{"line":2694,"column":62,"offset":85014},"end":{"line":2694,"column":86,"offset":85038}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":2694,"column":86,"offset":85038},"end":{"line":2694,"column":89,"offset":85041}}},{"type":"text","value":" the default number of times, which is ","position":{"start":{"line":2694,"column":89,"offset":85041},"end":{"line":2694,"column":128,"offset":85080}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":2694,"column":128,"offset":85080},"end":{"line":2694,"column":131,"offset":85083}}},{"type":"text","value":".","position":{"start":{"line":2694,"column":131,"offset":85083},"end":{"line":2694,"column":132,"offset":85084}}}],"position":{"start":{"line":2694,"column":1,"offset":84953},"end":{"line":2694,"column":132,"offset":85084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"to default to ","position":{"start":{"line":2696,"column":1,"offset":85088},"end":{"line":2696,"column":15,"offset":85102}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2696,"column":15,"offset":85102},"end":{"line":2696,"column":30,"offset":85117}}},{"type":"text","value":", and print it ","position":{"start":{"line":2696,"column":30,"offset":85117},"end":{"line":2696,"column":45,"offset":85132}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":2696,"column":45,"offset":85132},"end":{"line":2696,"column":48,"offset":85135}}},{"type":"text","value":" times.","position":{"start":{"line":2696,"column":48,"offset":85135},"end":{"line":2696,"column":55,"offset":85142}}}],"position":{"start":{"line":2696,"column":1,"offset":85088},"end":{"line":2696,"column":55,"offset":85142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can do this in Python by using ","position":{"start":{"line":2698,"column":1,"offset":85146},"end":{"line":2698,"column":36,"offset":85181}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"named parameters","position":{"start":{"line":2698,"column":38,"offset":85183},"end":{"line":2698,"column":54,"offset":85199}}}],"position":{"start":{"line":2698,"column":36,"offset":85181},"end":{"line":2698,"column":56,"offset":85201}}},{"type":"text","value":". During the method call, you can specify ","position":{"start":{"line":2698,"column":56,"offset":85201},"end":{"line":2698,"column":98,"offset":85243}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times = 6</code>","position":{"start":{"line":2698,"column":98,"offset":85243},"end":{"line":2698,"column":115,"offset":85260}}},{"type":"text","value":". ","position":{"start":{"line":2698,"column":115,"offset":85260},"end":{"line":2698,"column":117,"offset":85262}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2698,"column":119,"offset":85264},"end":{"line":2698,"column":132,"offset":85277}}}],"position":{"start":{"line":2698,"column":117,"offset":85262},"end":{"line":2698,"column":134,"offset":85279}}},{"type":"text","value":" is a named parameter.","position":{"start":{"line":2698,"column":134,"offset":85279},"end":{"line":2698,"column":156,"offset":85301}}}],"position":{"start":{"line":2698,"column":1,"offset":85146},"end":{"line":2698,"column":156,"offset":85301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There is no provision of doing something like this, in other languages like Java.","position":{"start":{"line":2700,"column":3,"offset":85307},"end":{"line":2700,"column":84,"offset":85388}}}],"position":{"start":{"line":2700,"column":3,"offset":85307},"end":{"line":2700,"column":84,"offset":85388}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2700,"column":1,"offset":85305},"end":{"line":2700,"column":84,"offset":85388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Call it as ","position":{"start":{"line":2702,"column":1,"offset":85392},"end":{"line":2702,"column":12,"offset":85403}}},{"type":"raw","value":"<code class=\"language-text\">print_string(no_of_times=6)</code>","position":{"start":{"line":2702,"column":12,"offset":85403},"end":{"line":2702,"column":41,"offset":85432}}},{"type":"text","value":":","position":{"start":{"line":2702,"column":41,"offset":85432},"end":{"line":2702,"column":42,"offset":85433}}}],"position":{"start":{"line":2702,"column":1,"offset":85392},"end":{"line":2702,"column":42,"offset":85433}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span>no_of_times<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World\n    Hello World</code></pre></div>","position":{"start":{"line":2704,"column":1,"offset":85437},"end":{"line":2712,"column":4,"offset":85590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":2714,"column":1,"offset":85594},"end":{"line":2714,"column":6,"offset":85599}}},{"type":"text","value":" gets a default value, and ","position":{"start":{"line":2714,"column":6,"offset":85599},"end":{"line":2714,"column":33,"offset":85626}}},{"type":"raw","value":"<code class=\"language-text\">\"Hello World\"</code>","position":{"start":{"line":2714,"column":33,"offset":85626},"end":{"line":2714,"column":48,"offset":85641}}},{"type":"text","value":" is printed ","position":{"start":{"line":2714,"column":48,"offset":85641},"end":{"line":2714,"column":60,"offset":85653}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":2714,"column":60,"offset":85653},"end":{"line":2714,"column":63,"offset":85656}}},{"type":"text","value":" times.","position":{"start":{"line":2714,"column":63,"offset":85656},"end":{"line":2714,"column":70,"offset":85663}}}],"position":{"start":{"line":2714,"column":1,"offset":85594},"end":{"line":2714,"column":70,"offset":85663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Named parameters are very useful, when a method has a number of parameters, and you would want to make it very clear which parameter you're passing a value for.","position":{"start":{"line":2716,"column":1,"offset":85667},"end":{"line":2716,"column":161,"offset":85827}}}],"position":{"start":{"line":2716,"column":1,"offset":85667},"end":{"line":2716,"column":161,"offset":85827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's call ","position":{"start":{"line":2718,"column":1,"offset":85831},"end":{"line":2718,"column":12,"offset":85842}}},{"type":"raw","value":"<code class=\"language-text\">print_string(7, 8)</code>","position":{"start":{"line":2718,"column":12,"offset":85842},"end":{"line":2718,"column":32,"offset":85862}}},{"type":"text","value":". what happens?","position":{"start":{"line":2718,"column":32,"offset":85862},"end":{"line":2718,"column":47,"offset":85877}}}],"position":{"start":{"line":2718,"column":1,"offset":85831},"end":{"line":2718,"column":47,"offset":85877}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">7</span></code></pre></div>","position":{"start":{"line":2720,"column":1,"offset":85881},"end":{"line":2730,"column":4,"offset":85979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You would see that ","position":{"start":{"line":2732,"column":1,"offset":85983},"end":{"line":2732,"column":20,"offset":86002}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":2732,"column":20,"offset":86002},"end":{"line":2732,"column":23,"offset":86005}}},{"type":"text","value":" is printed ","position":{"start":{"line":2732,"column":23,"offset":86005},"end":{"line":2732,"column":35,"offset":86017}}},{"type":"raw","value":"<code class=\"language-text\">8</code>","position":{"start":{"line":2732,"column":35,"offset":86017},"end":{"line":2732,"column":38,"offset":86020}}},{"type":"text","value":" times.","position":{"start":{"line":2732,"column":38,"offset":86020},"end":{"line":2732,"column":45,"offset":86027}}}],"position":{"start":{"line":2732,"column":1,"offset":85983},"end":{"line":2732,"column":45,"offset":86027}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since ","position":{"start":{"line":2734,"column":1,"offset":86031},"end":{"line":2734,"column":7,"offset":86037}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":2734,"column":7,"offset":86037},"end":{"line":2734,"column":16,"offset":86046}}},{"type":"text","value":" method is quite flexible, you can pass a number as the first argument. You can even pass a ","position":{"start":{"line":2734,"column":16,"offset":86046},"end":{"line":2734,"column":108,"offset":86138}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":2734,"column":108,"offset":86138},"end":{"line":2734,"column":115,"offset":86145}}},{"type":"text","value":".","position":{"start":{"line":2734,"column":115,"offset":86145},"end":{"line":2734,"column":116,"offset":86146}}}],"position":{"start":{"line":2734,"column":1,"offset":86031},"end":{"line":2734,"column":116,"offset":86146}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">7.5</span>\n    <span class=\"token number\">7.5</span>\n    <span class=\"token number\">7.5</span>\n    <span class=\"token number\">7.5</span>\n    <span class=\"token number\">7.5</span>\n    <span class=\"token number\">7.5</span>\n    <span class=\"token number\">7.5</span>\n    <span class=\"token number\">7.5</span></code></pre></div>","position":{"start":{"line":2736,"column":1,"offset":86150},"end":{"line":2746,"column":4,"offset":86266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What would be the result of this - ","position":{"start":{"line":2748,"column":1,"offset":86270},"end":{"line":2748,"column":36,"offset":86305}}},{"type":"raw","value":"<code class=\"language-text\">print_string(7.5, \"eight\")</code>","position":{"start":{"line":2748,"column":36,"offset":86305},"end":{"line":2748,"column":64,"offset":86333}}},{"type":"text","value":"?","position":{"start":{"line":2748,"column":64,"offset":86333},"end":{"line":2748,"column":65,"offset":86334}}}],"position":{"start":{"line":2748,"column":1,"offset":86270},"end":{"line":2748,"column":65,"offset":86334}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> print_string<span class=\"token punctuation\">(</span><span class=\"token number\">7.5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"eight\"</span><span class=\"token punctuation\">)</span>\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> print_string\n    TypeError<span class=\"token punctuation\">:</span> must be <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">int</span></code></pre></div>","position":{"start":{"line":2750,"column":1,"offset":86338},"end":{"line":2756,"column":4,"offset":86555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note how ","position":{"start":{"line":2758,"column":1,"offset":86559},"end":{"line":2758,"column":10,"offset":86568}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2758,"column":10,"offset":86568},"end":{"line":2758,"column":23,"offset":86581}}},{"type":"text","value":" is used inside the method… as an argument to ","position":{"start":{"line":2758,"column":23,"offset":86581},"end":{"line":2758,"column":69,"offset":86627}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":2758,"column":69,"offset":86627},"end":{"line":2758,"column":78,"offset":86636}}},{"type":"text","value":". ","position":{"start":{"line":2758,"column":78,"offset":86636},"end":{"line":2758,"column":80,"offset":86638}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":2758,"column":80,"offset":86638},"end":{"line":2758,"column":89,"offset":86647}}},{"type":"text","value":" only accepts integers, nothing else. When you run the code with ","position":{"start":{"line":2758,"column":89,"offset":86647},"end":{"line":2758,"column":154,"offset":86712}}},{"type":"raw","value":"<code class=\"language-text\">print_string(7.5, \"eight\")</code>","position":{"start":{"line":2758,"column":154,"offset":86712},"end":{"line":2758,"column":182,"offset":86740}}},{"type":"text","value":", we get an error.","position":{"start":{"line":2758,"column":182,"offset":86740},"end":{"line":2758,"column":200,"offset":86758}}}],"position":{"start":{"line":2758,"column":1,"offset":86559},"end":{"line":2758,"column":200,"offset":86758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It says: ","position":{"start":{"line":2760,"column":1,"offset":86762},"end":{"line":2760,"column":10,"offset":86771}}},{"type":"raw","value":"<code class=\"language-text\">TypeError: ```no_of_times``` must be ```int```, not string</code>","position":{"start":{"line":2760,"column":10,"offset":86771},"end":{"line":2760,"column":72,"offset":86833}}},{"type":"text","value":".","position":{"start":{"line":2760,"column":72,"offset":86833},"end":{"line":2760,"column":73,"offset":86834}}}],"position":{"start":{"line":2760,"column":1,"offset":86762},"end":{"line":2760,"column":73,"offset":86834}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A simple rule of thumb is, if you have a parameter, you can pass any type of data to it. That could be an integer, a floating point value a string, or a boolean value. The Python language does not check for the type of a parameter. However, Python will throw an error if the function which is using that parameter, expects it to be of a specific type. The ","position":{"start":{"line":2762,"column":1,"offset":86838},"end":{"line":2762,"column":357,"offset":87194}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":2762,"column":357,"offset":87194},"end":{"line":2762,"column":366,"offset":87203}}},{"type":"text","value":" function expects that the ","position":{"start":{"line":2762,"column":366,"offset":87203},"end":{"line":2762,"column":393,"offset":87230}}},{"type":"raw","value":"<code class=\"language-text\">no_of_times</code>","position":{"start":{"line":2762,"column":393,"offset":87230},"end":{"line":2762,"column":406,"offset":87243}}},{"type":"text","value":" is an integer value.","position":{"start":{"line":2762,"column":406,"offset":87243},"end":{"line":2762,"column":427,"offset":87264}}}],"position":{"start":{"line":2762,"column":1,"offset":86838},"end":{"line":2762,"column":427,"offset":87264}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-02:","position":{"start":{"line":2764,"column":3,"offset":87270},"end":{"line":2764,"column":14,"offset":87281}}}],"position":{"start":{"line":2764,"column":1,"offset":87268},"end":{"line":2764,"column":16,"offset":87283}}}],"position":{"start":{"line":2764,"column":1,"offset":87268},"end":{"line":2764,"column":16,"offset":87283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The last thing which we would be looking at, is method naming conventions. We named our methods in a consistent way: ","position":{"start":{"line":2766,"column":1,"offset":87287},"end":{"line":2766,"column":118,"offset":87404}}},{"type":"raw","value":"<code class=\"language-text\">print_string</code>","position":{"start":{"line":2766,"column":118,"offset":87404},"end":{"line":2766,"column":132,"offset":87418}}},{"type":"text","value":", ","position":{"start":{"line":2766,"column":132,"offset":87418},"end":{"line":2766,"column":134,"offset":87420}}},{"type":"raw","value":"<code class=\"language-text\">print_multiplication_table</code>","position":{"start":{"line":2766,"column":134,"offset":87420},"end":{"line":2766,"column":162,"offset":87448}}},{"type":"text","value":", and the like.","position":{"start":{"line":2766,"column":162,"offset":87448},"end":{"line":2766,"column":177,"offset":87463}}}],"position":{"start":{"line":2766,"column":1,"offset":87287},"end":{"line":2766,"column":177,"offset":87463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is exactly the format which most Python developers use, to name their methods.","position":{"start":{"line":2768,"column":1,"offset":87467},"end":{"line":2768,"column":84,"offset":87550}}}],"position":{"start":{"line":2768,"column":1,"offset":87467},"end":{"line":2768,"column":84,"offset":87550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Convention is to use underscore to separate words in a name.","position":{"start":{"line":2770,"column":1,"offset":87554},"end":{"line":2770,"column":61,"offset":87614}}}],"position":{"start":{"line":2770,"column":1,"offset":87554},"end":{"line":2770,"column":61,"offset":87614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, there are a few rules for naming a method: One of the important rules is also related to variable names. We observed that a variable name cannot start with a number.","position":{"start":{"line":2772,"column":1,"offset":87618},"end":{"line":2772,"column":175,"offset":87792}}}],"position":{"start":{"line":2772,"column":1,"offset":87618},"end":{"line":2772,"column":175,"offset":87792}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> 1_print<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token keyword\">def</span> 1_print<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n             <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid token</code></pre></div>","position":{"start":{"line":2774,"column":1,"offset":87796},"end":{"line":2780,"column":4,"offset":87936}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Similarly, ","position":{"start":{"line":2782,"column":1,"offset":87940},"end":{"line":2782,"column":12,"offset":87951}}},{"type":"raw","value":"<code class=\"language-text\">1_print</code>","position":{"start":{"line":2782,"column":12,"offset":87951},"end":{"line":2782,"column":21,"offset":87960}}},{"type":"text","value":" will not be accepted as a method name.","position":{"start":{"line":2782,"column":21,"offset":87960},"end":{"line":2782,"column":60,"offset":87999}}}],"position":{"start":{"line":2782,"column":1,"offset":87940},"end":{"line":2782,"column":60,"offset":87999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You can start a name with an alphabet, or with an underscore.","position":{"start":{"line":2784,"column":5,"offset":88007},"end":{"line":2784,"column":66,"offset":88068}}}],"position":{"start":{"line":2784,"column":1,"offset":88003},"end":{"line":2784,"column":66,"offset":88068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"From the second character onward, you are allowed to use numeric symbols.","position":{"start":{"line":2785,"column":5,"offset":88074},"end":{"line":2785,"column":78,"offset":88147}}}],"position":{"start":{"line":2785,"column":1,"offset":88070},"end":{"line":2785,"column":78,"offset":88147}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2784,"column":1,"offset":88003},"end":{"line":2785,"column":78,"offset":88147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Methods and variables cannot be named using Python keywords.","position":{"start":{"line":2787,"column":1,"offset":88151},"end":{"line":2787,"column":61,"offset":88211}}}],"position":{"start":{"line":2787,"column":1,"offset":88151},"end":{"line":2787,"column":61,"offset":88211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now, what is a keyword? For example, when we talked about ","position":{"start":{"line":2789,"column":1,"offset":88215},"end":{"line":2789,"column":59,"offset":88273}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":2789,"column":59,"offset":88273},"end":{"line":2789,"column":64,"offset":88278}}},{"type":"text","value":" loop, as in:","position":{"start":{"line":2789,"column":64,"offset":88278},"end":{"line":2789,"column":77,"offset":88291}}}],"position":{"start":{"line":2789,"column":1,"offset":88215},"end":{"line":2789,"column":77,"offset":88291}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">```<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>```<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":2791,"column":1,"offset":88295},"end":{"line":2793,"column":4,"offset":88351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":2795,"column":7,"offset":88361},"end":{"line":2795,"column":12,"offset":88366}}}],"position":{"start":{"line":2795,"column":5,"offset":88359},"end":{"line":2795,"column":14,"offset":88368}}},{"type":"text","value":" is a keyword","position":{"start":{"line":2795,"column":14,"offset":88368},"end":{"line":2795,"column":27,"offset":88381}}}],"position":{"start":{"line":2795,"column":1,"offset":88355},"end":{"line":2795,"column":27,"offset":88381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">in</code>","position":{"start":{"line":2796,"column":7,"offset":88389},"end":{"line":2796,"column":11,"offset":88393}}}],"position":{"start":{"line":2796,"column":5,"offset":88387},"end":{"line":2796,"column":13,"offset":88395}}},{"type":"text","value":" is a keyword","position":{"start":{"line":2796,"column":13,"offset":88395},"end":{"line":2796,"column":26,"offset":88408}}}],"position":{"start":{"line":2796,"column":1,"offset":88383},"end":{"line":2796,"column":26,"offset":88408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">def</code>","position":{"start":{"line":2797,"column":7,"offset":88416},"end":{"line":2797,"column":12,"offset":88421}}}],"position":{"start":{"line":2797,"column":5,"offset":88414},"end":{"line":2797,"column":14,"offset":88423}}},{"type":"text","value":" is a keyword.","position":{"start":{"line":2797,"column":14,"offset":88423},"end":{"line":2797,"column":28,"offset":88437}}}],"position":{"start":{"line":2797,"column":1,"offset":88410},"end":{"line":2797,"column":28,"offset":88437}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2795,"column":1,"offset":88355},"end":{"line":2797,"column":28,"offset":88437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Later we will look at a few other keywords, such as ","position":{"start":{"line":2799,"column":1,"offset":88441},"end":{"line":2799,"column":53,"offset":88493}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":2799,"column":55,"offset":88495},"end":{"line":2799,"column":62,"offset":88502}}}],"position":{"start":{"line":2799,"column":53,"offset":88493},"end":{"line":2799,"column":64,"offset":88504}}},{"type":"text","value":", ","position":{"start":{"line":2799,"column":64,"offset":88504},"end":{"line":2799,"column":66,"offset":88506}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">return</code>","position":{"start":{"line":2799,"column":68,"offset":88508},"end":{"line":2799,"column":76,"offset":88516}}}],"position":{"start":{"line":2799,"column":66,"offset":88506},"end":{"line":2799,"column":78,"offset":88518}}},{"type":"text","value":", ","position":{"start":{"line":2799,"column":78,"offset":88518},"end":{"line":2799,"column":80,"offset":88520}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":2799,"column":82,"offset":88522},"end":{"line":2799,"column":86,"offset":88526}}}],"position":{"start":{"line":2799,"column":80,"offset":88520},"end":{"line":2799,"column":88,"offset":88528}}},{"type":"text","value":", ","position":{"start":{"line":2799,"column":88,"offset":88528},"end":{"line":2799,"column":90,"offset":88530}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":2799,"column":92,"offset":88532},"end":{"line":2799,"column":98,"offset":88538}}}],"position":{"start":{"line":2799,"column":90,"offset":88530},"end":{"line":2799,"column":100,"offset":88540}}},{"type":"text","value":", ","position":{"start":{"line":2799,"column":100,"offset":88540},"end":{"line":2799,"column":102,"offset":88542}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":2799,"column":104,"offset":88544},"end":{"line":2799,"column":110,"offset":88550}}}],"position":{"start":{"line":2799,"column":102,"offset":88542},"end":{"line":2799,"column":112,"offset":88552}}},{"type":"text","value":", and many more.","position":{"start":{"line":2799,"column":112,"offset":88552},"end":{"line":2799,"column":128,"offset":88568}}}],"position":{"start":{"line":2799,"column":1,"offset":88441},"end":{"line":2799,"column":128,"offset":88568}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">def</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token keyword\">def</span> <span class=\"token function\">def</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n              <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">in</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token keyword\">def</span> <span class=\"token function\">in</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n             <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        <span class=\"token keyword\">def</span> <span class=\"token function\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n              <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax</code></pre></div>","position":{"start":{"line":2801,"column":1,"offset":88572},"end":{"line":2817,"column":4,"offset":88943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2819,"column":3,"offset":88949},"end":{"line":2819,"column":10,"offset":88956}}}],"position":{"start":{"line":2819,"column":1,"offset":88947},"end":{"line":2819,"column":12,"offset":88958}}}],"position":{"start":{"line":2819,"column":1,"offset":88947},"end":{"line":2819,"column":12,"offset":88958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2821,"column":1,"offset":88962},"end":{"line":2821,"column":18,"offset":88979}}}],"position":{"start":{"line":2821,"column":1,"offset":88962},"end":{"line":2821,"column":18,"offset":88979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Were introduced to the concept of named parameters","position":{"start":{"line":2823,"column":5,"offset":88987},"end":{"line":2823,"column":55,"offset":89037}}}],"position":{"start":{"line":2823,"column":1,"offset":88983},"end":{"line":2823,"column":55,"offset":89037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Explored the typical naming rules and conventions for methods in Python","position":{"start":{"line":2824,"column":5,"offset":89043},"end":{"line":2824,"column":76,"offset":89114}}}],"position":{"start":{"line":2824,"column":1,"offset":89039},"end":{"line":2824,"column":76,"offset":89114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Observed that reserved keywords cannot be used to name variables or methods","position":{"start":{"line":2825,"column":5,"offset":89120},"end":{"line":2825,"column":80,"offset":89195}}}],"position":{"start":{"line":2825,"column":1,"offset":89116},"end":{"line":2825,"column":80,"offset":89195}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2823,"column":1,"offset":88983},"end":{"line":2825,"column":80,"offset":89195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 09: Methods - Return Values","position":{"start":{"line":2827,"column":3,"offset":89201},"end":{"line":2827,"column":35,"offset":89233}}}],"position":{"start":{"line":2827,"column":1,"offset":89199},"end":{"line":2827,"column":37,"offset":89235}}}],"position":{"start":{"line":2827,"column":1,"offset":89199},"end":{"line":2827,"column":37,"offset":89235}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try and understand the importance of return values from a method. We will learn how to return a value from a method.","position":{"start":{"line":2829,"column":1,"offset":89239},"end":{"line":2829,"column":123,"offset":89361}}}],"position":{"start":{"line":2829,"column":1,"offset":89239},"end":{"line":2829,"column":123,"offset":89361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":2831,"column":3,"offset":89367},"end":{"line":2831,"column":14,"offset":89378}}}],"position":{"start":{"line":2831,"column":1,"offset":89365},"end":{"line":2831,"column":16,"offset":89380}}}],"position":{"start":{"line":2831,"column":1,"offset":89365},"end":{"line":2831,"column":16,"offset":89380}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's name our method as ","position":{"start":{"line":2833,"column":1,"offset":89384},"end":{"line":2833,"column":26,"offset":89409}}},{"type":"raw","value":"<code class=\"language-text\">product_of_two_numbers()</code>","position":{"start":{"line":2833,"column":26,"offset":89409},"end":{"line":2833,"column":52,"offset":89435}}},{"type":"text","value":", and let's have parameters ","position":{"start":{"line":2833,"column":52,"offset":89435},"end":{"line":2833,"column":80,"offset":89463}}},{"type":"raw","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":2833,"column":80,"offset":89463},"end":{"line":2833,"column":83,"offset":89466}}},{"type":"text","value":" and ","position":{"start":{"line":2833,"column":83,"offset":89466},"end":{"line":2833,"column":88,"offset":89471}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":2833,"column":88,"offset":89471},"end":{"line":2833,"column":91,"offset":89474}}},{"type":"text","value":" that it accepts:","position":{"start":{"line":2833,"column":91,"offset":89474},"end":{"line":2833,"column":108,"offset":89491}}}],"position":{"start":{"line":2833,"column":1,"offset":89384},"end":{"line":2833,"column":108,"offset":89491}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">product_of_two_numbers</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> product_of_two_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":2835,"column":1,"offset":89495},"end":{"line":2841,"column":4,"offset":89630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Can we take the product of these two numbers into a variable, and use it in other code, in the same program?","position":{"start":{"line":2843,"column":1,"offset":89634},"end":{"line":2843,"column":109,"offset":89742}}}],"position":{"start":{"line":2843,"column":1,"offset":89634},"end":{"line":2843,"column":109,"offset":89742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Suppose we say a ","position":{"start":{"line":2845,"column":1,"offset":89746},"end":{"line":2845,"column":18,"offset":89763}}},{"type":"raw","value":"<code class=\"language-text\">product = product_of_two_numbers(1,2)</code>","position":{"start":{"line":2845,"column":18,"offset":89763},"end":{"line":2845,"column":57,"offset":89802}}},{"type":"text","value":", is this allowed?","position":{"start":{"line":2845,"column":57,"offset":89802},"end":{"line":2845,"column":75,"offset":89820}}}],"position":{"start":{"line":2845,"column":1,"offset":89746},"end":{"line":2845,"column":75,"offset":89820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's run this code, and see what's stored in ","position":{"start":{"line":2847,"column":1,"offset":89824},"end":{"line":2847,"column":47,"offset":89870}}},{"type":"raw","value":"<code class=\"language-text\">product</code>","position":{"start":{"line":2847,"column":47,"offset":89870},"end":{"line":2847,"column":56,"offset":89879}}},{"type":"text","value":".","position":{"start":{"line":2847,"column":56,"offset":89879},"end":{"line":2847,"column":57,"offset":89880}}}],"position":{"start":{"line":2847,"column":1,"offset":89824},"end":{"line":2847,"column":57,"offset":89880}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> product <span class=\"token operator\">=</span> product_of_two_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> product</code></pre></div>","position":{"start":{"line":2849,"column":1,"offset":89884},"end":{"line":2853,"column":4,"offset":89969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's empty.","position":{"start":{"line":2855,"column":1,"offset":89973},"end":{"line":2855,"column":12,"offset":89984}}}],"position":{"start":{"line":2855,"column":1,"offset":89973},"end":{"line":2855,"column":12,"offset":89984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":2857,"column":1,"offset":89988},"end":{"line":2857,"column":5,"offset":89992}}},{"type":"raw","value":"<code class=\"language-text\">product_of_two_numbers()</code>","position":{"start":{"line":2857,"column":5,"offset":89992},"end":{"line":2857,"column":31,"offset":90018}}},{"type":"text","value":" method is not really returning anything back, to be used elsewhere.","position":{"start":{"line":2857,"column":31,"offset":90018},"end":{"line":2857,"column":99,"offset":90086}}}],"position":{"start":{"line":2857,"column":1,"offset":89988},"end":{"line":2857,"column":99,"offset":90086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Have a look at some of the built-in Python functions, such as ","position":{"start":{"line":2859,"column":1,"offset":90090},"end":{"line":2859,"column":63,"offset":90152}}},{"type":"raw","value":"<code class=\"language-text\">max()</code>","position":{"start":{"line":2859,"column":63,"offset":90152},"end":{"line":2859,"column":70,"offset":90159}}},{"type":"text","value":" for example.","position":{"start":{"line":2859,"column":70,"offset":90159},"end":{"line":2859,"column":83,"offset":90172}}}],"position":{"start":{"line":2859,"column":1,"offset":90090},"end":{"line":2859,"column":83,"offset":90172}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> maximum <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> maximum\n    <span class=\"token number\">4</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> maximum <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\n    <span class=\"token number\">20</span></code></pre></div>","position":{"start":{"line":2861,"column":1,"offset":90176},"end":{"line":2871,"column":4,"offset":90331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If I call ","position":{"start":{"line":2873,"column":1,"offset":90335},"end":{"line":2873,"column":11,"offset":90345}}},{"type":"raw","value":"<code class=\"language-text\">max()</code>","position":{"start":{"line":2873,"column":11,"offset":90345},"end":{"line":2873,"column":18,"offset":90352}}},{"type":"text","value":" with four parameters, as in ","position":{"start":{"line":2873,"column":18,"offset":90352},"end":{"line":2873,"column":47,"offset":90381}}},{"type":"raw","value":"<code class=\"language-text\">maximum = max(1,2,3,4)</code>","position":{"start":{"line":2873,"column":47,"offset":90381},"end":{"line":2873,"column":71,"offset":90405}}},{"type":"text","value":", the value ","position":{"start":{"line":2873,"column":71,"offset":90405},"end":{"line":2873,"column":83,"offset":90417}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":2873,"column":83,"offset":90417},"end":{"line":2873,"column":86,"offset":90420}}},{"type":"text","value":" gets stored in maximum.","position":{"start":{"line":2873,"column":86,"offset":90420},"end":{"line":2873,"column":110,"offset":90444}}}],"position":{"start":{"line":2873,"column":1,"offset":90335},"end":{"line":2873,"column":110,"offset":90444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Later on in the code that follows, we can say ","position":{"start":{"line":2875,"column":1,"offset":90448},"end":{"line":2875,"column":47,"offset":90494}}},{"type":"raw","value":"<code class=\"language-text\">maximum * 5</code>","position":{"start":{"line":2875,"column":47,"offset":90494},"end":{"line":2875,"column":60,"offset":90507}}},{"type":"text","value":", or we can print the value of ","position":{"start":{"line":2875,"column":60,"offset":90507},"end":{"line":2875,"column":91,"offset":90538}}},{"type":"raw","value":"<code class=\"language-text\">maximum</code>","position":{"start":{"line":2875,"column":91,"offset":90538},"end":{"line":2875,"column":100,"offset":90547}}},{"type":"text","value":", or a similar calculation. This gives our programs a lot more flexibility.","position":{"start":{"line":2875,"column":100,"offset":90547},"end":{"line":2875,"column":175,"offset":90622}}}],"position":{"start":{"line":2875,"column":1,"offset":90448},"end":{"line":2875,"column":175,"offset":90622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So instead of just printing ","position":{"start":{"line":2877,"column":1,"offset":90626},"end":{"line":2877,"column":29,"offset":90654}}},{"type":"raw","value":"<code class=\"language-text\">a*b</code>","position":{"start":{"line":2877,"column":29,"offset":90654},"end":{"line":2877,"column":34,"offset":90659}}},{"type":"text","value":", if this function could return a value, that would be quite useful.","position":{"start":{"line":2877,"column":34,"offset":90659},"end":{"line":2877,"column":102,"offset":90727}}}],"position":{"start":{"line":2877,"column":1,"offset":90626},"end":{"line":2877,"column":102,"offset":90727}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">product_of_two_numbers</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>      product <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>      <span class=\"token keyword\">return</span> product\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> product_of_two_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":2879,"column":1,"offset":90731},"end":{"line":2886,"column":4,"offset":90900}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We are creating a variable ","position":{"start":{"line":2888,"column":1,"offset":90904},"end":{"line":2888,"column":28,"offset":90931}}},{"type":"raw","value":"<code class=\"language-text\">product</code>","position":{"start":{"line":2888,"column":28,"offset":90931},"end":{"line":2888,"column":37,"offset":90940}}},{"type":"text","value":" and doing a ","position":{"start":{"line":2888,"column":37,"offset":90940},"end":{"line":2888,"column":50,"offset":90953}}},{"type":"raw","value":"<code class=\"language-text\">return product</code>","position":{"start":{"line":2888,"column":50,"offset":90953},"end":{"line":2888,"column":66,"offset":90969}}},{"type":"text","value":".","position":{"start":{"line":2888,"column":66,"offset":90969},"end":{"line":2888,"column":67,"offset":90970}}}],"position":{"start":{"line":2888,"column":1,"offset":90904},"end":{"line":2888,"column":67,"offset":90970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lets run ","position":{"start":{"line":2890,"column":1,"offset":90974},"end":{"line":2890,"column":10,"offset":90983}}},{"type":"raw","value":"<code class=\"language-text\">product_result = product_of_two_numbers(2, 3)</code>","position":{"start":{"line":2890,"column":10,"offset":90983},"end":{"line":2890,"column":57,"offset":91030}}}],"position":{"start":{"line":2890,"column":1,"offset":90974},"end":{"line":2890,"column":57,"offset":91030}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> product_result <span class=\"token operator\">=</span> product_of_two_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> product_result\n    <span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> product_result <span class=\"token operator\">*</span> <span class=\"token number\">10</span>\n    <span class=\"token number\">60</span></code></pre></div>","position":{"start":{"line":2892,"column":1,"offset":91034},"end":{"line":2898,"column":4,"offset":91170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see how simple it is to return values from a method!","position":{"start":{"line":2900,"column":1,"offset":91174},"end":{"line":2900,"column":61,"offset":91234}}}],"position":{"start":{"line":2900,"column":1,"offset":91174},"end":{"line":2900,"column":61,"offset":91234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2902,"column":3,"offset":91240},"end":{"line":2902,"column":10,"offset":91247}}}],"position":{"start":{"line":2902,"column":1,"offset":91238},"end":{"line":2902,"column":12,"offset":91249}}}],"position":{"start":{"line":2902,"column":1,"offset":91238},"end":{"line":2902,"column":12,"offset":91249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2904,"column":1,"offset":91253},"end":{"line":2904,"column":18,"offset":91270}}}],"position":{"start":{"line":2904,"column":1,"offset":91253},"end":{"line":2904,"column":18,"offset":91270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned how to return values from inside a method","position":{"start":{"line":2906,"column":5,"offset":91278},"end":{"line":2906,"column":54,"offset":91327}}}],"position":{"start":{"line":2906,"column":1,"offset":91274},"end":{"line":2906,"column":54,"offset":91327}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Observed how we can store the values returned by a method call","position":{"start":{"line":2907,"column":5,"offset":91333},"end":{"line":2907,"column":67,"offset":91395}}}],"position":{"start":{"line":2907,"column":1,"offset":91329},"end":{"line":2907,"column":67,"offset":91395}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2906,"column":1,"offset":91274},"end":{"line":2907,"column":67,"offset":91395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 10: Programming Exercise PE-MD-02","position":{"start":{"line":2909,"column":3,"offset":91401},"end":{"line":2909,"column":41,"offset":91439}}}],"position":{"start":{"line":2909,"column":1,"offset":91399},"end":{"line":2909,"column":43,"offset":91441}}}],"position":{"start":{"line":2909,"column":1,"offset":91399},"end":{"line":2909,"column":43,"offset":91441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step let's look at a couple of exercises about returning values from methods.","position":{"start":{"line":2911,"column":1,"offset":91445},"end":{"line":2911,"column":86,"offset":91530}}}],"position":{"start":{"line":2911,"column":1,"offset":91445},"end":{"line":2911,"column":86,"offset":91530}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":2913,"column":3,"offset":91536},"end":{"line":2913,"column":12,"offset":91545}}}],"position":{"start":{"line":2913,"column":1,"offset":91534},"end":{"line":2913,"column":14,"offset":91547}}}],"position":{"start":{"line":2913,"column":1,"offset":91534},"end":{"line":2913,"column":14,"offset":91547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write a method to return the sum of three integers.","position":{"start":{"line":2915,"column":4,"offset":91554},"end":{"line":2915,"column":55,"offset":91605}}}],"position":{"start":{"line":2915,"column":1,"offset":91551},"end":{"line":2915,"column":55,"offset":91605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write a method which takes as input two integers, representing two angles of a triangle, and computes the third angle.","position":{"start":{"line":2916,"column":4,"offset":91610},"end":{"line":2916,"column":122,"offset":91728}}}],"position":{"start":{"line":2916,"column":1,"offset":91607},"end":{"line":2916,"column":122,"offset":91728}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2915,"column":1,"offset":91551},"end":{"line":2916,"column":122,"offset":91728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hint: The sum of the angles in a triangle is ","position":{"start":{"line":2918,"column":1,"offset":91732},"end":{"line":2918,"column":46,"offset":91777}}},{"type":"raw","value":"<code class=\"language-text\">180</code>","position":{"start":{"line":2918,"column":46,"offset":91777},"end":{"line":2918,"column":51,"offset":91782}}},{"type":"text","value":" degrees. So if I am passing ","position":{"start":{"line":2918,"column":51,"offset":91782},"end":{"line":2918,"column":80,"offset":91811}}},{"type":"raw","value":"<code class=\"language-text\">50</code>","position":{"start":{"line":2918,"column":80,"offset":91811},"end":{"line":2918,"column":84,"offset":91815}}},{"type":"text","value":" and ","position":{"start":{"line":2918,"column":84,"offset":91815},"end":{"line":2918,"column":89,"offset":91820}}},{"type":"raw","value":"<code class=\"language-text\">50</code>","position":{"start":{"line":2918,"column":89,"offset":91820},"end":{"line":2918,"column":93,"offset":91824}}},{"type":"text","value":", ","position":{"start":{"line":2918,"column":93,"offset":91824},"end":{"line":2918,"column":95,"offset":91826}}},{"type":"raw","value":"<code class=\"language-text\">50</code>","position":{"start":{"line":2918,"column":95,"offset":91826},"end":{"line":2918,"column":99,"offset":91830}}},{"type":"text","value":" plus ","position":{"start":{"line":2918,"column":99,"offset":91830},"end":{"line":2918,"column":105,"offset":91836}}},{"type":"raw","value":"<code class=\"language-text\">50</code>","position":{"start":{"line":2918,"column":105,"offset":91836},"end":{"line":2918,"column":109,"offset":91840}}},{"type":"text","value":" is ","position":{"start":{"line":2918,"column":109,"offset":91840},"end":{"line":2918,"column":113,"offset":91844}}},{"type":"raw","value":"<code class=\"language-text\">100</code>","position":{"start":{"line":2918,"column":113,"offset":91844},"end":{"line":2918,"column":118,"offset":91849}}},{"type":"text","value":". So some of three angles should be ","position":{"start":{"line":2918,"column":118,"offset":91849},"end":{"line":2918,"column":154,"offset":91885}}},{"type":"raw","value":"<code class=\"language-text\">180</code>","position":{"start":{"line":2918,"column":154,"offset":91885},"end":{"line":2918,"column":159,"offset":91890}}},{"type":"text","value":", so the third angle will be ","position":{"start":{"line":2918,"column":159,"offset":91890},"end":{"line":2918,"column":188,"offset":91919}}},{"type":"raw","value":"<code class=\"language-text\">180 - 100</code>","position":{"start":{"line":2918,"column":188,"offset":91919},"end":{"line":2918,"column":199,"offset":91930}}},{"type":"text","value":", which is ","position":{"start":{"line":2918,"column":199,"offset":91930},"end":{"line":2918,"column":210,"offset":91941}}},{"type":"raw","value":"<code class=\"language-text\">80</code>","position":{"start":{"line":2918,"column":210,"offset":91941},"end":{"line":2918,"column":214,"offset":91945}}},{"type":"text","value":".","position":{"start":{"line":2918,"column":214,"offset":91945},"end":{"line":2918,"column":215,"offset":91946}}}],"position":{"start":{"line":2918,"column":1,"offset":91732},"end":{"line":2918,"column":215,"offset":91946}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 1","position":{"start":{"line":2920,"column":3,"offset":91952},"end":{"line":2920,"column":13,"offset":91962}}}],"position":{"start":{"line":2920,"column":1,"offset":91950},"end":{"line":2920,"column":15,"offset":91964}}}],"position":{"start":{"line":2920,"column":1,"offset":91950},"end":{"line":2920,"column":15,"offset":91964}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token keyword\">def</span> sum_of_three_numbers<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> c\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> sum_of_three_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> something <span class=\"token operator\">=</span> sum_of_three_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> something <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\n    <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":2922,"column":1,"offset":91968},"end":{"line":2933,"column":4,"offset":92213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The shorter way of doing that would have been to have a temporary variable called instead of ","position":{"start":{"line":2935,"column":1,"offset":92217},"end":{"line":2935,"column":94,"offset":92310}}},{"type":"raw","value":"<code class=\"language-text\">sum</code>","position":{"start":{"line":2935,"column":94,"offset":92310},"end":{"line":2935,"column":99,"offset":92315}}},{"type":"text","value":". We could directly ","position":{"start":{"line":2935,"column":99,"offset":92315},"end":{"line":2935,"column":119,"offset":92335}}},{"type":"raw","value":"<code class=\"language-text\">return a + b + c</code>","position":{"start":{"line":2935,"column":119,"offset":92335},"end":{"line":2935,"column":137,"offset":92353}}},{"type":"text","value":".","position":{"start":{"line":2935,"column":137,"offset":92353},"end":{"line":2935,"column":138,"offset":92354}}}],"position":{"start":{"line":2935,"column":1,"offset":92217},"end":{"line":2935,"column":138,"offset":92354}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">sum_of_three_numbers</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b <span class=\"token operator\">+</span> c\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> something <span class=\"token operator\">=</span> sum_of_three_numbers<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> something <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\n    <span class=\"token number\">30</span></code></pre></div>","position":{"start":{"line":2937,"column":1,"offset":92358},"end":{"line":2944,"column":4,"offset":92535}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In methods, you can use ","position":{"start":{"line":2946,"column":1,"offset":92539},"end":{"line":2946,"column":25,"offset":92563}}},{"type":"raw","value":"<code class=\"language-text\">return expression</code>","position":{"start":{"line":2946,"column":25,"offset":92563},"end":{"line":2946,"column":44,"offset":92582}}},{"type":"text","value":" as well. That ","position":{"start":{"line":2946,"column":44,"offset":92582},"end":{"line":2946,"column":59,"offset":92597}}},{"type":"raw","value":"<code class=\"language-text\">expression</code>","position":{"start":{"line":2946,"column":59,"offset":92597},"end":{"line":2946,"column":71,"offset":92609}}},{"type":"text","value":" gets evaluated, and the value gets returned back. You'd see that the result remains the same.","position":{"start":{"line":2946,"column":71,"offset":92609},"end":{"line":2946,"column":165,"offset":92703}}}],"position":{"start":{"line":2946,"column":1,"offset":92539},"end":{"line":2946,"column":165,"offset":92703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 2","position":{"start":{"line":2948,"column":3,"offset":92709},"end":{"line":2948,"column":13,"offset":92719}}}],"position":{"start":{"line":2948,"column":1,"offset":92707},"end":{"line":2948,"column":15,"offset":92721}}}],"position":{"start":{"line":2948,"column":1,"offset":92707},"end":{"line":2948,"column":15,"offset":92721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The second is to write a method to take two integers, representing two angles of a triangle, and compute the third one.","position":{"start":{"line":2950,"column":1,"offset":92725},"end":{"line":2950,"column":120,"offset":92844}}}],"position":{"start":{"line":2950,"column":1,"offset":92725},"end":{"line":2950,"column":120,"offset":92844}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">def</span> <span class=\"token function\">calculate_third_angle</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">,</span> second<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">return</span> <span class=\"token number\">180</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span> first <span class=\"token operator\">+</span> second <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> calculate_third_angle<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">110</span></code></pre></div>","position":{"start":{"line":2952,"column":1,"offset":92848},"end":{"line":2958,"column":4,"offset":93016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In your programming career, you would be writing a number of methods. It's very important that you are comfortable doing so. Most of the methods that you write would return values back.","position":{"start":{"line":2960,"column":1,"offset":93020},"end":{"line":2960,"column":186,"offset":93205}}}],"position":{"start":{"line":2960,"column":1,"offset":93020},"end":{"line":2960,"column":186,"offset":93205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That's the reason why we're creating a lot of examples involving method calls.","position":{"start":{"line":2962,"column":1,"offset":93209},"end":{"line":2962,"column":79,"offset":93287}}}],"position":{"start":{"line":2962,"column":1,"offset":93209},"end":{"line":2962,"column":79,"offset":93287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":2964,"column":3,"offset":93293},"end":{"line":2964,"column":10,"offset":93300}}}],"position":{"start":{"line":2964,"column":1,"offset":93291},"end":{"line":2964,"column":12,"offset":93302}}}],"position":{"start":{"line":2964,"column":1,"offset":93291},"end":{"line":2964,"column":12,"offset":93302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":2966,"column":1,"offset":93306},"end":{"line":2966,"column":18,"offset":93323}}}],"position":{"start":{"line":2966,"column":1,"offset":93306},"end":{"line":2966,"column":18,"offset":93323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at a couple of exercises related to returning values from methods","position":{"start":{"line":2968,"column":5,"offset":93331},"end":{"line":2968,"column":77,"offset":93403}}}],"position":{"start":{"line":2968,"column":1,"offset":93327},"end":{"line":2968,"column":77,"offset":93403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Observed that returning expressions avoids creating unnecessary variables, and shortens method definitions","position":{"start":{"line":2969,"column":5,"offset":93409},"end":{"line":2969,"column":111,"offset":93515}}}],"position":{"start":{"line":2969,"column":1,"offset":93405},"end":{"line":2969,"column":111,"offset":93515}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2968,"column":1,"offset":93327},"end":{"line":2969,"column":111,"offset":93515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Chapter 04 - Introduction To Python Platform","position":{"start":{"line":2971,"column":6,"offset":93524},"end":{"line":2971,"column":50,"offset":93568}}}],"position":{"start":{"line":2971,"column":1,"offset":93519},"end":{"line":2971,"column":50,"offset":93568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Until now we had been using Python Shell to execute all our code.","position":{"start":{"line":2973,"column":1,"offset":93572},"end":{"line":2973,"column":66,"offset":93637}}}],"position":{"start":{"line":2973,"column":1,"offset":93572},"end":{"line":2973,"column":66,"offset":93637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the real world, we'll be write Python code in a variety of scripts. Before we would go into an IDE and use the IDE to write the script, we thought it would be useful for us to understand how you can write Python code without the benefit of an IDE.","position":{"start":{"line":2975,"column":1,"offset":93641},"end":{"line":2975,"column":251,"offset":93891}}}],"position":{"start":{"line":2975,"column":1,"offset":93641},"end":{"line":2975,"column":251,"offset":93891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This would also help us understand the Python environment, in-depth.","position":{"start":{"line":2977,"column":1,"offset":93895},"end":{"line":2977,"column":69,"offset":93963}}}],"position":{"start":{"line":2977,"column":1,"offset":93895},"end":{"line":2977,"column":69,"offset":93963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the next few steps, we'll be looking at how to create simple Python scripts, using any text editor of your choice. Use Notepad, Notepad++. Editpad, or whichever text editing software you are comfortable with. We'll see what involved in executing the program, and what's happening in the background.","position":{"start":{"line":2979,"column":1,"offset":93967},"end":{"line":2979,"column":302,"offset":94268}}}],"position":{"start":{"line":2979,"column":1,"offset":93967},"end":{"line":2979,"column":302,"offset":94268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here are a few videos you might want to look at.","position":{"start":{"line":2981,"column":1,"offset":94272},"end":{"line":2981,"column":49,"offset":94320}}}],"position":{"start":{"line":2981,"column":1,"offset":94272},"end":{"line":2981,"column":49,"offset":94320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=ORmDD1R7lNc"},"children":[{"type":"text","value":"Writing and Executing your First Python Script","position":{"start":{"line":2983,"column":6,"offset":94329},"end":{"line":2983,"column":52,"offset":94375}}}],"position":{"start":{"line":2983,"column":5,"offset":94328},"end":{"line":2983,"column":98,"offset":94421}}}],"position":{"start":{"line":2983,"column":1,"offset":94324},"end":{"line":2983,"column":98,"offset":94421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=HE-FC0csG68"},"children":[{"type":"text","value":"Understanding Python Virtual Machine and bytecode","position":{"start":{"line":2984,"column":6,"offset":94428},"end":{"line":2984,"column":55,"offset":94477}}}],"position":{"start":{"line":2984,"column":5,"offset":94427},"end":{"line":2984,"column":101,"offset":94523}}}],"position":{"start":{"line":2984,"column":1,"offset":94423},"end":{"line":2984,"column":101,"offset":94523}}},{"type":"text","value":"\n"}],"position":{"start":{"line":2983,"column":1,"offset":94324},"end":{"line":2984,"column":101,"offset":94523}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 01 - Writing and Executing Python Shell Programs","position":{"start":{"line":2986,"column":3,"offset":94529},"end":{"line":2986,"column":56,"offset":94582}}}],"position":{"start":{"line":2986,"column":1,"offset":94527},"end":{"line":2986,"column":58,"offset":94584}}}],"position":{"start":{"line":2986,"column":1,"offset":94527},"end":{"line":2986,"column":58,"offset":94584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's a recommended video to watch - ","position":{"start":{"line":2988,"column":1,"offset":94588},"end":{"line":2988,"column":39,"offset":94626}}},{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=ORmDD1R7lNc"},"children":[{"type":"text","value":"Writing and Executing your First Python Script","position":{"start":{"line":2988,"column":40,"offset":94627},"end":{"line":2988,"column":86,"offset":94673}}}],"position":{"start":{"line":2988,"column":39,"offset":94626},"end":{"line":2988,"column":132,"offset":94719}}}],"position":{"start":{"line":2988,"column":1,"offset":94588},"end":{"line":2988,"column":132,"offset":94719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's get started with creating a simple script file.","position":{"start":{"line":2990,"column":1,"offset":94723},"end":{"line":2990,"column":54,"offset":94776}}}],"position":{"start":{"line":2990,"column":1,"offset":94723},"end":{"line":2990,"column":54,"offset":94776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to type in a simple Python script, or a piece of Python code, such as ","position":{"start":{"line":2992,"column":1,"offset":94780},"end":{"line":2992,"column":79,"offset":94858}}},{"type":"raw","value":"<code class=\"language-text\">print(\"Hello world\")</code>","position":{"start":{"line":2992,"column":79,"offset":94858},"end":{"line":2992,"column":101,"offset":94880}}},{"type":"text","value":". Does it get any simpler than this?","position":{"start":{"line":2992,"column":101,"offset":94880},"end":{"line":2992,"column":137,"offset":94916}}}],"position":{"start":{"line":2992,"column":1,"offset":94780},"end":{"line":2992,"column":137,"offset":94916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We'll save this into any folder on our hard disk, with a name 'first.py' .","position":{"start":{"line":2994,"column":1,"offset":94920},"end":{"line":2994,"column":75,"offset":94994}}}],"position":{"start":{"line":2994,"column":1,"offset":94920},"end":{"line":2994,"column":75,"offset":94994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"first.py","position":{"start":{"line":2996,"column":4,"offset":95001},"end":{"line":2996,"column":12,"offset":95009}}}],"position":{"start":{"line":2996,"column":2,"offset":94999},"end":{"line":2996,"column":14,"offset":95011}}}],"position":{"start":{"line":2996,"column":1,"offset":94998},"end":{"line":2996,"column":15,"offset":95012}}}],"position":{"start":{"line":2996,"column":1,"offset":94998},"end":{"line":2996,"column":15,"offset":95012}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello world\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":2998,"column":1,"offset":95016},"end":{"line":3000,"column":4,"offset":95052}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The '.py' is not really mandatory, but typically all python files end with a '.py' extension.","position":{"start":{"line":3002,"column":1,"offset":95056},"end":{"line":3002,"column":94,"offset":95149}}}],"position":{"start":{"line":3002,"column":1,"offset":95056},"end":{"line":3002,"column":94,"offset":95149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's how you can run it:","position":{"start":{"line":3004,"column":1,"offset":95153},"end":{"line":3004,"column":27,"offset":95179}}}],"position":{"start":{"line":3004,"column":1,"offset":95153},"end":{"line":3004,"column":27,"offset":95179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Launch your terminal, or command prompt","position":{"start":{"line":3006,"column":5,"offset":95187},"end":{"line":3006,"column":44,"offset":95226}}}],"position":{"start":{"line":3006,"column":1,"offset":95183},"end":{"line":3006,"column":44,"offset":95226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"'cd' to the folder where this python script file is saved","position":{"start":{"line":3007,"column":5,"offset":95232},"end":{"line":3007,"column":62,"offset":95289}}}],"position":{"start":{"line":3007,"column":1,"offset":95228},"end":{"line":3007,"column":62,"offset":95289}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"execute the command ","position":{"start":{"line":3008,"column":5,"offset":95295},"end":{"line":3008,"column":25,"offset":95315}}},{"type":"raw","value":"<code class=\"language-text\">python first.py</code>","position":{"start":{"line":3008,"column":25,"offset":95315},"end":{"line":3008,"column":42,"offset":95332}}}],"position":{"start":{"line":3008,"column":1,"offset":95291},"end":{"line":3008,"column":42,"offset":95332}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3006,"column":1,"offset":95183},"end":{"line":3008,"column":42,"offset":95332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You will see that ","position":{"start":{"line":3010,"column":1,"offset":95336},"end":{"line":3010,"column":19,"offset":95354}}},{"type":"raw","value":"<code class=\"language-text\">Hello World</code>","position":{"start":{"line":3010,"column":19,"offset":95354},"end":{"line":3010,"column":32,"offset":95367}}},{"type":"text","value":" will be printed.","position":{"start":{"line":3010,"column":32,"offset":95367},"end":{"line":3010,"column":49,"offset":95384}}}],"position":{"start":{"line":3010,"column":1,"offset":95336},"end":{"line":3010,"column":49,"offset":95384}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you are familiar with other programming languages, you would need a class, need to put the code in that class, and similar stuff.","position":{"start":{"line":3012,"column":1,"offset":95388},"end":{"line":3012,"column":133,"offset":95520}}}],"position":{"start":{"line":3012,"column":1,"offset":95388},"end":{"line":3012,"column":133,"offset":95520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While Python supports Object Oriented Programming, is not mandatory to create a class.","position":{"start":{"line":3014,"column":1,"offset":95524},"end":{"line":3014,"column":87,"offset":95610}}}],"position":{"start":{"line":3014,"column":1,"offset":95524},"end":{"line":3014,"column":87,"offset":95610}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's almost as if you're typing commands, starting from the line one! That's why we call it a python script.","position":{"start":{"line":3016,"column":1,"offset":95614},"end":{"line":3016,"column":109,"offset":95722}}}],"position":{"start":{"line":3016,"column":1,"offset":95614},"end":{"line":3016,"column":109,"offset":95722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3018,"column":3,"offset":95728},"end":{"line":3018,"column":10,"offset":95735}}}],"position":{"start":{"line":3018,"column":1,"offset":95726},"end":{"line":3018,"column":12,"offset":95737}}}],"position":{"start":{"line":3018,"column":1,"offset":95726},"end":{"line":3018,"column":12,"offset":95737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this small step, we tried to create a simple python script, and we ran it from the command line. All we needed to do, was use the same command we use to launch up the python shell, and followed it up with a name of the file. We created a file called first.py, executed that, and were able to see the output on the console.","position":{"start":{"line":3020,"column":1,"offset":95741},"end":{"line":3020,"column":326,"offset":96066}}}],"position":{"start":{"line":3020,"column":1,"offset":95741},"end":{"line":3020,"column":326,"offset":96066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As an exercise, try and add a few more methods and try to run those methods as well, as part of this script.","position":{"start":{"line":3022,"column":1,"offset":96070},"end":{"line":3022,"column":109,"offset":96178}}}],"position":{"start":{"line":3022,"column":1,"offset":96070},"end":{"line":3022,"column":109,"offset":96178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 02 - Python virtual machine and bytecode","position":{"start":{"line":3024,"column":3,"offset":96184},"end":{"line":3024,"column":48,"offset":96229}}}],"position":{"start":{"line":3024,"column":1,"offset":96182},"end":{"line":3024,"column":50,"offset":96231}}}],"position":{"start":{"line":3024,"column":1,"offset":96182},"end":{"line":3024,"column":50,"offset":96231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's try and understand what's happening in the background.","position":{"start":{"line":3026,"column":1,"offset":96235},"end":{"line":3026,"column":75,"offset":96309}}}],"position":{"start":{"line":3026,"column":1,"offset":96235},"end":{"line":3026,"column":75,"offset":96309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We wrote a simple piece of code using a text editor. We created a file named first.py, and all we did was: ","position":{"start":{"line":3028,"column":1,"offset":96313},"end":{"line":3028,"column":108,"offset":96420}}},{"type":"raw","value":"<code class=\"language-text\">python3 first.py</code>","position":{"start":{"line":3028,"column":108,"offset":96420},"end":{"line":3028,"column":126,"offset":96438}}},{"type":"text","value":". If you look at other languages like Java for example, there is a separate compilation phase and then an execution phase. But with Python, just this command does both compilation and execution.","position":{"start":{"line":3028,"column":126,"offset":96438},"end":{"line":3028,"column":320,"offset":96632}}}],"position":{"start":{"line":3028,"column":1,"offset":96313},"end":{"line":3028,"column":320,"offset":96632}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We saw that, as soon as we make a change and we run ","position":{"start":{"line":3030,"column":1,"offset":96636},"end":{"line":3030,"column":53,"offset":96688}}},{"type":"raw","value":"<code class=\"language-text\">python3 first.py</code>","position":{"start":{"line":3030,"column":53,"offset":96688},"end":{"line":3030,"column":71,"offset":96706}}},{"type":"text","value":" , the change is compiled and executed as well!","position":{"start":{"line":3030,"column":71,"offset":96706},"end":{"line":3030,"column":118,"offset":96753}}}],"position":{"start":{"line":3030,"column":1,"offset":96636},"end":{"line":3030,"column":118,"offset":96753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, there is an intermediate format called ","position":{"start":{"line":3032,"column":1,"offset":96757},"end":{"line":3032,"column":51,"offset":96807}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Python byte code","position":{"start":{"line":3032,"column":53,"offset":96809},"end":{"line":3032,"column":69,"offset":96825}}}],"position":{"start":{"line":3032,"column":51,"offset":96807},"end":{"line":3032,"column":71,"offset":96827}}},{"type":"text","value":". Code is first compiled to bytecode, and then executed on the ","position":{"start":{"line":3032,"column":71,"offset":96827},"end":{"line":3032,"column":134,"offset":96890}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Python virtual machine","position":{"start":{"line":3032,"column":136,"offset":96892},"end":{"line":3032,"column":158,"offset":96914}}}],"position":{"start":{"line":3032,"column":134,"offset":96890},"end":{"line":3032,"column":160,"offset":96916}}},{"type":"text","value":".","position":{"start":{"line":3032,"column":160,"offset":96916},"end":{"line":3032,"column":161,"offset":96917}}}],"position":{"start":{"line":3032,"column":1,"offset":96757},"end":{"line":3032,"column":161,"offset":96917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we installed Python, we installed both the python compiler and interpreter, as well as the virtual machine.","position":{"start":{"line":3034,"column":1,"offset":96921},"end":{"line":3034,"column":113,"offset":97033}}}],"position":{"start":{"line":3034,"column":1,"offset":96921},"end":{"line":3034,"column":113,"offset":97033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, ","position":{"start":{"line":3036,"column":1,"offset":97037},"end":{"line":3036,"column":12,"offset":97048}}},{"type":"raw","value":"<code class=\"language-text\">bytecode</code>","position":{"start":{"line":3036,"column":12,"offset":97048},"end":{"line":3036,"column":22,"offset":97058}}},{"type":"text","value":" is not standardized. Different implementations of Python have different byte code. There are about 80 Python implementations, like CPython and Jython.","position":{"start":{"line":3036,"column":22,"offset":97058},"end":{"line":3036,"column":173,"offset":97209}}}],"position":{"start":{"line":3036,"column":1,"offset":97037},"end":{"line":3036,"column":173,"offset":97209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"CPython is a Python implementation in C language.","position":{"start":{"line":3038,"column":5,"offset":97217},"end":{"line":3038,"column":54,"offset":97266}}}],"position":{"start":{"line":3038,"column":1,"offset":97213},"end":{"line":3038,"column":54,"offset":97266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Jython is a Python implementation in Java language. The bytecode which Jython uses is actually Java bytecode, and you can run it on the Java virtual machine.","position":{"start":{"line":3039,"column":5,"offset":97272},"end":{"line":3039,"column":162,"offset":97429}}}],"position":{"start":{"line":3039,"column":1,"offset":97268},"end":{"line":3039,"column":162,"offset":97429}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3038,"column":1,"offset":97213},"end":{"line":3039,"column":162,"offset":97429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Python leaves a lot of flexibility to the implementations of Python. They have the flexibility to choose the bytecode, and to choose the virtual machine that is compatible. The bytecode is tied to the specific virtual machine you are using. Therefore, if you're using CPython to compile the bytecode, you'll not be able to use Jython to run it.","position":{"start":{"line":3041,"column":1,"offset":97433},"end":{"line":3041,"column":345,"offset":97777}}}],"position":{"start":{"line":3041,"column":1,"offset":97433},"end":{"line":3041,"column":345,"offset":97777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You should make sure, that whatever implementation you are using to compile, is the same one you're using to run the code as well.","position":{"start":{"line":3043,"column":1,"offset":97781},"end":{"line":3043,"column":131,"offset":97911}}}],"position":{"start":{"line":3043,"column":1,"offset":97781},"end":{"line":3043,"column":131,"offset":97911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3045,"column":3,"offset":97917},"end":{"line":3045,"column":10,"offset":97924}}}],"position":{"start":{"line":3045,"column":1,"offset":97915},"end":{"line":3045,"column":12,"offset":97926}}}],"position":{"start":{"line":3045,"column":1,"offset":97915},"end":{"line":3045,"column":12,"offset":97926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A lot of this sounds like boring theory. Don't worry about it. As a beginner, this might not be very important for you right now.","position":{"start":{"line":3047,"column":1,"offset":97930},"end":{"line":3047,"column":130,"offset":98059}}}],"position":{"start":{"line":3047,"column":1,"offset":97930},"end":{"line":3047,"column":130,"offset":98059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It's very important for you to understand the process. What's happening is you were writing Python code, and when you ran the command ","position":{"start":{"line":3049,"column":1,"offset":98063},"end":{"line":3049,"column":135,"offset":98197}}},{"type":"raw","value":"<code class=\"language-text\">python3 first.py</code>","position":{"start":{"line":3049,"column":135,"offset":98197},"end":{"line":3049,"column":153,"offset":98215}}},{"type":"text","value":", it is both compiled and executed. An intermediate format called bytecode is created, which is not really standardized in Python. The bytecode is executed in a Python virtual machine.","position":{"start":{"line":3049,"column":153,"offset":98215},"end":{"line":3049,"column":337,"offset":98399}}}],"position":{"start":{"line":3049,"column":1,"offset":98063},"end":{"line":3049,"column":337,"offset":98399}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The idea behind this quick section, is to give you a little bit of background on what's happening behind the scenes. I'll see you in the next section. Until then, bye-bye!","position":{"start":{"line":3051,"column":1,"offset":98403},"end":{"line":3051,"column":172,"offset":98574}}}],"position":{"start":{"line":3051,"column":1,"offset":98403},"end":{"line":3051,"column":172,"offset":98574}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Chapter 05 - Introduction To VSCode","position":{"start":{"line":3053,"column":6,"offset":98583},"end":{"line":3053,"column":41,"offset":98618}}}],"position":{"start":{"line":3053,"column":1,"offset":98578},"end":{"line":3053,"column":41,"offset":98618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start using the IDE VSCode to write our Python Code","position":{"start":{"line":3055,"column":1,"offset":98622},"end":{"line":3055,"column":58,"offset":98679}}}],"position":{"start":{"line":3055,"column":1,"offset":98622},"end":{"line":3055,"column":58,"offset":98679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here are recommended videos to watch","position":{"start":{"line":3057,"column":1,"offset":98683},"end":{"line":3057,"column":37,"offset":98719}}}],"position":{"start":{"line":3057,"column":1,"offset":98683},"end":{"line":3057,"column":37,"offset":98719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=pI_cnCXpCTU"},"children":[{"type":"text","value":"Installing VSCode","position":{"start":{"line":3059,"column":6,"offset":98728},"end":{"line":3059,"column":23,"offset":98745}}}],"position":{"start":{"line":3059,"column":5,"offset":98727},"end":{"line":3059,"column":69,"offset":98791}}}],"position":{"start":{"line":3059,"column":1,"offset":98723},"end":{"line":3059,"column":69,"offset":98791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=Na05tSP21Jg"},"children":[{"type":"text","value":"Write and Execute a Python File with VSCode","position":{"start":{"line":3060,"column":6,"offset":98798},"end":{"line":3060,"column":49,"offset":98841}}}],"position":{"start":{"line":3060,"column":5,"offset":98797},"end":{"line":3060,"column":95,"offset":98887}}}],"position":{"start":{"line":3060,"column":1,"offset":98793},"end":{"line":3060,"column":95,"offset":98887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=PvYSlWbXuCw"},"children":[{"type":"text","value":"Write Your First Python Program with VSCode","position":{"start":{"line":3061,"column":6,"offset":98894},"end":{"line":3061,"column":49,"offset":98937}}}],"position":{"start":{"line":3061,"column":5,"offset":98893},"end":{"line":3061,"column":95,"offset":98983}}}],"position":{"start":{"line":3061,"column":1,"offset":98889},"end":{"line":3061,"column":95,"offset":98983}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3059,"column":1,"offset":98723},"end":{"line":3061,"column":95,"offset":98983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 01 - Installing and Introduction to VSCode","position":{"start":{"line":3063,"column":3,"offset":98989},"end":{"line":3063,"column":50,"offset":99036}}}],"position":{"start":{"line":3063,"column":1,"offset":98987},"end":{"line":3063,"column":52,"offset":99038}}}],"position":{"start":{"line":3063,"column":1,"offset":98987},"end":{"line":3063,"column":52,"offset":99038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this quick step, we'll help you install VSCode.","position":{"start":{"line":3065,"column":1,"offset":99042},"end":{"line":3065,"column":51,"offset":99092}}}],"position":{"start":{"line":3065,"column":1,"offset":99042},"end":{"line":3065,"column":51,"offset":99092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's the video guide for this step","position":{"start":{"line":3067,"column":1,"offset":99096},"end":{"line":3067,"column":37,"offset":99132}}}],"position":{"start":{"line":3067,"column":1,"offset":99096},"end":{"line":3067,"column":37,"offset":99132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=pI_cnCXpCTU"},"children":[{"type":"text","value":"Installing VSCode","position":{"start":{"line":3069,"column":6,"offset":99141},"end":{"line":3069,"column":23,"offset":99158}}}],"position":{"start":{"line":3069,"column":5,"offset":99140},"end":{"line":3069,"column":69,"offset":99204}}}],"position":{"start":{"line":3069,"column":1,"offset":99136},"end":{"line":3069,"column":69,"offset":99204}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3069,"column":1,"offset":99136},"end":{"line":3069,"column":69,"offset":99204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Go to Google and type in \"VSCode Community Edition Download\". Click the link which comes up first: ","position":{"start":{"line":3071,"column":1,"offset":99208},"end":{"line":3071,"column":100,"offset":99307}}},{"type":"element","tagName":"a","properties":{"href":"https://www.jetbrains.com/VSCode/download"},"children":[{"type":"text","value":"https://www.jetbrains.com/VSCode/download","position":{"start":{"line":3071,"column":101,"offset":99308},"end":{"line":3071,"column":142,"offset":99349}}}],"position":{"start":{"line":3071,"column":100,"offset":99307},"end":{"line":3071,"column":186,"offset":99393}}},{"type":"text","value":".","position":{"start":{"line":3071,"column":186,"offset":99393},"end":{"line":3071,"column":187,"offset":99394}}}],"position":{"start":{"line":3071,"column":1,"offset":99208},"end":{"line":3071,"column":187,"offset":99394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You'll go to a page where you can choose the operating system: whether you are on Windows, Mac, or Linux.","position":{"start":{"line":3073,"column":1,"offset":99398},"end":{"line":3073,"column":106,"offset":99503}}}],"position":{"start":{"line":3073,"column":1,"offset":99398},"end":{"line":3073,"column":106,"offset":99503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you choose that, you can download the appropriate community version.","position":{"start":{"line":3075,"column":1,"offset":99507},"end":{"line":3075,"column":74,"offset":99580}}}],"position":{"start":{"line":3075,"column":1,"offset":99507},"end":{"line":3075,"column":74,"offset":99580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On the right hand side, you'll see a community version, and you can click the download link, to start the download.","position":{"start":{"line":3077,"column":1,"offset":99584},"end":{"line":3077,"column":116,"offset":99699}}}],"position":{"start":{"line":3077,"column":1,"offset":99584},"end":{"line":3077,"column":116,"offset":99699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you are having a problem, you can also use the direct link to download.","position":{"start":{"line":3079,"column":1,"offset":99703},"end":{"line":3079,"column":75,"offset":99777}}}],"position":{"start":{"line":3079,"column":1,"offset":99703},"end":{"line":3079,"column":75,"offset":99777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you download VSCode, all you need to do is double-click the package which is downloaded. Follow the instructions, and you can continue with the defaults, until you completely install VSCode.","position":{"start":{"line":3081,"column":1,"offset":99781},"end":{"line":3081,"column":196,"offset":99976}}}],"position":{"start":{"line":3081,"column":1,"offset":99781},"end":{"line":3081,"column":196,"offset":99976}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you launch VSCode for the first time, it should ask you for a theme, where you can choose the default.","position":{"start":{"line":3083,"column":1,"offset":99980},"end":{"line":3083,"column":108,"offset":100087}}}],"position":{"start":{"line":3083,"column":1,"offset":99980},"end":{"line":3083,"column":108,"offset":100087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You're all set to go ahead with the next step in the course.","position":{"start":{"line":3085,"column":1,"offset":100091},"end":{"line":3085,"column":61,"offset":100151}}}],"position":{"start":{"line":3085,"column":1,"offset":100091},"end":{"line":3085,"column":61,"offset":100151}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"VSCode is an awesome IDE, and I'm sure you learn a lot about it.","position":{"start":{"line":3087,"column":1,"offset":100155},"end":{"line":3087,"column":65,"offset":100219}}}],"position":{"start":{"line":3087,"column":1,"offset":100155},"end":{"line":3087,"column":65,"offset":100219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 02 - Write and Execute a Python File with VSCode","position":{"start":{"line":3089,"column":3,"offset":100225},"end":{"line":3089,"column":56,"offset":100278}}}],"position":{"start":{"line":3089,"column":1,"offset":100223},"end":{"line":3089,"column":58,"offset":100280}}}],"position":{"start":{"line":3089,"column":1,"offset":100223},"end":{"line":3089,"column":58,"offset":100280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's launch up the VSCode IDE, and create our first Python project with a Python script. We want to be able to launch a Python script by the end of this step.","position":{"start":{"line":3091,"column":1,"offset":100284},"end":{"line":3091,"column":174,"offset":100457}}}],"position":{"start":{"line":3091,"column":1,"offset":100284},"end":{"line":3091,"column":174,"offset":100457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's the video guide for this step","position":{"start":{"line":3093,"column":1,"offset":100461},"end":{"line":3093,"column":37,"offset":100497}}}],"position":{"start":{"line":3093,"column":1,"offset":100461},"end":{"line":3093,"column":37,"offset":100497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=Na05tSP21Jg"},"children":[{"type":"text","value":"Write and Execute a Python File with VSCode","position":{"start":{"line":3095,"column":6,"offset":100506},"end":{"line":3095,"column":49,"offset":100549}}}],"position":{"start":{"line":3095,"column":5,"offset":100505},"end":{"line":3095,"column":95,"offset":100595}}}],"position":{"start":{"line":3095,"column":1,"offset":100501},"end":{"line":3095,"column":95,"offset":100595}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3095,"column":1,"offset":100501},"end":{"line":3095,"column":95,"offset":100595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Launch the VSCode IDE. You'll see that it takes a little while to launch the first time, and then brings up a welcome screen.","position":{"start":{"line":3097,"column":1,"offset":100599},"end":{"line":3097,"column":126,"offset":100724}}}],"position":{"start":{"line":3097,"column":1,"offset":100599},"end":{"line":3097,"column":126,"offset":100724}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We would want to create a number of Python files. All these files will be in a project. You can think of our project as a collection of Python scripts, or modules.","position":{"start":{"line":3099,"column":1,"offset":100728},"end":{"line":3099,"column":164,"offset":100891}}}],"position":{"start":{"line":3099,"column":1,"offset":100728},"end":{"line":3099,"column":164,"offset":100891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To get started, let's create a new project by clicking 'create new project'. Let's name it - '01-first-python-project'.","position":{"start":{"line":3101,"column":1,"offset":100895},"end":{"line":3101,"column":120,"offset":101014}}}],"position":{"start":{"line":3101,"column":1,"offset":100895},"end":{"line":3101,"column":120,"offset":101014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Right now there are no files in the project.","position":{"start":{"line":3103,"column":1,"offset":101018},"end":{"line":3103,"column":45,"offset":101062}}}],"position":{"start":{"line":3103,"column":1,"offset":101018},"end":{"line":3103,"column":45,"offset":101062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's create our first Python file, using the IDE.","position":{"start":{"line":3105,"column":1,"offset":101066},"end":{"line":3105,"column":51,"offset":101116}}}],"position":{"start":{"line":3105,"column":1,"offset":101066},"end":{"line":3105,"column":51,"offset":101116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The way you can do that is by saying 'right-click' -","position":{"start":{"line":3107,"column":1,"offset":101120},"end":{"line":3107,"column":53,"offset":101172}}},{"type":"text","value":">","position":{"start":{"line":3107,"column":53,"offset":101172},"end":{"line":3107,"column":57,"offset":101176}}},{"type":"text","value":" 'new' -","position":{"start":{"line":3107,"column":57,"offset":101176},"end":{"line":3107,"column":65,"offset":101184}}},{"type":"text","value":">","position":{"start":{"line":3107,"column":65,"offset":101184},"end":{"line":3107,"column":69,"offset":101188}}},{"type":"text","value":" 'Python file', and then we'll give this a name of 'hello_world', and click OK.","position":{"start":{"line":3107,"column":69,"offset":101188},"end":{"line":3107,"column":148,"offset":101267}}}],"position":{"start":{"line":3107,"column":1,"offset":101120},"end":{"line":3107,"column":148,"offset":101267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now you can go ahead and write your first Python program. Let's write some simple code, like ","position":{"start":{"line":3109,"column":1,"offset":101271},"end":{"line":3109,"column":94,"offset":101364}}},{"type":"raw","value":"<code class=\"language-text\">print(\"Hello World\")</code>","position":{"start":{"line":3109,"column":94,"offset":101364},"end":{"line":3109,"column":116,"offset":101386}}},{"type":"text","value":", and save it.","position":{"start":{"line":3109,"column":116,"offset":101386},"end":{"line":3109,"column":130,"offset":101400}}}],"position":{"start":{"line":3109,"column":1,"offset":101271},"end":{"line":3109,"column":130,"offset":101400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can do a right-click here, and say 'Run hello_world'.","position":{"start":{"line":3111,"column":1,"offset":101404},"end":{"line":3111,"column":58,"offset":101461}}}],"position":{"start":{"line":3111,"column":1,"offset":101404},"end":{"line":3111,"column":58,"offset":101461}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A small window comes up below, which shows the output. It says ","position":{"start":{"line":3113,"column":1,"offset":101465},"end":{"line":3113,"column":64,"offset":101528}}},{"type":"raw","value":"<code class=\"language-text\">'Hello World'</code>","position":{"start":{"line":3113,"column":64,"offset":101528},"end":{"line":3113,"column":79,"offset":101543}}},{"type":"text","value":".","position":{"start":{"line":3113,"column":79,"offset":101543},"end":{"line":3113,"column":80,"offset":101544}}}],"position":{"start":{"line":3113,"column":1,"offset":101465},"end":{"line":3113,"column":80,"offset":101544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 03 - Execise - Write Multiplication Table Method with VSCode","position":{"start":{"line":3115,"column":3,"offset":101550},"end":{"line":3115,"column":68,"offset":101615}}}],"position":{"start":{"line":3115,"column":1,"offset":101548},"end":{"line":3115,"column":70,"offset":101617}}}],"position":{"start":{"line":3115,"column":1,"offset":101548},"end":{"line":3115,"column":70,"offset":101617}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start with a simple exercise. We created the multiplication table method in the Python Shell. What we do now, is we'll create the same thing but in a Python file of its own.","position":{"start":{"line":3117,"column":1,"offset":101621},"end":{"line":3117,"column":180,"offset":101800}}}],"position":{"start":{"line":3117,"column":1,"offset":101621},"end":{"line":3117,"column":180,"offset":101800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's the video guide for this step:","position":{"start":{"line":3119,"column":1,"offset":101804},"end":{"line":3119,"column":38,"offset":101841}}}],"position":{"start":{"line":3119,"column":1,"offset":101804},"end":{"line":3119,"column":38,"offset":101841}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.youtube.com/watch?v=PvYSlWbXuCw"},"children":[{"type":"text","value":"Write Your First Python Program with VSCode","position":{"start":{"line":3121,"column":6,"offset":101850},"end":{"line":3121,"column":49,"offset":101893}}}],"position":{"start":{"line":3121,"column":5,"offset":101849},"end":{"line":3121,"column":95,"offset":101939}}}],"position":{"start":{"line":3121,"column":1,"offset":101845},"end":{"line":3121,"column":95,"offset":101939}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3121,"column":1,"offset":101845},"end":{"line":3121,"column":95,"offset":101939}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Chapter 06 - Introducing Data Types and Conditionals","position":{"start":{"line":3123,"column":6,"offset":101948},"end":{"line":3123,"column":58,"offset":102000}}}],"position":{"start":{"line":3123,"column":1,"offset":101943},"end":{"line":3123,"column":58,"offset":102000}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Welcome to this section, where we will talk about numeric data types, and conditional program execution. After looking at the numeric and boolean data types, we will turn our attention to executing code, based on logical conditions.","position":{"start":{"line":3125,"column":1,"offset":102004},"end":{"line":3125,"column":233,"offset":102236}}}],"position":{"start":{"line":3125,"column":1,"offset":102004},"end":{"line":3125,"column":233,"offset":102236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 01: Numeric Data Types","position":{"start":{"line":3127,"column":3,"offset":102242},"end":{"line":3127,"column":30,"offset":102269}}}],"position":{"start":{"line":3127,"column":1,"offset":102240},"end":{"line":3127,"column":32,"offset":102271}}}],"position":{"start":{"line":3127,"column":1,"offset":102240},"end":{"line":3127,"column":32,"offset":102271}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In previous sections, we created variables of this kind: ","position":{"start":{"line":3129,"column":1,"offset":102275},"end":{"line":3129,"column":58,"offset":102332}}},{"type":"raw","value":"<code class=\"language-text\">number = 5</code>","position":{"start":{"line":3129,"column":58,"offset":102332},"end":{"line":3129,"column":70,"offset":102344}}},{"type":"text","value":" , ","position":{"start":{"line":3129,"column":70,"offset":102344},"end":{"line":3129,"column":73,"offset":102347}}},{"type":"raw","value":"<code class=\"language-text\">value = 2.5</code>","position":{"start":{"line":3129,"column":73,"offset":102347},"end":{"line":3129,"column":86,"offset":102360}}},{"type":"text","value":", etc. The ","position":{"start":{"line":3129,"column":86,"offset":102360},"end":{"line":3129,"column":97,"offset":102371}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":3129,"column":97,"offset":102371},"end":{"line":3129,"column":100,"offset":102374}}},{"type":"text","value":" here is an integer, and integers represent numbers, such as ","position":{"start":{"line":3129,"column":100,"offset":102374},"end":{"line":3129,"column":161,"offset":102435}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":3129,"column":161,"offset":102435},"end":{"line":3129,"column":164,"offset":102438}}},{"type":"text","value":", ","position":{"start":{"line":3129,"column":164,"offset":102438},"end":{"line":3129,"column":166,"offset":102440}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":3129,"column":166,"offset":102440},"end":{"line":3129,"column":169,"offset":102443}}},{"type":"text","value":", ","position":{"start":{"line":3129,"column":169,"offset":102443},"end":{"line":3129,"column":171,"offset":102445}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":3129,"column":171,"offset":102445},"end":{"line":3129,"column":174,"offset":102448}}},{"type":"text","value":", ","position":{"start":{"line":3129,"column":174,"offset":102448},"end":{"line":3129,"column":176,"offset":102450}}},{"type":"raw","value":"<code class=\"language-text\">-1</code>","position":{"start":{"line":3129,"column":176,"offset":102450},"end":{"line":3129,"column":180,"offset":102454}}},{"type":"text","value":" and ","position":{"start":{"line":3129,"column":180,"offset":102454},"end":{"line":3129,"column":185,"offset":102459}}},{"type":"raw","value":"<code class=\"language-text\">-2</code>","position":{"start":{"line":3129,"column":185,"offset":102459},"end":{"line":3129,"column":189,"offset":102463}}},{"type":"text","value":". In Python, the ","position":{"start":{"line":3129,"column":189,"offset":102463},"end":{"line":3129,"column":206,"offset":102480}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":3129,"column":206,"offset":102480},"end":{"line":3129,"column":213,"offset":102487}}},{"type":"text","value":" for this particular data type is ","position":{"start":{"line":3129,"column":213,"offset":102487},"end":{"line":3129,"column":247,"offset":102521}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3129,"column":247,"offset":102521},"end":{"line":3129,"column":252,"offset":102526}}},{"type":"text","value":".","position":{"start":{"line":3129,"column":252,"offset":102526},"end":{"line":3129,"column":253,"offset":102527}}}],"position":{"start":{"line":3129,"column":1,"offset":102275},"end":{"line":3129,"column":253,"offset":102527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you write code like ","position":{"start":{"line":3131,"column":1,"offset":102531},"end":{"line":3131,"column":24,"offset":102554}}},{"type":"raw","value":"<code class=\"language-text\">type(5)</code>","position":{"start":{"line":3131,"column":24,"offset":102554},"end":{"line":3131,"column":33,"offset":102563}}},{"type":"text","value":", you'd get ","position":{"start":{"line":3131,"column":33,"offset":102563},"end":{"line":3131,"column":45,"offset":102575}}},{"type":"raw","value":"<code class=\"language-text\">'int'</code>","position":{"start":{"line":3131,"column":45,"offset":102575},"end":{"line":3131,"column":52,"offset":102582}}},{"type":"text","value":" as the output.","position":{"start":{"line":3131,"column":52,"offset":102582},"end":{"line":3131,"column":67,"offset":102597}}}],"position":{"start":{"line":3131,"column":1,"offset":102531},"end":{"line":3131,"column":67,"offset":102597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, there are no primitive types. What does that mean? Every value that you see in a Python program, is an object, an instance of some ","position":{"start":{"line":3133,"column":1,"offset":102601},"end":{"line":3133,"column":143,"offset":102743}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":3133,"column":143,"offset":102743},"end":{"line":3133,"column":150,"offset":102750}}},{"type":"text","value":".","position":{"start":{"line":3133,"column":150,"offset":102750},"end":{"line":3133,"column":151,"offset":102751}}}],"position":{"start":{"line":3133,"column":1,"offset":102601},"end":{"line":3133,"column":151,"offset":102751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In later sections, We'll understand what is a ","position":{"start":{"line":3135,"column":1,"offset":102755},"end":{"line":3135,"column":47,"offset":102801}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":3135,"column":47,"offset":102801},"end":{"line":3135,"column":54,"offset":102808}}},{"type":"text","value":", and what is an object or an instance. For now, the most important thing for you to remember, is that behind every value, there is a ","position":{"start":{"line":3135,"column":54,"offset":102808},"end":{"line":3135,"column":188,"offset":102942}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":3135,"column":188,"offset":102942},"end":{"line":3135,"column":195,"offset":102949}}},{"type":"text","value":".","position":{"start":{"line":3135,"column":195,"offset":102949},"end":{"line":3135,"column":196,"offset":102950}}}],"position":{"start":{"line":3135,"column":1,"offset":102755},"end":{"line":3135,"column":196,"offset":102950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":3137,"column":3,"offset":102956},"end":{"line":3137,"column":14,"offset":102967}}}],"position":{"start":{"line":3137,"column":1,"offset":102954},"end":{"line":3137,"column":16,"offset":102969}}}],"position":{"start":{"line":3137,"column":1,"offset":102954},"end":{"line":3137,"column":16,"offset":102969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at ","position":{"start":{"line":3139,"column":1,"offset":102973},"end":{"line":3139,"column":15,"offset":102987}}},{"type":"raw","value":"<code class=\"language-text\">2.5</code>","position":{"start":{"line":3139,"column":15,"offset":102987},"end":{"line":3139,"column":20,"offset":102992}}},{"type":"text","value":", which is a floating point value.","position":{"start":{"line":3139,"column":20,"offset":102992},"end":{"line":3139,"column":54,"offset":103026}}}],"position":{"start":{"line":3139,"column":1,"offset":102973},"end":{"line":3139,"column":54,"offset":103026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you go ahead and do ","position":{"start":{"line":3141,"column":1,"offset":103030},"end":{"line":3141,"column":24,"offset":103053}}},{"type":"raw","value":"<code class=\"language-text\">type(2.5)</code>","position":{"start":{"line":3141,"column":24,"offset":103053},"end":{"line":3141,"column":35,"offset":103064}}},{"type":"text","value":", what would you see? You would see it's of type ","position":{"start":{"line":3141,"column":35,"offset":103064},"end":{"line":3141,"column":84,"offset":103113}}},{"type":"text","value":"`","position":{"start":{"line":3141,"column":84,"offset":103113},"end":{"line":3141,"column":86,"offset":103115}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3141,"column":86,"offset":103115},"end":{"line":3141,"column":93,"offset":103122}}},{"type":"text","value":".","position":{"start":{"line":3141,"column":93,"offset":103122},"end":{"line":3141,"column":94,"offset":103123}}}],"position":{"start":{"line":3141,"column":1,"offset":103030},"end":{"line":3141,"column":94,"offset":103123}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'float'</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.55</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'float'</span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":3143,"column":1,"offset":103127},"end":{"line":3148,"column":4,"offset":103222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you perform a division operation between two integers, there is a chance that the result of the operation is a ","position":{"start":{"line":3150,"column":1,"offset":103226},"end":{"line":3150,"column":117,"offset":103342}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3150,"column":117,"offset":103342},"end":{"line":3150,"column":124,"offset":103349}}},{"type":"text","value":". If you do ","position":{"start":{"line":3150,"column":124,"offset":103349},"end":{"line":3150,"column":136,"offset":103361}}},{"type":"raw","value":"<code class=\"language-text\">5/2</code>","position":{"start":{"line":3150,"column":136,"offset":103361},"end":{"line":3150,"column":141,"offset":103366}}},{"type":"text","value":", the result is ","position":{"start":{"line":3150,"column":141,"offset":103366},"end":{"line":3150,"column":157,"offset":103382}}},{"type":"raw","value":"<code class=\"language-text\">2.5</code>","position":{"start":{"line":3150,"column":157,"offset":103382},"end":{"line":3150,"column":162,"offset":103387}}},{"type":"text","value":". If we were to do ","position":{"start":{"line":3150,"column":162,"offset":103387},"end":{"line":3150,"column":181,"offset":103406}}},{"type":"raw","value":"<code class=\"language-text\">4/2</code>","position":{"start":{"line":3150,"column":181,"offset":103406},"end":{"line":3150,"column":186,"offset":103411}}},{"type":"text","value":", even then it's of type ","position":{"start":{"line":3150,"column":186,"offset":103411},"end":{"line":3150,"column":211,"offset":103436}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3150,"column":211,"offset":103436},"end":{"line":3150,"column":218,"offset":103443}}},{"type":"text","value":".","position":{"start":{"line":3150,"column":218,"offset":103443},"end":{"line":3150,"column":219,"offset":103444}}}],"position":{"start":{"line":3150,"column":1,"offset":103226},"end":{"line":3150,"column":219,"offset":103444}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'float'</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'float'</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">4</span><span class=\"token operator\">/</span><span class=\"token number\">2</span>\n    <span class=\"token number\">2.0</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":3152,"column":1,"offset":103448},"end":{"line":3161,"column":4,"offset":103586}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All the operations we looked at until now, can also be performed on floating point values.","position":{"start":{"line":3163,"column":1,"offset":103590},"end":{"line":3163,"column":91,"offset":103680}}}],"position":{"start":{"line":3163,"column":1,"offset":103590},"end":{"line":3163,"column":91,"offset":103680}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> value1 <span class=\"token operator\">=</span> <span class=\"token number\">4.5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> value2 <span class=\"token operator\">=</span> <span class=\"token number\">3.2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> value1 <span class=\"token operator\">+</span> value2\n    <span class=\"token number\">7.7</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> value1 <span class=\"token operator\">-</span> value2\n    <span class=\"token number\">1.2999999999999998</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> value1 <span class=\"token operator\">/</span> value2\n    <span class=\"token number\">1.40625</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> value1 <span class=\"token operator\">%</span> value2\n    <span class=\"token number\">1.2999999999999998</span></code></pre></div>","position":{"start":{"line":3165,"column":1,"offset":103684},"end":{"line":3176,"column":4,"offset":103912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">value1 - value2</code>","position":{"start":{"line":3178,"column":1,"offset":103916},"end":{"line":3178,"column":18,"offset":103933}}},{"type":"text","value":" returns ","position":{"start":{"line":3178,"column":18,"offset":103933},"end":{"line":3178,"column":27,"offset":103942}}},{"type":"raw","value":"<code class=\"language-text\">1.299999999999998</code>","position":{"start":{"line":3178,"column":27,"offset":103942},"end":{"line":3178,"column":46,"offset":103961}}},{"type":"text","value":". Why?","position":{"start":{"line":3178,"column":46,"offset":103961},"end":{"line":3178,"column":52,"offset":103967}}}],"position":{"start":{"line":3178,"column":1,"offset":103916},"end":{"line":3178,"column":52,"offset":103967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Floating point numbers don't really represent accurate values. That's one of the things you need to always keep in mind.","position":{"start":{"line":3180,"column":1,"offset":103971},"end":{"line":3180,"column":121,"offset":104091}}}],"position":{"start":{"line":3180,"column":1,"offset":103971},"end":{"line":3180,"column":121,"offset":104091}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Typically, if you're doing any highly sensitive financial calculations, don't use ","position":{"start":{"line":3182,"column":1,"offset":104095},"end":{"line":3182,"column":83,"offset":104177}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3182,"column":83,"offset":104177},"end":{"line":3182,"column":90,"offset":104184}}},{"type":"text","value":"s to represent your values. Instead, use ","position":{"start":{"line":3182,"column":90,"offset":104184},"end":{"line":3182,"column":131,"offset":104225}}},{"type":"raw","value":"<code class=\"language-text\">Decimal</code>","position":{"start":{"line":3182,"column":131,"offset":104225},"end":{"line":3182,"column":140,"offset":104234}}},{"type":"text","value":". More about it later.","position":{"start":{"line":3182,"column":140,"offset":104234},"end":{"line":3182,"column":162,"offset":104256}}}],"position":{"start":{"line":3182,"column":1,"offset":104095},"end":{"line":3182,"column":162,"offset":104256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Operations can also be performed between ","position":{"start":{"line":3184,"column":1,"offset":104260},"end":{"line":3184,"column":42,"offset":104301}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3184,"column":42,"offset":104301},"end":{"line":3184,"column":47,"offset":104306}}},{"type":"text","value":" and ","position":{"start":{"line":3184,"column":47,"offset":104306},"end":{"line":3184,"column":52,"offset":104311}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3184,"column":52,"offset":104311},"end":{"line":3184,"column":59,"offset":104318}}},{"type":"text","value":".","position":{"start":{"line":3184,"column":59,"offset":104318},"end":{"line":3184,"column":60,"offset":104319}}}],"position":{"start":{"line":3184,"column":1,"offset":104260},"end":{"line":3184,"column":60,"offset":104319}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">+</span> value1\n    <span class=\"token number\">14.5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">-</span> value1\n    <span class=\"token number\">5.5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">/</span> value1\n    <span class=\"token number\">2.2222222222222223</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":3186,"column":1,"offset":104323},"end":{"line":3194,"column":4,"offset":104449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Result of an operation between a ","position":{"start":{"line":3196,"column":1,"offset":104453},"end":{"line":3196,"column":34,"offset":104486}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3196,"column":34,"offset":104486},"end":{"line":3196,"column":39,"offset":104491}}},{"type":"text","value":" and a ","position":{"start":{"line":3196,"column":39,"offset":104491},"end":{"line":3196,"column":46,"offset":104498}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3196,"column":46,"offset":104498},"end":{"line":3196,"column":53,"offset":104505}}},{"type":"text","value":", is always a ","position":{"start":{"line":3196,"column":53,"offset":104505},"end":{"line":3196,"column":67,"offset":104519}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3196,"column":67,"offset":104519},"end":{"line":3196,"column":74,"offset":104526}}},{"type":"text","value":".","position":{"start":{"line":3196,"column":74,"offset":104526},"end":{"line":3196,"column":75,"offset":104527}}}],"position":{"start":{"line":3196,"column":1,"offset":104453},"end":{"line":3196,"column":75,"offset":104527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3198,"column":3,"offset":104533},"end":{"line":3198,"column":10,"offset":104540}}}],"position":{"start":{"line":3198,"column":1,"offset":104531},"end":{"line":3198,"column":12,"offset":104542}}}],"position":{"start":{"line":3198,"column":1,"offset":104531},"end":{"line":3198,"column":12,"offset":104542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3200,"column":1,"offset":104546},"end":{"line":3200,"column":18,"offset":104563}}}],"position":{"start":{"line":3200,"column":1,"offset":104546},"end":{"line":3200,"column":18,"offset":104563}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at the two basic numeric types: ","position":{"start":{"line":3202,"column":5,"offset":104571},"end":{"line":3202,"column":44,"offset":104610}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3202,"column":44,"offset":104610},"end":{"line":3202,"column":49,"offset":104615}}},{"type":"text","value":" and ","position":{"start":{"line":3202,"column":49,"offset":104615},"end":{"line":3202,"column":54,"offset":104620}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3202,"column":54,"offset":104620},"end":{"line":3202,"column":61,"offset":104627}}},{"type":"text","value":".","position":{"start":{"line":3202,"column":61,"offset":104627},"end":{"line":3202,"column":62,"offset":104628}}}],"position":{"start":{"line":3202,"column":1,"offset":104567},"end":{"line":3202,"column":62,"offset":104628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Saw the basic operations you can do among ","position":{"start":{"line":3203,"column":5,"offset":104634},"end":{"line":3203,"column":47,"offset":104676}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3203,"column":47,"offset":104676},"end":{"line":3203,"column":52,"offset":104681}}},{"type":"text","value":"s, among ","position":{"start":{"line":3203,"column":52,"offset":104681},"end":{"line":3203,"column":61,"offset":104690}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3203,"column":61,"offset":104690},"end":{"line":3203,"column":68,"offset":104697}}},{"type":"text","value":"s, and also between ","position":{"start":{"line":3203,"column":68,"offset":104697},"end":{"line":3203,"column":88,"offset":104717}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3203,"column":88,"offset":104717},"end":{"line":3203,"column":93,"offset":104722}}},{"type":"text","value":"s and ","position":{"start":{"line":3203,"column":93,"offset":104722},"end":{"line":3203,"column":99,"offset":104728}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3203,"column":99,"offset":104728},"end":{"line":3203,"column":106,"offset":104735}}},{"type":"text","value":"s.","position":{"start":{"line":3203,"column":106,"offset":104735},"end":{"line":3203,"column":108,"offset":104737}}}],"position":{"start":{"line":3203,"column":1,"offset":104630},"end":{"line":3203,"column":108,"offset":104737}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3202,"column":1,"offset":104567},"end":{"line":3203,"column":108,"offset":104737}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 02: Programming Exercise PE-DT-01","position":{"start":{"line":3205,"column":3,"offset":104743},"end":{"line":3205,"column":41,"offset":104781}}}],"position":{"start":{"line":3205,"column":1,"offset":104741},"end":{"line":3205,"column":43,"offset":104783}}}],"position":{"start":{"line":3205,"column":1,"offset":104741},"end":{"line":3205,"column":43,"offset":104783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's do a simple exercise with numeric values.","position":{"start":{"line":3207,"column":1,"offset":104787},"end":{"line":3207,"column":62,"offset":104848}}}],"position":{"start":{"line":3207,"column":1,"offset":104787},"end":{"line":3207,"column":62,"offset":104848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":3209,"column":3,"offset":104854},"end":{"line":3209,"column":12,"offset":104863}}}],"position":{"start":{"line":3209,"column":1,"offset":104852},"end":{"line":3209,"column":14,"offset":104865}}}],"position":{"start":{"line":3209,"column":1,"offset":104852},"end":{"line":3209,"column":14,"offset":104865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You need to create a method called ","position":{"start":{"line":3211,"column":4,"offset":104872},"end":{"line":3211,"column":39,"offset":104907}}},{"type":"raw","value":"<code class=\"language-text\">simple_interest</code>","position":{"start":{"line":3211,"column":39,"offset":104907},"end":{"line":3211,"column":56,"offset":104924}}},{"type":"text","value":", and pass three parameters: ","position":{"start":{"line":3211,"column":56,"offset":104924},"end":{"line":3211,"column":85,"offset":104953}}},{"type":"raw","value":"<code class=\"language-text\">principal</code>","position":{"start":{"line":3211,"column":85,"offset":104953},"end":{"line":3211,"column":96,"offset":104964}}},{"type":"text","value":", ","position":{"start":{"line":3211,"column":96,"offset":104964},"end":{"line":3211,"column":98,"offset":104966}}},{"type":"raw","value":"<code class=\"language-text\">interest</code>","position":{"start":{"line":3211,"column":98,"offset":104966},"end":{"line":3211,"column":108,"offset":104976}}},{"type":"text","value":" and ","position":{"start":{"line":3211,"column":108,"offset":104976},"end":{"line":3211,"column":113,"offset":104981}}},{"type":"raw","value":"<code class=\"language-text\">duration</code>","position":{"start":{"line":3211,"column":113,"offset":104981},"end":{"line":3211,"column":123,"offset":104991}}},{"type":"text","value":" ","position":{"start":{"line":3211,"column":123,"offset":104991},"end":{"line":3211,"column":124,"offset":104992}}},{"type":"text","value":"(","position":{"start":{"line":3211,"column":124,"offset":104992},"end":{"line":3211,"column":126,"offset":104994}}},{"type":"text","value":"in years","position":{"start":{"line":3211,"column":126,"offset":104994},"end":{"line":3211,"column":134,"offset":105002}}},{"type":"text","value":")","position":{"start":{"line":3211,"column":134,"offset":105002},"end":{"line":3211,"column":136,"offset":105004}}},{"type":"text","value":". You also want to calculate the amount after the specific duration, and return it back. Call this method with a few example values.","position":{"start":{"line":3211,"column":136,"offset":105004},"end":{"line":3211,"column":268,"offset":105136}}}],"position":{"start":{"line":3211,"column":1,"offset":104869},"end":{"line":3211,"column":268,"offset":105136}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3211,"column":1,"offset":104869},"end":{"line":3211,"column":268,"offset":105136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, if you want to call ","position":{"start":{"line":3213,"column":1,"offset":105140},"end":{"line":3213,"column":34,"offset":105173}}},{"type":"raw","value":"<code class=\"language-text\">simple_interest</code>","position":{"start":{"line":3213,"column":34,"offset":105173},"end":{"line":3213,"column":51,"offset":105190}}},{"type":"text","value":" with ","position":{"start":{"line":3213,"column":51,"offset":105190},"end":{"line":3213,"column":57,"offset":105196}}},{"type":"raw","value":"<code class=\"language-text\">10000</code>","position":{"start":{"line":3213,"column":57,"offset":105196},"end":{"line":3213,"column":64,"offset":105203}}},{"type":"text","value":", with an interest of ","position":{"start":{"line":3213,"column":64,"offset":105203},"end":{"line":3213,"column":86,"offset":105225}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":3213,"column":86,"offset":105225},"end":{"line":3213,"column":89,"offset":105228}}},{"type":"text","value":" percent, for a duration of ","position":{"start":{"line":3213,"column":89,"offset":105228},"end":{"line":3213,"column":117,"offset":105256}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":3213,"column":117,"offset":105256},"end":{"line":3213,"column":120,"offset":105259}}},{"type":"text","value":" years, the correct answer would be as follows: ","position":{"start":{"line":3213,"column":120,"offset":105259},"end":{"line":3213,"column":168,"offset":105307}}},{"type":"raw","value":"<code class=\"language-text\">10000</code>","position":{"start":{"line":3213,"column":168,"offset":105307},"end":{"line":3213,"column":175,"offset":105314}}},{"type":"text","value":" is the principal. In addition to ","position":{"start":{"line":3213,"column":175,"offset":105314},"end":{"line":3213,"column":209,"offset":105348}}},{"type":"raw","value":"<code class=\"language-text\">10000</code>","position":{"start":{"line":3213,"column":209,"offset":105348},"end":{"line":3213,"column":216,"offset":105355}}},{"type":"text","value":", you get the interest. The interest for one year is ","position":{"start":{"line":3213,"column":216,"offset":105355},"end":{"line":3213,"column":269,"offset":105408}}},{"type":"raw","value":"<code class=\"language-text\">10000 * 0.05</code>","position":{"start":{"line":3213,"column":269,"offset":105408},"end":{"line":3213,"column":283,"offset":105422}}},{"type":"text","value":", as the interest figure is in percentage.So that's ","position":{"start":{"line":3213,"column":283,"offset":105422},"end":{"line":3213,"column":335,"offset":105474}}},{"type":"raw","value":"<code class=\"language-text\">500</code>","position":{"start":{"line":3213,"column":335,"offset":105474},"end":{"line":3213,"column":340,"offset":105479}}},{"type":"text","value":" a year, into ","position":{"start":{"line":3213,"column":340,"offset":105479},"end":{"line":3213,"column":354,"offset":105493}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":3213,"column":354,"offset":105493},"end":{"line":3213,"column":357,"offset":105496}}},{"type":"text","value":" which is ","position":{"start":{"line":3213,"column":357,"offset":105496},"end":{"line":3213,"column":367,"offset":105506}}},{"type":"raw","value":"<code class=\"language-text\">2500</code>","position":{"start":{"line":3213,"column":367,"offset":105506},"end":{"line":3213,"column":373,"offset":105512}}},{"type":"text","value":". The result would be ","position":{"start":{"line":3213,"column":373,"offset":105512},"end":{"line":3213,"column":395,"offset":105534}}},{"type":"raw","value":"<code class=\"language-text\">12500</code>","position":{"start":{"line":3213,"column":395,"offset":105534},"end":{"line":3213,"column":402,"offset":105541}}},{"type":"text","value":", and this value should be printed.","position":{"start":{"line":3213,"column":402,"offset":105541},"end":{"line":3213,"column":437,"offset":105576}}}],"position":{"start":{"line":3213,"column":1,"offset":105140},"end":{"line":3213,"column":437,"offset":105576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 1","position":{"start":{"line":3215,"column":3,"offset":105582},"end":{"line":3215,"column":13,"offset":105592}}}],"position":{"start":{"line":3215,"column":1,"offset":105580},"end":{"line":3215,"column":15,"offset":105594}}}],"position":{"start":{"line":3215,"column":1,"offset":105580},"end":{"line":3215,"column":15,"offset":105594}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token keyword\">def</span> <span class=\"token function\">calculate_simple_interest</span><span class=\"token punctuation\">(</span>principal<span class=\"token punctuation\">,</span> interest<span class=\"token punctuation\">,</span> duration<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> principal <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> interest <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span> <span class=\"token operator\">*</span> duration<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>calculate_simple_interest<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3217,"column":1,"offset":105598},"end":{"line":3222,"column":4,"offset":105796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3224,"column":3,"offset":105802},"end":{"line":3224,"column":10,"offset":105809}}}],"position":{"start":{"line":3224,"column":1,"offset":105800},"end":{"line":3224,"column":12,"offset":105811}}}],"position":{"start":{"line":3224,"column":1,"offset":105800},"end":{"line":3224,"column":12,"offset":105811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3226,"column":1,"offset":105815},"end":{"line":3226,"column":18,"offset":105832}}}],"position":{"start":{"line":3226,"column":1,"offset":105815},"end":{"line":3226,"column":18,"offset":105832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Wrote a very simple method to do a simple interest calculation","position":{"start":{"line":3228,"column":5,"offset":105840},"end":{"line":3228,"column":67,"offset":105902}}}],"position":{"start":{"line":3228,"column":1,"offset":105836},"end":{"line":3228,"column":67,"offset":105902}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3228,"column":1,"offset":105836},"end":{"line":3228,"column":67,"offset":105902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 03: Puzzles On Numeric Types","position":{"start":{"line":3230,"column":3,"offset":105908},"end":{"line":3230,"column":36,"offset":105941}}}],"position":{"start":{"line":3230,"column":1,"offset":105906},"end":{"line":3230,"column":38,"offset":105943}}}],"position":{"start":{"line":3230,"column":1,"offset":105906},"end":{"line":3230,"column":38,"offset":105943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this section, we are looking at numeric types. In this specific step, we would be looking at a few puzzles related to values of these types.","position":{"start":{"line":3232,"column":1,"offset":105947},"end":{"line":3232,"column":144,"offset":106090}}}],"position":{"start":{"line":3232,"column":1,"offset":105947},"end":{"line":3232,"column":144,"offset":106090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":3234,"column":3,"offset":106096},"end":{"line":3234,"column":14,"offset":106107}}}],"position":{"start":{"line":3234,"column":1,"offset":106094},"end":{"line":3234,"column":16,"offset":106109}}}],"position":{"start":{"line":3234,"column":1,"offset":106094},"end":{"line":3234,"column":16,"offset":106109}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's create a simple variable ","position":{"start":{"line":3236,"column":1,"offset":106113},"end":{"line":3236,"column":32,"offset":106144}}},{"type":"raw","value":"<code class=\"language-text\">i = 1</code>","position":{"start":{"line":3236,"column":32,"offset":106144},"end":{"line":3236,"column":39,"offset":106151}}},{"type":"text","value":". ","position":{"start":{"line":3236,"column":39,"offset":106151},"end":{"line":3236,"column":41,"offset":106153}}},{"type":"raw","value":"<code class=\"language-text\">i = i + 1</code>","position":{"start":{"line":3236,"column":41,"offset":106153},"end":{"line":3236,"column":52,"offset":106164}}},{"type":"text","value":". What would be the value of ","position":{"start":{"line":3236,"column":52,"offset":106164},"end":{"line":3236,"column":81,"offset":106193}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3236,"column":81,"offset":106193},"end":{"line":3236,"column":84,"offset":106196}}},{"type":"text","value":" after that?","position":{"start":{"line":3236,"column":84,"offset":106196},"end":{"line":3236,"column":96,"offset":106208}}}],"position":{"start":{"line":3236,"column":1,"offset":106113},"end":{"line":3236,"column":96,"offset":106208}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i\n    <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":3238,"column":1,"offset":106212},"end":{"line":3243,"column":4,"offset":106278}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It would be ","position":{"start":{"line":3245,"column":1,"offset":106282},"end":{"line":3245,"column":13,"offset":106294}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":3245,"column":13,"offset":106294},"end":{"line":3245,"column":16,"offset":106297}}},{"type":"text","value":". There is a shortcut way of doing the same thing, by using the ","position":{"start":{"line":3245,"column":16,"offset":106297},"end":{"line":3245,"column":80,"offset":106361}}},{"type":"raw","value":"<code class=\"language-text\">+=</code>","position":{"start":{"line":3245,"column":80,"offset":106361},"end":{"line":3245,"column":84,"offset":106365}}},{"type":"text","value":" operator.","position":{"start":{"line":3245,"column":84,"offset":106365},"end":{"line":3245,"column":94,"offset":106375}}}],"position":{"start":{"line":3245,"column":1,"offset":106282},"end":{"line":3245,"column":94,"offset":106375}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i\n    <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":3247,"column":1,"offset":106379},"end":{"line":3251,"column":4,"offset":106427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Typically in other programming languages, you can do something of this kind: ","position":{"start":{"line":3253,"column":1,"offset":106431},"end":{"line":3253,"column":78,"offset":106508}}},{"type":"raw","value":"<code class=\"language-text\">i++</code>","position":{"start":{"line":3253,"column":78,"offset":106508},"end":{"line":3253,"column":83,"offset":106513}}},{"type":"text","value":". There is no provision in Python to use increment operators like ","position":{"start":{"line":3253,"column":83,"offset":106513},"end":{"line":3253,"column":149,"offset":106579}}},{"type":"raw","value":"<code class=\"language-text\">++</code>","position":{"start":{"line":3253,"column":149,"offset":106579},"end":{"line":3253,"column":153,"offset":106583}}},{"type":"text","value":", in either prefix or suffix mode, like ","position":{"start":{"line":3253,"column":153,"offset":106583},"end":{"line":3253,"column":193,"offset":106623}}},{"type":"raw","value":"<code class=\"language-text\">++i</code>","position":{"start":{"line":3253,"column":193,"offset":106623},"end":{"line":3253,"column":198,"offset":106628}}},{"type":"text","value":", or ","position":{"start":{"line":3253,"column":198,"offset":106628},"end":{"line":3253,"column":203,"offset":106633}}},{"type":"raw","value":"<code class=\"language-text\">i++</code>","position":{"start":{"line":3253,"column":203,"offset":106633},"end":{"line":3253,"column":208,"offset":106638}}},{"type":"text","value":".","position":{"start":{"line":3253,"column":208,"offset":106638},"end":{"line":3253,"column":209,"offset":106639}}}],"position":{"start":{"line":3253,"column":1,"offset":106431},"end":{"line":3253,"column":209,"offset":106639}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i<span class=\"token operator\">+</span><span class=\"token operator\">+</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        i<span class=\"token operator\">+</span><span class=\"token operator\">+</span>\n          <span class=\"token operator\">^</span>\n    SyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token operator\">+</span><span class=\"token operator\">+</span>i\n    <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":3255,"column":1,"offset":106643},"end":{"line":3263,"column":4,"offset":106779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at compound assignments.","position":{"start":{"line":3265,"column":1,"offset":106783},"end":{"line":3265,"column":36,"offset":106818}}}],"position":{"start":{"line":3265,"column":1,"offset":106783},"end":{"line":3265,"column":36,"offset":106818}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i\n    <span class=\"token number\">4</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i\n    <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">/=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">*=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i\n    <span class=\"token number\">6.0</span></code></pre></div>","position":{"start":{"line":3267,"column":1,"offset":106822},"end":{"line":3278,"column":4,"offset":106956}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What you see here, is Dynamic Typing in Python. The type of a variable can change during the lifetime of the program.","position":{"start":{"line":3280,"column":1,"offset":106960},"end":{"line":3280,"column":118,"offset":107077}}}],"position":{"start":{"line":3280,"column":1,"offset":106960},"end":{"line":3280,"column":118,"offset":107077}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token builtin\">type</span> <span class=\"token string\">'int'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> i<span class=\"token operator\">/</span><span class=\"token number\">2.0</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token builtin\">type</span> <span class=\"token string\">'float'</span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":3282,"column":1,"offset":107081},"end":{"line":3289,"column":4,"offset":107177}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's create a couple more numbers. ","position":{"start":{"line":3291,"column":1,"offset":107181},"end":{"line":3291,"column":37,"offset":107217}}},{"type":"raw","value":"<code class=\"language-text\">number1 = 5</code>","position":{"start":{"line":3291,"column":37,"offset":107217},"end":{"line":3291,"column":50,"offset":107230}}},{"type":"text","value":" and ","position":{"start":{"line":3291,"column":50,"offset":107230},"end":{"line":3291,"column":55,"offset":107235}}},{"type":"raw","value":"<code class=\"language-text\">number2 = 2</code>","position":{"start":{"line":3291,"column":55,"offset":107235},"end":{"line":3291,"column":68,"offset":107248}}},{"type":"text","value":". What could be the result of ","position":{"start":{"line":3291,"column":68,"offset":107248},"end":{"line":3291,"column":98,"offset":107278}}},{"type":"raw","value":"<code class=\"language-text\">number1 / number2</code>","position":{"start":{"line":3291,"column":98,"offset":107278},"end":{"line":3291,"column":117,"offset":107297}}},{"type":"text","value":"? You know it, it's ","position":{"start":{"line":3291,"column":117,"offset":107297},"end":{"line":3291,"column":137,"offset":107317}}},{"type":"raw","value":"<code class=\"language-text\">2.5</code>","position":{"start":{"line":3291,"column":137,"offset":107317},"end":{"line":3291,"column":142,"offset":107322}}},{"type":"text","value":" .","position":{"start":{"line":3291,"column":142,"offset":107322},"end":{"line":3291,"column":144,"offset":107324}}}],"position":{"start":{"line":3291,"column":1,"offset":107181},"end":{"line":3291,"column":144,"offset":107324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">number1 // nummber2</code>","position":{"start":{"line":3293,"column":1,"offset":107328},"end":{"line":3293,"column":22,"offset":107349}}},{"type":"text","value":" truncates the value of ","position":{"start":{"line":3293,"column":22,"offset":107349},"end":{"line":3293,"column":46,"offset":107373}}},{"type":"raw","value":"<code class=\"language-text\">2.5</code>","position":{"start":{"line":3293,"column":46,"offset":107373},"end":{"line":3293,"column":51,"offset":107378}}},{"type":"text","value":", to ","position":{"start":{"line":3293,"column":51,"offset":107378},"end":{"line":3293,"column":56,"offset":107383}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":3293,"column":56,"offset":107383},"end":{"line":3293,"column":59,"offset":107386}}},{"type":"text","value":".","position":{"start":{"line":3293,"column":59,"offset":107386},"end":{"line":3293,"column":60,"offset":107387}}}],"position":{"start":{"line":3293,"column":1,"offset":107328},"end":{"line":3293,"column":60,"offset":107387}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> number1<span class=\"token operator\">//</span>number2\n    <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":3295,"column":1,"offset":107391},"end":{"line":3298,"column":4,"offset":107438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you can do ","position":{"start":{"line":3300,"column":1,"offset":107442},"end":{"line":3300,"column":15,"offset":107456}}},{"type":"raw","value":"<code class=\"language-text\">number1 // number2</code>","position":{"start":{"line":3300,"column":15,"offset":107456},"end":{"line":3300,"column":35,"offset":107476}}},{"type":"text","value":", can you also do this: ","position":{"start":{"line":3300,"column":35,"offset":107476},"end":{"line":3300,"column":59,"offset":107500}}},{"type":"raw","value":"<code class=\"language-text\">number1 //= number2</code>","position":{"start":{"line":3300,"column":59,"offset":107500},"end":{"line":3300,"column":80,"offset":107521}}},{"type":"text","value":"?","position":{"start":{"line":3300,"column":80,"offset":107521},"end":{"line":3300,"column":81,"offset":107522}}}],"position":{"start":{"line":3300,"column":1,"offset":107442},"end":{"line":3300,"column":81,"offset":107522}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> number1 <span class=\"token operator\">//=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> number1\n    <span class=\"token number\">2</span></code></pre></div>","position":{"start":{"line":3302,"column":1,"offset":107526},"end":{"line":3306,"column":4,"offset":107587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">5 ** 3</code>","position":{"start":{"line":3308,"column":1,"offset":107591},"end":{"line":3308,"column":9,"offset":107599}}},{"type":"text","value":" is ","position":{"start":{"line":3308,"column":9,"offset":107599},"end":{"line":3308,"column":13,"offset":107603}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":3308,"column":13,"offset":107603},"end":{"line":3308,"column":16,"offset":107606}}},{"type":"text","value":" 'to the power of' ","position":{"start":{"line":3308,"column":16,"offset":107606},"end":{"line":3308,"column":35,"offset":107625}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":3308,"column":35,"offset":107625},"end":{"line":3308,"column":38,"offset":107628}}},{"type":"text","value":", which is ","position":{"start":{"line":3308,"column":38,"offset":107628},"end":{"line":3308,"column":49,"offset":107639}}},{"type":"raw","value":"<code class=\"language-text\">5 * 5 * 5</code>","position":{"start":{"line":3308,"column":49,"offset":107639},"end":{"line":3308,"column":60,"offset":107650}}},{"type":"text","value":", or ","position":{"start":{"line":3308,"column":60,"offset":107650},"end":{"line":3308,"column":65,"offset":107655}}},{"type":"raw","value":"<code class=\"language-text\">125</code>","position":{"start":{"line":3308,"column":65,"offset":107655},"end":{"line":3308,"column":70,"offset":107660}}},{"type":"text","value":".","position":{"start":{"line":3308,"column":70,"offset":107660},"end":{"line":3308,"column":71,"offset":107661}}}],"position":{"start":{"line":3308,"column":1,"offset":107591},"end":{"line":3308,"column":71,"offset":107661}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token operator\">**</span> <span class=\"token number\">3</span>\n    <span class=\"token number\">125</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">125</span></code></pre></div>","position":{"start":{"line":3310,"column":1,"offset":107665},"end":{"line":3315,"column":4,"offset":107731}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This can also be achieved by invoking ","position":{"start":{"line":3317,"column":1,"offset":107735},"end":{"line":3317,"column":39,"offset":107773}}},{"type":"raw","value":"<code class=\"language-text\">pow(5, 3)</code>","position":{"start":{"line":3317,"column":39,"offset":107773},"end":{"line":3317,"column":50,"offset":107784}}},{"type":"text","value":". We have an operator, as well as a method at our disposal.","position":{"start":{"line":3317,"column":50,"offset":107784},"end":{"line":3317,"column":109,"offset":107843}}}],"position":{"start":{"line":3317,"column":1,"offset":107735},"end":{"line":3317,"column":109,"offset":107843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The last thing we will look at, are type conversion functions.","position":{"start":{"line":3319,"column":1,"offset":107847},"end":{"line":3319,"column":63,"offset":107909}}}],"position":{"start":{"line":3319,"column":1,"offset":107847},"end":{"line":3319,"column":63,"offset":107909}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you need to convert an ","position":{"start":{"line":3321,"column":1,"offset":107913},"end":{"line":3321,"column":27,"offset":107939}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3321,"column":27,"offset":107939},"end":{"line":3321,"column":32,"offset":107944}}},{"type":"text","value":" value to a ","position":{"start":{"line":3321,"column":32,"offset":107944},"end":{"line":3321,"column":44,"offset":107956}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3321,"column":44,"offset":107956},"end":{"line":3321,"column":51,"offset":107963}}},{"type":"text","value":", or a ","position":{"start":{"line":3321,"column":51,"offset":107963},"end":{"line":3321,"column":58,"offset":107970}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3321,"column":58,"offset":107970},"end":{"line":3321,"column":65,"offset":107977}}},{"type":"text","value":" to an ","position":{"start":{"line":3321,"column":65,"offset":107977},"end":{"line":3321,"column":72,"offset":107984}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3321,"column":72,"offset":107984},"end":{"line":3321,"column":77,"offset":107989}}},{"type":"text","value":".","position":{"start":{"line":3321,"column":77,"offset":107989},"end":{"line":3321,"column":78,"offset":107990}}}],"position":{"start":{"line":3321,"column":1,"offset":107913},"end":{"line":3321,"column":78,"offset":107990}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":3323,"column":1,"offset":107994},"end":{"line":3326,"column":4,"offset":108033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What if you want to round a value? ","position":{"start":{"line":3328,"column":1,"offset":108037},"end":{"line":3328,"column":36,"offset":108072}}},{"type":"raw","value":"<code class=\"language-text\">5.6</code>","position":{"start":{"line":3328,"column":36,"offset":108072},"end":{"line":3328,"column":41,"offset":108077}}},{"type":"text","value":" is nearer to ","position":{"start":{"line":3328,"column":41,"offset":108077},"end":{"line":3328,"column":55,"offset":108091}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":3328,"column":55,"offset":108091},"end":{"line":3328,"column":58,"offset":108094}}},{"type":"text","value":" than ","position":{"start":{"line":3328,"column":58,"offset":108094},"end":{"line":3328,"column":64,"offset":108100}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":3328,"column":64,"offset":108100},"end":{"line":3328,"column":67,"offset":108103}}},{"type":"text","value":". You can use a function called ","position":{"start":{"line":3328,"column":67,"offset":108103},"end":{"line":3328,"column":99,"offset":108135}}},{"type":"raw","value":"<code class=\"language-text\">round()</code>","position":{"start":{"line":3328,"column":99,"offset":108135},"end":{"line":3328,"column":108,"offset":108144}}},{"type":"text","value":", and here,","position":{"start":{"line":3328,"column":108,"offset":108144},"end":{"line":3328,"column":119,"offset":108155}}},{"type":"raw","value":"<code class=\"language-text\">round(5.6)</code>","position":{"start":{"line":3328,"column":119,"offset":108155},"end":{"line":3328,"column":131,"offset":108167}}},{"type":"text","value":" gives the correct result ","position":{"start":{"line":3328,"column":131,"offset":108167},"end":{"line":3328,"column":157,"offset":108193}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":3328,"column":157,"offset":108193},"end":{"line":3328,"column":160,"offset":108196}}},{"type":"text","value":".","position":{"start":{"line":3328,"column":160,"offset":108196},"end":{"line":3328,"column":161,"offset":108197}}}],"position":{"start":{"line":3328,"column":1,"offset":108037},"end":{"line":3328,"column":161,"offset":108197}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">6</span></code></pre></div>","position":{"start":{"line":3330,"column":1,"offset":108201},"end":{"line":3337,"column":4,"offset":108296}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">round()</code>","position":{"start":{"line":3339,"column":1,"offset":108300},"end":{"line":3339,"column":10,"offset":108309}}},{"type":"text","value":" can also allows you to specify number of decimals in the result.","position":{"start":{"line":3339,"column":10,"offset":108309},"end":{"line":3339,"column":75,"offset":108374}}}],"position":{"start":{"line":3339,"column":1,"offset":108300},"end":{"line":3339,"column":75,"offset":108374}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5.7</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">5.678</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5.68</span></code></pre></div>","position":{"start":{"line":3341,"column":1,"offset":108378},"end":{"line":3346,"column":4,"offset":108460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also convert ","position":{"start":{"line":3348,"column":1,"offset":108464},"end":{"line":3348,"column":22,"offset":108485}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3348,"column":22,"offset":108485},"end":{"line":3348,"column":27,"offset":108490}}},{"type":"text","value":" to ","position":{"start":{"line":3348,"column":27,"offset":108490},"end":{"line":3348,"column":31,"offset":108494}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3348,"column":31,"offset":108494},"end":{"line":3348,"column":38,"offset":108501}}},{"type":"text","value":", by using the function ","position":{"start":{"line":3348,"column":38,"offset":108501},"end":{"line":3348,"column":62,"offset":108525}}},{"type":"raw","value":"<code class=\"language-text\">float()</code>","position":{"start":{"line":3348,"column":62,"offset":108525},"end":{"line":3348,"column":71,"offset":108534}}},{"type":"text","value":".","position":{"start":{"line":3348,"column":71,"offset":108534},"end":{"line":3348,"column":72,"offset":108535}}}],"position":{"start":{"line":3348,"column":1,"offset":108464},"end":{"line":3348,"column":72,"offset":108535}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">5.0</span></code></pre></div>","position":{"start":{"line":3350,"column":1,"offset":108539},"end":{"line":3353,"column":4,"offset":108580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3355,"column":3,"offset":108586},"end":{"line":3355,"column":10,"offset":108593}}}],"position":{"start":{"line":3355,"column":1,"offset":108584},"end":{"line":3355,"column":12,"offset":108595}}}],"position":{"start":{"line":3355,"column":1,"offset":108584},"end":{"line":3355,"column":12,"offset":108595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3357,"column":1,"offset":108599},"end":{"line":3357,"column":18,"offset":108616}}}],"position":{"start":{"line":3357,"column":1,"offset":108599},"end":{"line":3357,"column":18,"offset":108616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at a few corner cases related to your numeric types.","position":{"start":{"line":3359,"column":5,"offset":108624},"end":{"line":3359,"column":64,"offset":108683}}}],"position":{"start":{"line":3359,"column":1,"offset":108620},"end":{"line":3359,"column":64,"offset":108683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Examined the different operators available for use with values of numeric types","position":{"start":{"line":3360,"column":5,"offset":108689},"end":{"line":3360,"column":84,"offset":108768}}}],"position":{"start":{"line":3360,"column":1,"offset":108685},"end":{"line":3360,"column":84,"offset":108768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned about the usage of type conversion functions","position":{"start":{"line":3361,"column":5,"offset":108774},"end":{"line":3361,"column":57,"offset":108826}}}],"position":{"start":{"line":3361,"column":1,"offset":108770},"end":{"line":3361,"column":57,"offset":108826}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3359,"column":1,"offset":108620},"end":{"line":3361,"column":57,"offset":108826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 04: Introducing Boolean Type","position":{"start":{"line":3363,"column":3,"offset":108832},"end":{"line":3363,"column":36,"offset":108865}}}],"position":{"start":{"line":3363,"column":1,"offset":108830},"end":{"line":3363,"column":38,"offset":108867}}}],"position":{"start":{"line":3363,"column":1,"offset":108830},"end":{"line":3363,"column":38,"offset":108867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We will now shift our attention to the ","position":{"start":{"line":3365,"column":1,"offset":108871},"end":{"line":3365,"column":40,"offset":108910}}},{"type":"raw","value":"<code class=\"language-text\">bool</code>","position":{"start":{"line":3365,"column":40,"offset":108910},"end":{"line":3365,"column":46,"offset":108916}}},{"type":"text","value":" data type.","position":{"start":{"line":3365,"column":46,"offset":108916},"end":{"line":3365,"column":57,"offset":108927}}}],"position":{"start":{"line":3365,"column":1,"offset":108871},"end":{"line":3365,"column":57,"offset":108927}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A boolean value is something which can be either \"true\" or \"false\".","position":{"start":{"line":3367,"column":1,"offset":108931},"end":{"line":3367,"column":68,"offset":108998}}}],"position":{"start":{"line":3367,"column":1,"offset":108931},"end":{"line":3367,"column":68,"offset":108998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":3369,"column":3,"offset":109004},"end":{"line":3369,"column":14,"offset":109015}}}],"position":{"start":{"line":3369,"column":1,"offset":109002},"end":{"line":3369,"column":16,"offset":109017}}}],"position":{"start":{"line":3369,"column":1,"offset":109002},"end":{"line":3369,"column":16,"offset":109017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, \"true\" is represented by ","position":{"start":{"line":3371,"column":1,"offset":109021},"end":{"line":3371,"column":37,"offset":109057}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3371,"column":37,"offset":109057},"end":{"line":3371,"column":43,"offset":109063}}},{"type":"text","value":", and \"false\" by ","position":{"start":{"line":3371,"column":43,"offset":109063},"end":{"line":3371,"column":60,"offset":109080}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3371,"column":60,"offset":109080},"end":{"line":3371,"column":67,"offset":109087}}},{"type":"text","value":". It's important to remember that it's ","position":{"start":{"line":3371,"column":67,"offset":109087},"end":{"line":3371,"column":106,"offset":109126}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3371,"column":106,"offset":109126},"end":{"line":3371,"column":112,"offset":109132}}},{"type":"text","value":" with a capital ","position":{"start":{"line":3371,"column":112,"offset":109132},"end":{"line":3371,"column":128,"offset":109148}}},{"type":"raw","value":"<code class=\"language-text\">'T'</code>","position":{"start":{"line":3371,"column":128,"offset":109148},"end":{"line":3371,"column":133,"offset":109153}}},{"type":"text","value":", and ","position":{"start":{"line":3371,"column":133,"offset":109153},"end":{"line":3371,"column":139,"offset":109159}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3371,"column":139,"offset":109159},"end":{"line":3371,"column":146,"offset":109166}}},{"type":"text","value":" with a capital ","position":{"start":{"line":3371,"column":146,"offset":109166},"end":{"line":3371,"column":162,"offset":109182}}},{"type":"raw","value":"<code class=\"language-text\">'F'</code>","position":{"start":{"line":3371,"column":162,"offset":109182},"end":{"line":3371,"column":167,"offset":109187}}},{"type":"text","value":".","position":{"start":{"line":3371,"column":167,"offset":109187},"end":{"line":3371,"column":168,"offset":109188}}}],"position":{"start":{"line":3371,"column":1,"offset":109021},"end":{"line":3371,"column":168,"offset":109188}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">False</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> true\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'true'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> false\n    Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    NameError<span class=\"token punctuation\">:</span> name <span class=\"token string\">'false'</span> <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> defined</code></pre></div>","position":{"start":{"line":3373,"column":1,"offset":109192},"end":{"line":3386,"column":4,"offset":109538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The boolean variable ","position":{"start":{"line":3388,"column":1,"offset":109542},"end":{"line":3388,"column":22,"offset":109563}}},{"type":"raw","value":"<code class=\"language-text\">is_even</code>","position":{"start":{"line":3388,"column":22,"offset":109563},"end":{"line":3388,"column":31,"offset":109572}}},{"type":"text","value":" indicates whether a number is even or not.","position":{"start":{"line":3388,"column":31,"offset":109572},"end":{"line":3388,"column":74,"offset":109615}}}],"position":{"start":{"line":3388,"column":1,"offset":109542},"end":{"line":3388,"column":74,"offset":109615}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> is_even <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> is_odd <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":3390,"column":1,"offset":109619},"end":{"line":3393,"column":4,"offset":109681}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's create a variable ","position":{"start":{"line":3395,"column":1,"offset":109685},"end":{"line":3395,"column":25,"offset":109709}}},{"type":"raw","value":"<code class=\"language-text\">i = 10</code>","position":{"start":{"line":3395,"column":25,"offset":109709},"end":{"line":3395,"column":33,"offset":109717}}},{"type":"text","value":". We want to find out if ","position":{"start":{"line":3395,"column":33,"offset":109717},"end":{"line":3395,"column":58,"offset":109742}}},{"type":"raw","value":"<code class=\"language-text\">i > 15</code>","position":{"start":{"line":3395,"column":58,"offset":109742},"end":{"line":3395,"column":66,"offset":109750}}},{"type":"text","value":". What do you think is the result? ","position":{"start":{"line":3395,"column":66,"offset":109750},"end":{"line":3395,"column":101,"offset":109785}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3395,"column":101,"offset":109785},"end":{"line":3395,"column":108,"offset":109792}}},{"type":"text","value":".","position":{"start":{"line":3395,"column":108,"offset":109792},"end":{"line":3395,"column":109,"offset":109793}}}],"position":{"start":{"line":3395,"column":1,"offset":109685},"end":{"line":3395,"column":109,"offset":109793}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">></span> <span class=\"token number\">15</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">15</span>\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":3397,"column":1,"offset":109797},"end":{"line":3403,"column":4,"offset":109880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In general, boolean values can represent the result of logical conditions.","position":{"start":{"line":3405,"column":1,"offset":109884},"end":{"line":3405,"column":75,"offset":109958}}}],"position":{"start":{"line":3405,"column":1,"offset":109884},"end":{"line":3405,"column":75,"offset":109958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at other operations that can result in ","position":{"start":{"line":3407,"column":1,"offset":109962},"end":{"line":3407,"column":51,"offset":110012}}},{"type":"raw","value":"<code class=\"language-text\">bool</code>","position":{"start":{"line":3407,"column":51,"offset":110012},"end":{"line":3407,"column":57,"offset":110018}}},{"type":"text","value":" values. We looked at ","position":{"start":{"line":3407,"column":57,"offset":110018},"end":{"line":3407,"column":79,"offset":110040}}},{"type":"raw","value":"<code class=\"language-text\">></code>","position":{"start":{"line":3407,"column":79,"offset":110040},"end":{"line":3407,"column":82,"offset":110043}}},{"type":"text","value":" and ","position":{"start":{"line":3407,"column":82,"offset":110043},"end":{"line":3407,"column":87,"offset":110048}}},{"type":"raw","value":"<code class=\"language-text\">&lt;</code>","position":{"start":{"line":3407,"column":87,"offset":110048},"end":{"line":3407,"column":90,"offset":110051}}},{"type":"text","value":". Another operation which you can perform, is ","position":{"start":{"line":3407,"column":90,"offset":110051},"end":{"line":3407,"column":136,"offset":110097}}},{"type":"raw","value":"<code class=\"language-text\">>=</code>","position":{"start":{"line":3407,"column":136,"offset":110097},"end":{"line":3407,"column":140,"offset":110101}}},{"type":"text","value":".","position":{"start":{"line":3407,"column":140,"offset":110101},"end":{"line":3407,"column":141,"offset":110102}}}],"position":{"start":{"line":3407,"column":1,"offset":109962},"end":{"line":3407,"column":141,"offset":110102}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">>=</span> <span class=\"token number\">15</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">>=</span> <span class=\"token number\">10</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">></span> <span class=\"token number\">10</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":3409,"column":1,"offset":110106},"end":{"line":3420,"column":4,"offset":110256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">==</code>","position":{"start":{"line":3422,"column":1,"offset":110260},"end":{"line":3422,"column":5,"offset":110264}}},{"type":"text","value":" is the comparison operator. We are only comparing the value of ","position":{"start":{"line":3422,"column":5,"offset":110264},"end":{"line":3422,"column":69,"offset":110328}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3422,"column":69,"offset":110328},"end":{"line":3422,"column":72,"offset":110331}}},{"type":"text","value":" against ","position":{"start":{"line":3422,"column":72,"offset":110331},"end":{"line":3422,"column":81,"offset":110340}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":3422,"column":81,"offset":110340},"end":{"line":3422,"column":85,"offset":110344}}},{"type":"text","value":", not changing its value.","position":{"start":{"line":3422,"column":85,"offset":110344},"end":{"line":3422,"column":110,"offset":110369}}}],"position":{"start":{"line":3422,"column":1,"offset":110260},"end":{"line":3422,"column":110,"offset":110369}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">==</span> <span class=\"token number\">10</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">==</span> <span class=\"token number\">11</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":3424,"column":1,"offset":110373},"end":{"line":3429,"column":4,"offset":110442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3431,"column":3,"offset":110448},"end":{"line":3431,"column":10,"offset":110455}}}],"position":{"start":{"line":3431,"column":1,"offset":110446},"end":{"line":3431,"column":12,"offset":110457}}}],"position":{"start":{"line":3431,"column":1,"offset":110446},"end":{"line":3431,"column":12,"offset":110457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3433,"column":1,"offset":110461},"end":{"line":3433,"column":18,"offset":110478}}}],"position":{"start":{"line":3433,"column":1,"offset":110461},"end":{"line":3433,"column":18,"offset":110478}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Were introduced to the ","position":{"start":{"line":3435,"column":5,"offset":110486},"end":{"line":3435,"column":28,"offset":110509}}},{"type":"raw","value":"<code class=\"language-text\">bool</code>","position":{"start":{"line":3435,"column":28,"offset":110509},"end":{"line":3435,"column":34,"offset":110515}}},{"type":"text","value":" data type","position":{"start":{"line":3435,"column":34,"offset":110515},"end":{"line":3435,"column":44,"offset":110525}}}],"position":{"start":{"line":3435,"column":1,"offset":110482},"end":{"line":3435,"column":44,"offset":110525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned that ","position":{"start":{"line":3436,"column":5,"offset":110531},"end":{"line":3436,"column":18,"offset":110544}}},{"type":"raw","value":"<code class=\"language-text\">bool</code>","position":{"start":{"line":3436,"column":18,"offset":110544},"end":{"line":3436,"column":24,"offset":110550}}},{"type":"text","value":" variables are useful handy while testing logical conditions","position":{"start":{"line":3436,"column":24,"offset":110550},"end":{"line":3436,"column":84,"offset":110610}}}],"position":{"start":{"line":3436,"column":1,"offset":110527},"end":{"line":3436,"column":84,"offset":110610}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3435,"column":1,"offset":110482},"end":{"line":3436,"column":84,"offset":110610}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 05: Introducing Conditionals","position":{"start":{"line":3438,"column":3,"offset":110616},"end":{"line":3438,"column":36,"offset":110649}}}],"position":{"start":{"line":3438,"column":1,"offset":110614},"end":{"line":3438,"column":38,"offset":110651}}}],"position":{"start":{"line":3438,"column":1,"offset":110614},"end":{"line":3438,"column":38,"offset":110651}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at ","position":{"start":{"line":3440,"column":1,"offset":110655},"end":{"line":3440,"column":29,"offset":110683}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3440,"column":29,"offset":110683},"end":{"line":3440,"column":33,"offset":110687}}},{"type":"text","value":" statement.","position":{"start":{"line":3440,"column":33,"offset":110687},"end":{"line":3440,"column":44,"offset":110698}}}],"position":{"start":{"line":3440,"column":1,"offset":110655},"end":{"line":3440,"column":44,"offset":110698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sometimes you need to execute code only when certain conditions are true. You can use a ","position":{"start":{"line":3442,"column":1,"offset":110702},"end":{"line":3442,"column":89,"offset":110790}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3442,"column":89,"offset":110790},"end":{"line":3442,"column":93,"offset":110794}}},{"type":"text","value":" condition, which is the simplest conditional in Python. Let's look at an example.","position":{"start":{"line":3442,"column":93,"offset":110794},"end":{"line":3442,"column":175,"offset":110876}}}],"position":{"start":{"line":3442,"column":1,"offset":110702},"end":{"line":3442,"column":175,"offset":110876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":3444,"column":3,"offset":110882},"end":{"line":3444,"column":14,"offset":110893}}}],"position":{"start":{"line":3444,"column":1,"offset":110880},"end":{"line":3444,"column":16,"offset":110895}}}],"position":{"start":{"line":3444,"column":1,"offset":110880},"end":{"line":3444,"column":16,"offset":110895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say ","position":{"start":{"line":3446,"column":1,"offset":110899},"end":{"line":3446,"column":11,"offset":110909}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3446,"column":11,"offset":110909},"end":{"line":3446,"column":14,"offset":110912}}},{"type":"text","value":" has a value of ","position":{"start":{"line":3446,"column":14,"offset":110912},"end":{"line":3446,"column":30,"offset":110928}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":3446,"column":30,"offset":110928},"end":{"line":3446,"column":33,"offset":110931}}},{"type":"text","value":". You want to print something, only if ","position":{"start":{"line":3446,"column":33,"offset":110931},"end":{"line":3446,"column":72,"offset":110970}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3446,"column":72,"offset":110970},"end":{"line":3446,"column":75,"offset":110973}}},{"type":"text","value":" has a value greater than ","position":{"start":{"line":3446,"column":75,"offset":110973},"end":{"line":3446,"column":101,"offset":110999}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":3446,"column":101,"offset":110999},"end":{"line":3446,"column":104,"offset":111002}}},{"type":"text","value":". How do you do that?","position":{"start":{"line":3446,"column":104,"offset":111002},"end":{"line":3446,"column":125,"offset":111023}}}],"position":{"start":{"line":3446,"column":1,"offset":110899},"end":{"line":3446,"column":125,"offset":111023}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> is greater than 3\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">5</span> <span class=\"token keyword\">is</span> greater than <span class=\"token number\">3</span></code></pre></div>","position":{"start":{"line":3448,"column":1,"offset":111027},"end":{"line":3454,"column":4,"offset":111152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax of the ","position":{"start":{"line":3456,"column":1,"offset":111156},"end":{"line":3456,"column":19,"offset":111174}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3456,"column":19,"offset":111174},"end":{"line":3456,"column":23,"offset":111178}}},{"type":"text","value":" is very simple: ","position":{"start":{"line":3456,"column":23,"offset":111178},"end":{"line":3456,"column":40,"offset":111195}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3456,"column":40,"offset":111195},"end":{"line":3456,"column":44,"offset":111199}}},{"type":"text","value":" followed by a condition; with the condition you want to check. It looks like: ","position":{"start":{"line":3456,"column":44,"offset":111199},"end":{"line":3456,"column":123,"offset":111278}}},{"type":"raw","value":"<code class=\"language-text\">if i>3: ...</code>","position":{"start":{"line":3456,"column":123,"offset":111278},"end":{"line":3456,"column":136,"offset":111291}}},{"type":"text","value":" You need to indent the body of the ","position":{"start":{"line":3456,"column":136,"offset":111291},"end":{"line":3456,"column":172,"offset":111327}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3456,"column":172,"offset":111327},"end":{"line":3456,"column":176,"offset":111331}}},{"type":"text","value":" with ","position":{"start":{"line":3456,"column":176,"offset":111331},"end":{"line":3456,"column":182,"offset":111337}}},{"type":"raw","value":"<code class=\"language-text\">&lt;SPACE></code>","position":{"start":{"line":3456,"column":182,"offset":111337},"end":{"line":3456,"column":191,"offset":111346}}},{"type":"text","value":"s as usual.","position":{"start":{"line":3456,"column":191,"offset":111346},"end":{"line":3456,"column":202,"offset":111357}}}],"position":{"start":{"line":3456,"column":1,"offset":111156},"end":{"line":3456,"column":202,"offset":111357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say ","position":{"start":{"line":3458,"column":1,"offset":111361},"end":{"line":3458,"column":11,"offset":111371}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3458,"column":11,"offset":111371},"end":{"line":3458,"column":14,"offset":111374}}},{"type":"text","value":" has a value of ","position":{"start":{"line":3458,"column":14,"offset":111374},"end":{"line":3458,"column":30,"offset":111390}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":3458,"column":30,"offset":111390},"end":{"line":3458,"column":33,"offset":111393}}},{"type":"text","value":". What would happen if we execute the same code again?","position":{"start":{"line":3458,"column":33,"offset":111393},"end":{"line":3458,"column":87,"offset":111447}}}],"position":{"start":{"line":3458,"column":1,"offset":111361},"end":{"line":3458,"column":87,"offset":111447}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>i<span class=\"token punctuation\">}</span></span><span class=\"token string\"> is greater than 3\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":3460,"column":1,"offset":111451},"end":{"line":3465,"column":4,"offset":111551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You would see that nothing is printed to the console. Based on the value of ","position":{"start":{"line":3467,"column":1,"offset":111555},"end":{"line":3467,"column":77,"offset":111631}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3467,"column":77,"offset":111631},"end":{"line":3467,"column":80,"offset":111634}}},{"type":"text","value":" , either the statement is executed, or it's not. That's what an ","position":{"start":{"line":3467,"column":80,"offset":111634},"end":{"line":3467,"column":145,"offset":111699}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3467,"column":145,"offset":111699},"end":{"line":3467,"column":149,"offset":111703}}},{"type":"text","value":" helps us to do.","position":{"start":{"line":3467,"column":149,"offset":111703},"end":{"line":3467,"column":165,"offset":111719}}}],"position":{"start":{"line":3467,"column":1,"offset":111555},"end":{"line":3467,"column":165,"offset":111719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The way you can think about an ","position":{"start":{"line":3469,"column":1,"offset":111723},"end":{"line":3469,"column":32,"offset":111754}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3469,"column":32,"offset":111754},"end":{"line":3469,"column":36,"offset":111758}}},{"type":"text","value":", is the body of code under the ","position":{"start":{"line":3469,"column":36,"offset":111758},"end":{"line":3469,"column":68,"offset":111790}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3469,"column":68,"offset":111790},"end":{"line":3469,"column":72,"offset":111794}}},{"type":"text","value":" is executed only when this condition is ","position":{"start":{"line":3469,"column":72,"offset":111794},"end":{"line":3469,"column":113,"offset":111835}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3469,"column":113,"offset":111835},"end":{"line":3469,"column":119,"offset":111841}}},{"type":"text","value":". If this condition is not ","position":{"start":{"line":3469,"column":119,"offset":111841},"end":{"line":3469,"column":146,"offset":111868}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3469,"column":146,"offset":111868},"end":{"line":3469,"column":152,"offset":111874}}},{"type":"text","value":", that code is not executed at all.","position":{"start":{"line":3469,"column":152,"offset":111874},"end":{"line":3469,"column":187,"offset":111909}}}],"position":{"start":{"line":3469,"column":1,"offset":111723},"end":{"line":3469,"column":187,"offset":111909}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"False\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"True\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":3471,"column":1,"offset":111913},"end":{"line":3479,"column":4,"offset":112045}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's take two different numbers, say ","position":{"start":{"line":3481,"column":1,"offset":112049},"end":{"line":3481,"column":39,"offset":112087}}},{"type":"raw","value":"<code class=\"language-text\">a = 5</code>","position":{"start":{"line":3481,"column":39,"offset":112087},"end":{"line":3481,"column":46,"offset":112094}}},{"type":"text","value":", and ","position":{"start":{"line":3481,"column":46,"offset":112094},"end":{"line":3481,"column":52,"offset":112100}}},{"type":"raw","value":"<code class=\"language-text\">b = 7</code>","position":{"start":{"line":3481,"column":52,"offset":112100},"end":{"line":3481,"column":59,"offset":112107}}},{"type":"text","value":". We want to compare them, and predict if ","position":{"start":{"line":3481,"column":59,"offset":112107},"end":{"line":3481,"column":101,"offset":112149}}},{"type":"raw","value":"<code class=\"language-text\">a</code>","position":{"start":{"line":3481,"column":101,"offset":112149},"end":{"line":3481,"column":104,"offset":112152}}},{"type":"text","value":" is greater that ","position":{"start":{"line":3481,"column":104,"offset":112152},"end":{"line":3481,"column":121,"offset":112169}}},{"type":"raw","value":"<code class=\"language-text\">b</code>","position":{"start":{"line":3481,"column":121,"offset":112169},"end":{"line":3481,"column":124,"offset":112172}}},{"type":"text","value":" .","position":{"start":{"line":3481,"column":124,"offset":112172},"end":{"line":3481,"column":126,"offset":112174}}}],"position":{"start":{"line":3481,"column":1,"offset":112049},"end":{"line":3481,"column":126,"offset":112174}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a is greater than b\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a is greater than b\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    a <span class=\"token keyword\">is</span> greater than b</code></pre></div>","position":{"start":{"line":3483,"column":1,"offset":112178},"end":{"line":3495,"column":4,"offset":112398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3497,"column":3,"offset":112404},"end":{"line":3497,"column":10,"offset":112411}}}],"position":{"start":{"line":3497,"column":1,"offset":112402},"end":{"line":3497,"column":12,"offset":112413}}}],"position":{"start":{"line":3497,"column":1,"offset":112402},"end":{"line":3497,"column":12,"offset":112413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3499,"column":1,"offset":112417},"end":{"line":3499,"column":18,"offset":112434}}}],"position":{"start":{"line":3499,"column":1,"offset":112417},"end":{"line":3499,"column":18,"offset":112434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Were introduced to the ","position":{"start":{"line":3501,"column":5,"offset":112442},"end":{"line":3501,"column":28,"offset":112465}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3501,"column":28,"offset":112465},"end":{"line":3501,"column":32,"offset":112469}}},{"type":"text","value":" statement, the simplest Python conditional","position":{"start":{"line":3501,"column":32,"offset":112469},"end":{"line":3501,"column":75,"offset":112512}}}],"position":{"start":{"line":3501,"column":1,"offset":112438},"end":{"line":3501,"column":75,"offset":112512}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood how an ","position":{"start":{"line":3502,"column":5,"offset":112518},"end":{"line":3502,"column":23,"offset":112536}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3502,"column":23,"offset":112536},"end":{"line":3502,"column":27,"offset":112540}}},{"type":"text","value":" helps in implementing conditional program logic","position":{"start":{"line":3502,"column":27,"offset":112540},"end":{"line":3502,"column":75,"offset":112588}}}],"position":{"start":{"line":3502,"column":1,"offset":112514},"end":{"line":3502,"column":75,"offset":112588}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3501,"column":1,"offset":112438},"end":{"line":3502,"column":75,"offset":112588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 06: Classroom Exercise CE-DT-01","position":{"start":{"line":3504,"column":3,"offset":112594},"end":{"line":3504,"column":39,"offset":112630}}}],"position":{"start":{"line":3504,"column":1,"offset":112592},"end":{"line":3504,"column":41,"offset":112632}}}],"position":{"start":{"line":3504,"column":1,"offset":112592},"end":{"line":3504,"column":41,"offset":112632}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at a couple of exercises with the if statement.","position":{"start":{"line":3506,"column":1,"offset":112636},"end":{"line":3506,"column":73,"offset":112708}}}],"position":{"start":{"line":3506,"column":1,"offset":112636},"end":{"line":3506,"column":73,"offset":112708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":3508,"column":3,"offset":112714},"end":{"line":3508,"column":14,"offset":112725}}}],"position":{"start":{"line":3508,"column":1,"offset":112712},"end":{"line":3508,"column":16,"offset":112727}}}],"position":{"start":{"line":3508,"column":1,"offset":112712},"end":{"line":3508,"column":16,"offset":112727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we define four variables: ","position":{"start":{"line":3510,"column":1,"offset":112731},"end":{"line":3510,"column":37,"offset":112767}}},{"type":"raw","value":"<code class=\"language-text\">a = 1</code>","position":{"start":{"line":3510,"column":37,"offset":112767},"end":{"line":3510,"column":44,"offset":112774}}},{"type":"text","value":", ","position":{"start":{"line":3510,"column":44,"offset":112774},"end":{"line":3510,"column":46,"offset":112776}}},{"type":"raw","value":"<code class=\"language-text\">b = 2</code>","position":{"start":{"line":3510,"column":46,"offset":112776},"end":{"line":3510,"column":53,"offset":112783}}},{"type":"text","value":" , ","position":{"start":{"line":3510,"column":53,"offset":112783},"end":{"line":3510,"column":56,"offset":112786}}},{"type":"raw","value":"<code class=\"language-text\">c = 3</code>","position":{"start":{"line":3510,"column":56,"offset":112786},"end":{"line":3510,"column":63,"offset":112793}}},{"type":"text","value":" and ","position":{"start":{"line":3510,"column":63,"offset":112793},"end":{"line":3510,"column":68,"offset":112798}}},{"type":"raw","value":"<code class=\"language-text\">d = 5</code>","position":{"start":{"line":3510,"column":68,"offset":112798},"end":{"line":3510,"column":75,"offset":112805}}},{"type":"text","value":". we want to find out, if ","position":{"start":{"line":3510,"column":75,"offset":112805},"end":{"line":3510,"column":101,"offset":112831}}},{"type":"raw","value":"<code class=\"language-text\">a + b</code>","position":{"start":{"line":3510,"column":101,"offset":112831},"end":{"line":3510,"column":108,"offset":112838}}},{"type":"text","value":" is greater than ","position":{"start":{"line":3510,"column":108,"offset":112838},"end":{"line":3510,"column":125,"offset":112855}}},{"type":"raw","value":"<code class=\"language-text\">c + d</code>","position":{"start":{"line":3510,"column":125,"offset":112855},"end":{"line":3510,"column":132,"offset":112862}}},{"type":"text","value":".","position":{"start":{"line":3510,"column":132,"offset":112862},"end":{"line":3510,"column":133,"offset":112863}}}],"position":{"start":{"line":3510,"column":1,"offset":112731},"end":{"line":3510,"column":133,"offset":112863}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> c <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> d <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> a<span class=\"token operator\">+</span>b <span class=\"token operator\">></span> c<span class=\"token operator\">+</span>d <span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a+b > c +d\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> <span class=\"token number\">9</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> a<span class=\"token operator\">+</span>b <span class=\"token operator\">></span> c<span class=\"token operator\">+</span>d <span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a+b > c +d\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    a<span class=\"token operator\">+</span>b <span class=\"token operator\">></span> c <span class=\"token operator\">+</span>d</code></pre></div>","position":{"start":{"line":3512,"column":1,"offset":112867},"end":{"line":3525,"column":4,"offset":113102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we are given three values meant to be the angles of a triangle. Their values are ","position":{"start":{"line":3527,"column":1,"offset":113106},"end":{"line":3527,"column":92,"offset":113197}}},{"type":"raw","value":"<code class=\"language-text\">angle1 = 30</code>","position":{"start":{"line":3527,"column":92,"offset":113197},"end":{"line":3527,"column":105,"offset":113210}}},{"type":"text","value":", ","position":{"start":{"line":3527,"column":105,"offset":113210},"end":{"line":3527,"column":107,"offset":113212}}},{"type":"raw","value":"<code class=\"language-text\">angle2 = 20</code>","position":{"start":{"line":3527,"column":107,"offset":113212},"end":{"line":3527,"column":120,"offset":113225}}},{"type":"text","value":" and ","position":{"start":{"line":3527,"column":120,"offset":113225},"end":{"line":3527,"column":125,"offset":113230}}},{"type":"raw","value":"<code class=\"language-text\">angle3 = 60</code>","position":{"start":{"line":3527,"column":125,"offset":113230},"end":{"line":3527,"column":138,"offset":113243}}},{"type":"text","value":". You want to find out if these three angles actually form a valid triangle. You know that the sum of the angles of a triangle is always ","position":{"start":{"line":3527,"column":138,"offset":113243},"end":{"line":3527,"column":275,"offset":113380}}},{"type":"raw","value":"<code class=\"language-text\">180</code>","position":{"start":{"line":3527,"column":275,"offset":113380},"end":{"line":3527,"column":280,"offset":113385}}},{"type":"text","value":" degrees.","position":{"start":{"line":3527,"column":280,"offset":113385},"end":{"line":3527,"column":289,"offset":113394}}}],"position":{"start":{"line":3527,"column":1,"offset":113106},"end":{"line":3527,"column":289,"offset":113394}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> angle1 <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> angle2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> angle3 <span class=\"token operator\">=</span> <span class=\"token number\">60</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>angle1 <span class=\"token operator\">+</span> angle2 <span class=\"token operator\">+</span> angle3 <span class=\"token operator\">==</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Valid Triangle\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> angle2 <span class=\"token operator\">=</span> <span class=\"token number\">90</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>angle1 <span class=\"token operator\">+</span> angle2 <span class=\"token operator\">+</span> angle3 <span class=\"token operator\">==</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>      <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Valid Triangle\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    Valid Triangle</code></pre></div>","position":{"start":{"line":3529,"column":1,"offset":113398},"end":{"line":3541,"column":4,"offset":113702}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The last exercise is to check if a number is even or not.","position":{"start":{"line":3543,"column":1,"offset":113706},"end":{"line":3543,"column":58,"offset":113763}}}],"position":{"start":{"line":3543,"column":1,"offset":113706},"end":{"line":3543,"column":58,"offset":113763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hint L you need to use one of the operators we talked about earlier. That's right, use the modulo operator ","position":{"start":{"line":3545,"column":1,"offset":113767},"end":{"line":3545,"column":108,"offset":113874}}},{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":3545,"column":108,"offset":113874},"end":{"line":3545,"column":111,"offset":113877}}},{"type":"text","value":".","position":{"start":{"line":3545,"column":111,"offset":113877},"end":{"line":3545,"column":112,"offset":113878}}}],"position":{"start":{"line":3545,"column":1,"offset":113767},"end":{"line":3545,"column":112,"offset":113878}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is even\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    i <span class=\"token keyword\">is</span> even\n\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is even\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":3547,"column":1,"offset":113882},"end":{"line":3558,"column":4,"offset":114063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3560,"column":3,"offset":114069},"end":{"line":3560,"column":10,"offset":114076}}}],"position":{"start":{"line":3560,"column":1,"offset":114067},"end":{"line":3560,"column":12,"offset":114078}}}],"position":{"start":{"line":3560,"column":1,"offset":114067},"end":{"line":3560,"column":12,"offset":114078}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3562,"column":1,"offset":114082},"end":{"line":3562,"column":18,"offset":114099}}}],"position":{"start":{"line":3562,"column":1,"offset":114082},"end":{"line":3562,"column":18,"offset":114099}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at a few exercises related to the if statement, for writing and testing conditions.","position":{"start":{"line":3564,"column":5,"offset":114107},"end":{"line":3564,"column":95,"offset":114197}}}],"position":{"start":{"line":3564,"column":1,"offset":114103},"end":{"line":3564,"column":95,"offset":114197}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3564,"column":1,"offset":114103},"end":{"line":3564,"column":95,"offset":114197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 07 - Logical Operators - and or not","position":{"start":{"line":3566,"column":3,"offset":114203},"end":{"line":3566,"column":43,"offset":114243}}}],"position":{"start":{"line":3566,"column":1,"offset":114201},"end":{"line":3566,"column":45,"offset":114245}}}],"position":{"start":{"line":3566,"column":1,"offset":114201},"end":{"line":3566,"column":45,"offset":114245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at the different operators that can be used on ","position":{"start":{"line":3568,"column":1,"offset":114249},"end":{"line":3568,"column":73,"offset":114321}}},{"type":"raw","value":"<code class=\"language-text\">bool</code>","position":{"start":{"line":3568,"column":73,"offset":114321},"end":{"line":3568,"column":79,"offset":114327}}},{"type":"text","value":" values. These operators are called logical operators - ","position":{"start":{"line":3568,"column":79,"offset":114327},"end":{"line":3568,"column":135,"offset":114383}}},{"type":"raw","value":"<code class=\"language-text\">and</code>","position":{"start":{"line":3568,"column":135,"offset":114383},"end":{"line":3568,"column":140,"offset":114388}}},{"type":"text","value":", ","position":{"start":{"line":3568,"column":140,"offset":114388},"end":{"line":3568,"column":142,"offset":114390}}},{"type":"raw","value":"<code class=\"language-text\">or</code>","position":{"start":{"line":3568,"column":142,"offset":114390},"end":{"line":3568,"column":146,"offset":114394}}},{"type":"text","value":" , ","position":{"start":{"line":3568,"column":146,"offset":114394},"end":{"line":3568,"column":149,"offset":114397}}},{"type":"raw","value":"<code class=\"language-text\">not</code>","position":{"start":{"line":3568,"column":149,"offset":114397},"end":{"line":3568,"column":154,"offset":114402}}},{"type":"text","value":" and ","position":{"start":{"line":3568,"column":154,"offset":114402},"end":{"line":3568,"column":159,"offset":114407}}},{"type":"raw","value":"<code class=\"language-text\">^</code>","position":{"start":{"line":3568,"column":159,"offset":114407},"end":{"line":3568,"column":162,"offset":114410}}},{"type":"text","value":" ","position":{"start":{"line":3568,"column":162,"offset":114410},"end":{"line":3568,"column":163,"offset":114411}}},{"type":"text","value":"(","position":{"start":{"line":3568,"column":163,"offset":114411},"end":{"line":3568,"column":165,"offset":114413}}},{"type":"text","value":"xor","position":{"start":{"line":3568,"column":165,"offset":114413},"end":{"line":3568,"column":168,"offset":114416}}},{"type":"text","value":")","position":{"start":{"line":3568,"column":168,"offset":114416},"end":{"line":3568,"column":170,"offset":114418}}},{"type":"text","value":".","position":{"start":{"line":3568,"column":170,"offset":114418},"end":{"line":3568,"column":171,"offset":114419}}}],"position":{"start":{"line":3568,"column":1,"offset":114249},"end":{"line":3568,"column":171,"offset":114419}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we have a value ","position":{"start":{"line":3570,"column":1,"offset":114423},"end":{"line":3570,"column":27,"offset":114449}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3570,"column":27,"offset":114449},"end":{"line":3570,"column":33,"offset":114455}}},{"type":"text","value":", and the other ","position":{"start":{"line":3570,"column":33,"offset":114455},"end":{"line":3570,"column":49,"offset":114471}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3570,"column":49,"offset":114471},"end":{"line":3570,"column":56,"offset":114478}}},{"type":"text","value":", and we want to play around with them.","position":{"start":{"line":3570,"column":56,"offset":114478},"end":{"line":3570,"column":95,"offset":114517}}}],"position":{"start":{"line":3570,"column":1,"offset":114423},"end":{"line":3570,"column":95,"offset":114517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Logical operator ","position":{"start":{"line":3572,"column":1,"offset":114521},"end":{"line":3572,"column":18,"offset":114538}}},{"type":"raw","value":"<code class=\"language-text\">and</code>","position":{"start":{"line":3572,"column":18,"offset":114538},"end":{"line":3572,"column":23,"offset":114543}}},{"type":"text","value":" returns true only when both operands are ","position":{"start":{"line":3572,"column":23,"offset":114543},"end":{"line":3572,"column":65,"offset":114585}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3572,"column":65,"offset":114585},"end":{"line":3572,"column":71,"offset":114591}}},{"type":"text","value":".","position":{"start":{"line":3572,"column":71,"offset":114591},"end":{"line":3572,"column":72,"offset":114592}}}],"position":{"start":{"line":3572,"column":1,"offset":114521},"end":{"line":3572,"column":72,"offset":114592}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">False</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">True</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">False</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">False</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">True</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">False</span> <span class=\"token keyword\">and</span> <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":3574,"column":1,"offset":114596},"end":{"line":3584,"column":4,"offset":114773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Logical operator ","position":{"start":{"line":3586,"column":1,"offset":114777},"end":{"line":3586,"column":18,"offset":114794}}},{"type":"raw","value":"<code class=\"language-text\">or</code>","position":{"start":{"line":3586,"column":18,"offset":114794},"end":{"line":3586,"column":22,"offset":114798}}},{"type":"text","value":" returns true when atleast one of the operands is ","position":{"start":{"line":3586,"column":22,"offset":114798},"end":{"line":3586,"column":72,"offset":114848}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3586,"column":72,"offset":114848},"end":{"line":3586,"column":78,"offset":114854}}},{"type":"text","value":".","position":{"start":{"line":3586,"column":78,"offset":114854},"end":{"line":3586,"column":79,"offset":114855}}}],"position":{"start":{"line":3586,"column":1,"offset":114777},"end":{"line":3586,"column":79,"offset":114855}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">False</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">False</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">True</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">True</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">False</span> <span class=\"token keyword\">or</span> <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":3588,"column":1,"offset":114859},"end":{"line":3597,"column":4,"offset":115006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Logical operator ","position":{"start":{"line":3599,"column":1,"offset":115010},"end":{"line":3599,"column":18,"offset":115027}}},{"type":"raw","value":"<code class=\"language-text\">not</code>","position":{"start":{"line":3599,"column":18,"offset":115027},"end":{"line":3599,"column":23,"offset":115032}}},{"type":"text","value":" returns negation.","position":{"start":{"line":3599,"column":23,"offset":115032},"end":{"line":3599,"column":41,"offset":115050}}}],"position":{"start":{"line":3599,"column":1,"offset":115010},"end":{"line":3599,"column":41,"offset":115050}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">True</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">not</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">False</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">not</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":3601,"column":1,"offset":115054},"end":{"line":3611,"column":4,"offset":115197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The XOR operation, denoted by the ","position":{"start":{"line":3613,"column":1,"offset":115201},"end":{"line":3613,"column":35,"offset":115235}}},{"type":"raw","value":"<code class=\"language-text\">^</code>","position":{"start":{"line":3613,"column":35,"offset":115235},"end":{"line":3613,"column":38,"offset":115238}}},{"type":"text","value":" operator, is ","position":{"start":{"line":3613,"column":38,"offset":115238},"end":{"line":3613,"column":52,"offset":115252}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3613,"column":52,"offset":115252},"end":{"line":3613,"column":58,"offset":115258}}},{"type":"text","value":" when operands have different boolean values.","position":{"start":{"line":3613,"column":58,"offset":115258},"end":{"line":3613,"column":103,"offset":115303}}}],"position":{"start":{"line":3613,"column":1,"offset":115201},"end":{"line":3613,"column":103,"offset":115303}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token operator\">^</span> <span class=\"token boolean\">True</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">True</span> <span class=\"token operator\">^</span> <span class=\"token boolean\">False</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">False</span> <span class=\"token operator\">^</span> <span class=\"token boolean\">True</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token boolean\">False</span> <span class=\"token operator\">^</span> <span class=\"token boolean\">False</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":3615,"column":1,"offset":115307},"end":{"line":3624,"column":4,"offset":115451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3626,"column":3,"offset":115457},"end":{"line":3626,"column":10,"offset":115464}}}],"position":{"start":{"line":3626,"column":1,"offset":115455},"end":{"line":3626,"column":12,"offset":115466}}}],"position":{"start":{"line":3626,"column":1,"offset":115455},"end":{"line":3626,"column":12,"offset":115466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3628,"column":1,"offset":115470},"end":{"line":3628,"column":18,"offset":115487}}}],"position":{"start":{"line":3628,"column":1,"offset":115470},"end":{"line":3628,"column":18,"offset":115487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at the logical operators that act on boolean values, such as ","position":{"start":{"line":3630,"column":5,"offset":115495},"end":{"line":3630,"column":73,"offset":115563}}},{"type":"raw","value":"<code class=\"language-text\">and</code>","position":{"start":{"line":3630,"column":73,"offset":115563},"end":{"line":3630,"column":78,"offset":115568}}},{"type":"text","value":", ","position":{"start":{"line":3630,"column":78,"offset":115568},"end":{"line":3630,"column":80,"offset":115570}}},{"type":"raw","value":"<code class=\"language-text\">or</code>","position":{"start":{"line":3630,"column":80,"offset":115570},"end":{"line":3630,"column":84,"offset":115574}}},{"type":"text","value":", ","position":{"start":{"line":3630,"column":84,"offset":115574},"end":{"line":3630,"column":86,"offset":115576}}},{"type":"raw","value":"<code class=\"language-text\">not</code>","position":{"start":{"line":3630,"column":86,"offset":115576},"end":{"line":3630,"column":91,"offset":115581}}},{"type":"text","value":" and ","position":{"start":{"line":3630,"column":91,"offset":115581},"end":{"line":3630,"column":96,"offset":115586}}},{"type":"raw","value":"<code class=\"language-text\">^</code>","position":{"start":{"line":3630,"column":96,"offset":115586},"end":{"line":3630,"column":99,"offset":115589}}}],"position":{"start":{"line":3630,"column":1,"offset":115491},"end":{"line":3630,"column":99,"offset":115589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Explored each of these operators, finding out when they return ","position":{"start":{"line":3631,"column":5,"offset":115595},"end":{"line":3631,"column":68,"offset":115658}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3631,"column":68,"offset":115658},"end":{"line":3631,"column":74,"offset":115664}}},{"type":"text","value":", and when ","position":{"start":{"line":3631,"column":74,"offset":115664},"end":{"line":3631,"column":85,"offset":115675}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3631,"column":85,"offset":115675},"end":{"line":3631,"column":92,"offset":115682}}},{"type":"text","value":".","position":{"start":{"line":3631,"column":92,"offset":115682},"end":{"line":3631,"column":93,"offset":115683}}}],"position":{"start":{"line":3631,"column":1,"offset":115591},"end":{"line":3631,"column":93,"offset":115683}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3630,"column":1,"offset":115491},"end":{"line":3631,"column":93,"offset":115683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 08: Puzzles On Logical Operators","position":{"start":{"line":3633,"column":3,"offset":115689},"end":{"line":3633,"column":40,"offset":115726}}}],"position":{"start":{"line":3633,"column":1,"offset":115687},"end":{"line":3633,"column":42,"offset":115728}}}],"position":{"start":{"line":3633,"column":1,"offset":115687},"end":{"line":3633,"column":42,"offset":115728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, Let's look at a few simple puzzles to look at the logical operators.","position":{"start":{"line":3635,"column":1,"offset":115732},"end":{"line":3635,"column":83,"offset":115814}}}],"position":{"start":{"line":3635,"column":1,"offset":115732},"end":{"line":3635,"column":83,"offset":115814}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":3637,"column":3,"offset":115820},"end":{"line":3637,"column":14,"offset":115831}}}],"position":{"start":{"line":3637,"column":1,"offset":115818},"end":{"line":3637,"column":16,"offset":115833}}}],"position":{"start":{"line":3637,"column":1,"offset":115818},"end":{"line":3637,"column":16,"offset":115833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say ","position":{"start":{"line":3639,"column":1,"offset":115837},"end":{"line":3639,"column":11,"offset":115847}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3639,"column":11,"offset":115847},"end":{"line":3639,"column":14,"offset":115850}}},{"type":"text","value":" has a value of ","position":{"start":{"line":3639,"column":14,"offset":115850},"end":{"line":3639,"column":30,"offset":115866}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":3639,"column":30,"offset":115866},"end":{"line":3639,"column":34,"offset":115870}}},{"type":"text","value":", and ","position":{"start":{"line":3639,"column":34,"offset":115870},"end":{"line":3639,"column":40,"offset":115876}}},{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":3639,"column":40,"offset":115876},"end":{"line":3639,"column":43,"offset":115879}}},{"type":"text","value":" has a value of ","position":{"start":{"line":3639,"column":43,"offset":115879},"end":{"line":3639,"column":59,"offset":115895}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":3639,"column":59,"offset":115895},"end":{"line":3639,"column":63,"offset":115899}}},{"type":"text","value":". You want to find out if both ","position":{"start":{"line":3639,"column":63,"offset":115899},"end":{"line":3639,"column":94,"offset":115930}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3639,"column":94,"offset":115930},"end":{"line":3639,"column":97,"offset":115933}}},{"type":"text","value":" and ","position":{"start":{"line":3639,"column":97,"offset":115933},"end":{"line":3639,"column":102,"offset":115938}}},{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":3639,"column":102,"offset":115938},"end":{"line":3639,"column":105,"offset":115941}}},{"type":"text","value":" are even. How do you do that?","position":{"start":{"line":3639,"column":105,"offset":115941},"end":{"line":3639,"column":135,"offset":115971}}}],"position":{"start":{"line":3639,"column":1,"offset":115837},"end":{"line":3639,"column":135,"offset":115971}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> j <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> j<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i and j are even\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> j <span class=\"token operator\">=</span> <span class=\"token number\">14</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> j<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i and j are even\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    i <span class=\"token keyword\">and</span> j are even\n\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">or</span> j<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">2</span>\n        <span class=\"token operator\">^</span>\n    IndentationError<span class=\"token punctuation\">:</span> expected an indented block\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">or</span> j<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"atleast one of i and j are even\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    atleast one of i <span class=\"token keyword\">and</span> j are even</code></pre></div>","position":{"start":{"line":3641,"column":1,"offset":115975},"end":{"line":3662,"column":4,"offset":116473}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we want to find out if at least one of ","position":{"start":{"line":3664,"column":1,"offset":116477},"end":{"line":3664,"column":43,"offset":116519}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3664,"column":43,"offset":116519},"end":{"line":3664,"column":46,"offset":116522}}},{"type":"text","value":" and ","position":{"start":{"line":3664,"column":46,"offset":116522},"end":{"line":3664,"column":51,"offset":116527}}},{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":3664,"column":51,"offset":116527},"end":{"line":3664,"column":54,"offset":116530}}},{"type":"text","value":" is even, we can use the ","position":{"start":{"line":3664,"column":54,"offset":116530},"end":{"line":3664,"column":79,"offset":116555}}},{"type":"raw","value":"<code class=\"language-text\">or</code>","position":{"start":{"line":3664,"column":79,"offset":116555},"end":{"line":3664,"column":83,"offset":116559}}},{"type":"text","value":" operator.","position":{"start":{"line":3664,"column":83,"offset":116559},"end":{"line":3664,"column":93,"offset":116569}}}],"position":{"start":{"line":3664,"column":1,"offset":116477},"end":{"line":3664,"column":93,"offset":116569}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> j\n    <span class=\"token number\">14</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">or</span> j<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"atleast one of i and j are even\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    atleast one of i <span class=\"token keyword\">and</span> j are even\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> j <span class=\"token operator\">=</span> <span class=\"token number\">23</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">or</span> j<span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"atleast one of i and j are even\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i\n    <span class=\"token number\">15</span></code></pre></div>","position":{"start":{"line":3666,"column":1,"offset":116573},"end":{"line":3680,"column":4,"offset":116876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now try and guess the value of this. ","position":{"start":{"line":3682,"column":1,"offset":116880},"end":{"line":3682,"column":38,"offset":116917}}},{"type":"raw","value":"<code class=\"language-text\">if(True ^ False): print(\"Message\")</code>","position":{"start":{"line":3682,"column":38,"offset":116917},"end":{"line":3682,"column":74,"offset":116953}}}],"position":{"start":{"line":3682,"column":1,"offset":116880},"end":{"line":3682,"column":74,"offset":116953}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span> <span class=\"token operator\">^</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This will Print\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    This will Print\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span> <span class=\"token operator\">^</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This will Print\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    This will Print\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span> <span class=\"token operator\">^</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>     <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This will Print\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":3684,"column":1,"offset":116957},"end":{"line":3696,"column":4,"offset":117234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Xor operation using ","position":{"start":{"line":3698,"column":1,"offset":117238},"end":{"line":3698,"column":21,"offset":117258}}},{"type":"raw","value":"<code class=\"language-text\">^</code>","position":{"start":{"line":3698,"column":21,"offset":117258},"end":{"line":3698,"column":24,"offset":117261}}},{"type":"text","value":" - message will get printed if the operands are different.","position":{"start":{"line":3698,"column":24,"offset":117261},"end":{"line":3698,"column":82,"offset":117319}}}],"position":{"start":{"line":3698,"column":1,"offset":117238},"end":{"line":3698,"column":82,"offset":117319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What would happen if both of them are ","position":{"start":{"line":3700,"column":1,"offset":117323},"end":{"line":3700,"column":39,"offset":117361}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3700,"column":39,"offset":117361},"end":{"line":3700,"column":45,"offset":117367}}},{"type":"text","value":"? No message is printed.","position":{"start":{"line":3700,"column":45,"offset":117367},"end":{"line":3700,"column":69,"offset":117391}}}],"position":{"start":{"line":3700,"column":1,"offset":117323},"end":{"line":3700,"column":69,"offset":117391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So you would use ","position":{"start":{"line":3702,"column":1,"offset":117395},"end":{"line":3702,"column":18,"offset":117412}}},{"type":"raw","value":"<code class=\"language-text\">^</code>","position":{"start":{"line":3702,"column":18,"offset":117412},"end":{"line":3702,"column":21,"offset":117415}}},{"type":"text","value":" in situations, where you'd want one of the operands to be ","position":{"start":{"line":3702,"column":21,"offset":117415},"end":{"line":3702,"column":80,"offset":117474}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3702,"column":80,"offset":117474},"end":{"line":3702,"column":86,"offset":117480}}},{"type":"text","value":", and the other to be ","position":{"start":{"line":3702,"column":86,"offset":117480},"end":{"line":3702,"column":108,"offset":117502}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3702,"column":108,"offset":117502},"end":{"line":3702,"column":115,"offset":117509}}},{"type":"text","value":".","position":{"start":{"line":3702,"column":115,"offset":117509},"end":{"line":3702,"column":116,"offset":117510}}}],"position":{"start":{"line":3702,"column":1,"offset":117395},"end":{"line":3702,"column":116,"offset":117510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say, ","position":{"start":{"line":3704,"column":1,"offset":117514},"end":{"line":3704,"column":12,"offset":117525}}},{"type":"raw","value":"<code class=\"language-text\">x = 5</code>","position":{"start":{"line":3704,"column":12,"offset":117525},"end":{"line":3704,"column":19,"offset":117532}}},{"type":"text","value":", and you want to check ","position":{"start":{"line":3704,"column":19,"offset":117532},"end":{"line":3704,"column":43,"offset":117556}}},{"type":"raw","value":"<code class=\"language-text\">if not x == 6: print(\"This\")</code>","position":{"start":{"line":3704,"column":43,"offset":117556},"end":{"line":3704,"column":73,"offset":117586}}},{"type":"text","value":". What will be the result of running this code?","position":{"start":{"line":3704,"column":73,"offset":117586},"end":{"line":3704,"column":120,"offset":117633}}}],"position":{"start":{"line":3704,"column":1,"offset":117514},"end":{"line":3704,"column":120,"offset":117633}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> x <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    This\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> x <span class=\"token operator\">=</span> <span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> x <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>","position":{"start":{"line":3706,"column":1,"offset":117637},"end":{"line":3716,"column":4,"offset":117807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Actually, there is a shortcut for such a condition: ","position":{"start":{"line":3718,"column":1,"offset":117811},"end":{"line":3718,"column":53,"offset":117863}}},{"type":"raw","value":"<code class=\"language-text\">if x != 6 : print(\"This\")</code>","position":{"start":{"line":3718,"column":53,"offset":117863},"end":{"line":3718,"column":80,"offset":117890}}},{"type":"text","value":".","position":{"start":{"line":3718,"column":80,"offset":117890},"end":{"line":3718,"column":81,"offset":117891}}}],"position":{"start":{"line":3718,"column":1,"offset":117811},"end":{"line":3718,"column":81,"offset":117891}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> x<span class=\"token operator\">!=</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> x<span class=\"token operator\">=</span><span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> x<span class=\"token operator\">!=</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"This\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    This</code></pre></div>","position":{"start":{"line":3720,"column":1,"offset":117895},"end":{"line":3729,"column":4,"offset":118036}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">int()</code>","position":{"start":{"line":3731,"column":1,"offset":118040},"end":{"line":3731,"column":8,"offset":118047}}},{"type":"text","value":" is a conversion function, which when given say a ","position":{"start":{"line":3731,"column":8,"offset":118047},"end":{"line":3731,"column":58,"offset":118097}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":3731,"column":58,"offset":118097},"end":{"line":3731,"column":65,"offset":118104}}},{"type":"text","value":" value, returns an ","position":{"start":{"line":3731,"column":65,"offset":118104},"end":{"line":3731,"column":84,"offset":118123}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3731,"column":84,"offset":118123},"end":{"line":3731,"column":89,"offset":118128}}},{"type":"text","value":" value. Consider ","position":{"start":{"line":3731,"column":89,"offset":118128},"end":{"line":3731,"column":106,"offset":118145}}},{"type":"raw","value":"<code class=\"language-text\">int(True)</code>","position":{"start":{"line":3731,"column":106,"offset":118145},"end":{"line":3731,"column":117,"offset":118156}}},{"type":"text","value":", what would happen?","position":{"start":{"line":3731,"column":117,"offset":118156},"end":{"line":3731,"column":137,"offset":118176}}}],"position":{"start":{"line":3731,"column":1,"offset":118040},"end":{"line":3731,"column":137,"offset":118176}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">0</span></code></pre></div>","position":{"start":{"line":3733,"column":1,"offset":118180},"end":{"line":3738,"column":4,"offset":118247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">int(True)</code>","position":{"start":{"line":3740,"column":1,"offset":118251},"end":{"line":3740,"column":12,"offset":118262}}},{"type":"text","value":" returns 1. ","position":{"start":{"line":3740,"column":12,"offset":118262},"end":{"line":3740,"column":24,"offset":118274}}},{"type":"raw","value":"<code class=\"language-text\">int(False)</code>","position":{"start":{"line":3740,"column":24,"offset":118274},"end":{"line":3740,"column":36,"offset":118286}}},{"type":"text","value":" returns 0.","position":{"start":{"line":3740,"column":36,"offset":118286},"end":{"line":3740,"column":47,"offset":118297}}}],"position":{"start":{"line":3740,"column":1,"offset":118251},"end":{"line":3740,"column":47,"offset":118297}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">6</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> x<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"something\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    something</code></pre></div>","position":{"start":{"line":3742,"column":1,"offset":118301},"end":{"line":3748,"column":4,"offset":118400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the most interesting facts about boolean stuff, is anything which is non-zero, is considered to be ","position":{"start":{"line":3750,"column":1,"offset":118404},"end":{"line":3750,"column":107,"offset":118510}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3750,"column":107,"offset":118510},"end":{"line":3750,"column":113,"offset":118516}}},{"type":"text","value":".","position":{"start":{"line":3750,"column":113,"offset":118516},"end":{"line":3750,"column":114,"offset":118517}}}],"position":{"start":{"line":3750,"column":1,"offset":118404},"end":{"line":3750,"column":114,"offset":118517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":3752,"column":1,"offset":118521},"end":{"line":3752,"column":4,"offset":118524}}},{"type":"text","value":" is the only integer value which is considered to be ","position":{"start":{"line":3752,"column":4,"offset":118524},"end":{"line":3752,"column":57,"offset":118577}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3752,"column":57,"offset":118577},"end":{"line":3752,"column":64,"offset":118584}}},{"type":"text","value":".","position":{"start":{"line":3752,"column":64,"offset":118584},"end":{"line":3752,"column":65,"offset":118585}}}],"position":{"start":{"line":3752,"column":1,"offset":118521},"end":{"line":3752,"column":65,"offset":118585}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":3754,"column":1,"offset":118589},"end":{"line":3762,"column":4,"offset":118695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So, if I have a value of ","position":{"start":{"line":3764,"column":1,"offset":118699},"end":{"line":3764,"column":26,"offset":118724}}},{"type":"raw","value":"<code class=\"language-text\">x = -6</code>","position":{"start":{"line":3764,"column":26,"offset":118724},"end":{"line":3764,"column":34,"offset":118732}}},{"type":"text","value":", and execute ","position":{"start":{"line":3764,"column":34,"offset":118732},"end":{"line":3764,"column":48,"offset":118746}}},{"type":"raw","value":"<code class=\"language-text\">if x: print(\"something\")</code>","position":{"start":{"line":3764,"column":48,"offset":118746},"end":{"line":3764,"column":74,"offset":118772}}},{"type":"text","value":" what do you think will happen?","position":{"start":{"line":3764,"column":74,"offset":118772},"end":{"line":3764,"column":105,"offset":118803}}}],"position":{"start":{"line":3764,"column":1,"offset":118699},"end":{"line":3764,"column":105,"offset":118803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">\"something\"</code>","position":{"start":{"line":3766,"column":1,"offset":118807},"end":{"line":3766,"column":14,"offset":118820}}},{"type":"text","value":" will be printed.","position":{"start":{"line":3766,"column":14,"offset":118820},"end":{"line":3766,"column":31,"offset":118837}}}],"position":{"start":{"line":3766,"column":1,"offset":118807},"end":{"line":3766,"column":31,"offset":118837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can use the function ","position":{"start":{"line":3768,"column":1,"offset":118841},"end":{"line":3768,"column":26,"offset":118866}}},{"type":"raw","value":"<code class=\"language-text\">bool()</code>","position":{"start":{"line":3768,"column":26,"offset":118866},"end":{"line":3768,"column":34,"offset":118874}}},{"type":"text","value":", to convert ","position":{"start":{"line":3768,"column":34,"offset":118874},"end":{"line":3768,"column":47,"offset":118887}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3768,"column":47,"offset":118887},"end":{"line":3768,"column":52,"offset":118892}}},{"type":"text","value":" to a ","position":{"start":{"line":3768,"column":52,"offset":118892},"end":{"line":3768,"column":58,"offset":118898}}},{"type":"raw","value":"<code class=\"language-text\">bool</code>","position":{"start":{"line":3768,"column":58,"offset":118898},"end":{"line":3768,"column":64,"offset":118904}}},{"type":"text","value":" value.","position":{"start":{"line":3768,"column":64,"offset":118904},"end":{"line":3768,"column":71,"offset":118911}}}],"position":{"start":{"line":3768,"column":1,"offset":118841},"end":{"line":3768,"column":71,"offset":118911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">bool(6)</code>","position":{"start":{"line":3770,"column":5,"offset":118919},"end":{"line":3770,"column":14,"offset":118928}}},{"type":"text","value":" returns ","position":{"start":{"line":3770,"column":14,"offset":118928},"end":{"line":3770,"column":23,"offset":118937}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3770,"column":23,"offset":118937},"end":{"line":3770,"column":29,"offset":118943}}}],"position":{"start":{"line":3770,"column":1,"offset":118915},"end":{"line":3770,"column":29,"offset":118943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">bool(-6)</code>","position":{"start":{"line":3771,"column":5,"offset":118949},"end":{"line":3771,"column":15,"offset":118959}}},{"type":"text","value":" returns ","position":{"start":{"line":3771,"column":15,"offset":118959},"end":{"line":3771,"column":24,"offset":118968}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3771,"column":24,"offset":118968},"end":{"line":3771,"column":30,"offset":118974}}}],"position":{"start":{"line":3771,"column":1,"offset":118945},"end":{"line":3771,"column":30,"offset":118974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">bool(0)</code>","position":{"start":{"line":3772,"column":5,"offset":118980},"end":{"line":3772,"column":14,"offset":118989}}},{"type":"text","value":" returns ","position":{"start":{"line":3772,"column":14,"offset":118989},"end":{"line":3772,"column":23,"offset":118998}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3772,"column":23,"offset":118998},"end":{"line":3772,"column":30,"offset":119005}}},{"type":"text","value":".","position":{"start":{"line":3772,"column":30,"offset":119005},"end":{"line":3772,"column":31,"offset":119006}}}],"position":{"start":{"line":3772,"column":1,"offset":118976},"end":{"line":3772,"column":31,"offset":119006}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3770,"column":1,"offset":118915},"end":{"line":3772,"column":31,"offset":119006}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Except for ","position":{"start":{"line":3774,"column":1,"offset":119010},"end":{"line":3774,"column":12,"offset":119021}}},{"type":"raw","value":"<code class=\"language-text\">bool(0)</code>","position":{"start":{"line":3774,"column":12,"offset":119021},"end":{"line":3774,"column":21,"offset":119030}}},{"type":"text","value":", all the other results would be ","position":{"start":{"line":3774,"column":21,"offset":119030},"end":{"line":3774,"column":54,"offset":119063}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3774,"column":54,"offset":119063},"end":{"line":3774,"column":60,"offset":119069}}},{"type":"text","value":".","position":{"start":{"line":3774,"column":60,"offset":119069},"end":{"line":3774,"column":61,"offset":119070}}}],"position":{"start":{"line":3774,"column":1,"offset":119010},"end":{"line":3774,"column":61,"offset":119070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3776,"column":3,"offset":119076},"end":{"line":3776,"column":10,"offset":119083}}}],"position":{"start":{"line":3776,"column":1,"offset":119074},"end":{"line":3776,"column":12,"offset":119085}}}],"position":{"start":{"line":3776,"column":1,"offset":119074},"end":{"line":3776,"column":12,"offset":119085}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3778,"column":1,"offset":119089},"end":{"line":3778,"column":18,"offset":119106}}}],"position":{"start":{"line":3778,"column":1,"offset":119089},"end":{"line":3778,"column":18,"offset":119106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at a few puzzles related to the logical operators","position":{"start":{"line":3780,"column":5,"offset":119114},"end":{"line":3780,"column":61,"offset":119170}}}],"position":{"start":{"line":3780,"column":1,"offset":119110},"end":{"line":3780,"column":61,"offset":119170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at conversion functions such as ","position":{"start":{"line":3781,"column":5,"offset":119176},"end":{"line":3781,"column":44,"offset":119215}}},{"type":"raw","value":"<code class=\"language-text\">bool()</code>","position":{"start":{"line":3781,"column":44,"offset":119215},"end":{"line":3781,"column":52,"offset":119223}}},{"type":"text","value":" and ","position":{"start":{"line":3781,"column":52,"offset":119223},"end":{"line":3781,"column":57,"offset":119228}}},{"type":"raw","value":"<code class=\"language-text\">int()</code>","position":{"start":{"line":3781,"column":57,"offset":119228},"end":{"line":3781,"column":64,"offset":119235}}},{"type":"text","value":" to convert between boolean and integer data","position":{"start":{"line":3781,"column":64,"offset":119235},"end":{"line":3781,"column":108,"offset":119279}}}],"position":{"start":{"line":3781,"column":1,"offset":119172},"end":{"line":3781,"column":108,"offset":119279}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3780,"column":1,"offset":119110},"end":{"line":3781,"column":108,"offset":119279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 09:","position":{"start":{"line":3783,"column":3,"offset":119285},"end":{"line":3783,"column":11,"offset":119293}}}],"position":{"start":{"line":3783,"column":1,"offset":119283},"end":{"line":3783,"column":13,"offset":119295}}}],"position":{"start":{"line":3783,"column":1,"offset":119283},"end":{"line":3783,"column":13,"offset":119295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at two other important components of an ","position":{"start":{"line":3785,"column":1,"offset":119299},"end":{"line":3785,"column":66,"offset":119364}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3785,"column":66,"offset":119364},"end":{"line":3785,"column":70,"offset":119368}}},{"type":"text","value":" statement: ","position":{"start":{"line":3785,"column":70,"offset":119368},"end":{"line":3785,"column":82,"offset":119380}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":3785,"column":82,"offset":119380},"end":{"line":3785,"column":88,"offset":119386}}},{"type":"text","value":" and ","position":{"start":{"line":3785,"column":88,"offset":119386},"end":{"line":3785,"column":93,"offset":119391}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3785,"column":93,"offset":119391},"end":{"line":3785,"column":99,"offset":119397}}},{"type":"text","value":". Let's start with ","position":{"start":{"line":3785,"column":99,"offset":119397},"end":{"line":3785,"column":118,"offset":119416}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":3785,"column":118,"offset":119416},"end":{"line":3785,"column":124,"offset":119422}}},{"type":"text","value":".","position":{"start":{"line":3785,"column":124,"offset":119422},"end":{"line":3785,"column":125,"offset":119423}}}],"position":{"start":{"line":3785,"column":1,"offset":119299},"end":{"line":3785,"column":125,"offset":119423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":3787,"column":3,"offset":119429},"end":{"line":3787,"column":14,"offset":119440}}}],"position":{"start":{"line":3787,"column":1,"offset":119427},"end":{"line":3787,"column":16,"offset":119442}}}],"position":{"start":{"line":3787,"column":1,"offset":119427},"end":{"line":3787,"column":16,"offset":119442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider a scenario where ","position":{"start":{"line":3789,"column":1,"offset":119446},"end":{"line":3789,"column":27,"offset":119472}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3789,"column":27,"offset":119472},"end":{"line":3789,"column":30,"offset":119475}}},{"type":"text","value":" has a value of ","position":{"start":{"line":3789,"column":30,"offset":119475},"end":{"line":3789,"column":46,"offset":119491}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":3789,"column":46,"offset":119491},"end":{"line":3789,"column":49,"offset":119494}}},{"type":"text","value":". Let's try to print a message ","position":{"start":{"line":3789,"column":49,"offset":119494},"end":{"line":3789,"column":80,"offset":119525}}},{"type":"raw","value":"<code class=\"language-text\">\"i is even\"</code>","position":{"start":{"line":3789,"column":80,"offset":119525},"end":{"line":3789,"column":93,"offset":119538}}},{"type":"text","value":" if ","position":{"start":{"line":3789,"column":93,"offset":119538},"end":{"line":3789,"column":97,"offset":119542}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3789,"column":97,"offset":119542},"end":{"line":3789,"column":100,"offset":119545}}},{"type":"text","value":" is an even number. Otherwise, print ","position":{"start":{"line":3789,"column":100,"offset":119545},"end":{"line":3789,"column":137,"offset":119582}}},{"type":"raw","value":"<code class=\"language-text\">\"i is odd\"</code>","position":{"start":{"line":3789,"column":137,"offset":119582},"end":{"line":3789,"column":149,"offset":119594}}},{"type":"text","value":".","position":{"start":{"line":3789,"column":149,"offset":119594},"end":{"line":3789,"column":150,"offset":119595}}}],"position":{"start":{"line":3789,"column":1,"offset":119446},"end":{"line":3789,"column":150,"offset":119595}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Earlier we wrote code along these lines: ","position":{"start":{"line":3791,"column":1,"offset":119599},"end":{"line":3791,"column":42,"offset":119640}}},{"type":"raw","value":"<code class=\"language-text\">if i % 2 == 0 : print(\"i is even\")</code>","position":{"start":{"line":3791,"column":42,"offset":119640},"end":{"line":3791,"column":78,"offset":119676}}},{"type":"text","value":". However if this condition is not ","position":{"start":{"line":3791,"column":78,"offset":119676},"end":{"line":3791,"column":113,"offset":119711}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":3791,"column":113,"offset":119711},"end":{"line":3791,"column":119,"offset":119717}}},{"type":"text","value":", we would want to ","position":{"start":{"line":3791,"column":119,"offset":119717},"end":{"line":3791,"column":138,"offset":119736}}},{"type":"raw","value":"<code class=\"language-text\">print(\"i is odd\")</code>","position":{"start":{"line":3791,"column":138,"offset":119736},"end":{"line":3791,"column":157,"offset":119755}}},{"type":"text","value":". How do we accomplish that?","position":{"start":{"line":3791,"column":157,"offset":119755},"end":{"line":3791,"column":185,"offset":119783}}}],"position":{"start":{"line":3791,"column":1,"offset":119599},"end":{"line":3791,"column":185,"offset":119783}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is even\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is odd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    i <span class=\"token keyword\">is</span> even</code></pre></div>","position":{"start":{"line":3793,"column":1,"offset":119787},"end":{"line":3801,"column":4,"offset":119938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An ","position":{"start":{"line":3803,"column":1,"offset":119942},"end":{"line":3803,"column":4,"offset":119945}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":3803,"column":4,"offset":119945},"end":{"line":3803,"column":10,"offset":119951}}},{"type":"text","value":" clause provides an alternative code body to execute, if the ","position":{"start":{"line":3803,"column":10,"offset":119951},"end":{"line":3803,"column":71,"offset":120012}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3803,"column":71,"offset":120012},"end":{"line":3803,"column":75,"offset":120016}}},{"type":"text","value":" condition is ","position":{"start":{"line":3803,"column":75,"offset":120016},"end":{"line":3803,"column":89,"offset":120030}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":3803,"column":89,"offset":120030},"end":{"line":3803,"column":96,"offset":120037}}},{"type":"text","value":".","position":{"start":{"line":3803,"column":96,"offset":120037},"end":{"line":3803,"column":97,"offset":120038}}}],"position":{"start":{"line":3803,"column":1,"offset":119942},"end":{"line":3803,"column":97,"offset":120038}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is even\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is odd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    i <span class=\"token keyword\">is</span> odd</code></pre></div>","position":{"start":{"line":3805,"column":1,"offset":120042},"end":{"line":3813,"column":4,"offset":120192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at ","position":{"start":{"line":3815,"column":1,"offset":120196},"end":{"line":3815,"column":15,"offset":120210}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3815,"column":15,"offset":120210},"end":{"line":3815,"column":21,"offset":120216}}},{"type":"text","value":".","position":{"start":{"line":3815,"column":21,"offset":120216},"end":{"line":3815,"column":22,"offset":120217}}}],"position":{"start":{"line":3815,"column":1,"offset":120196},"end":{"line":3815,"column":22,"offset":120217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to do something if ","position":{"start":{"line":3817,"column":1,"offset":120221},"end":{"line":3817,"column":28,"offset":120248}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3817,"column":28,"offset":120248},"end":{"line":3817,"column":31,"offset":120251}}},{"type":"text","value":" has value of ","position":{"start":{"line":3817,"column":31,"offset":120251},"end":{"line":3817,"column":45,"offset":120265}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":3817,"column":45,"offset":120265},"end":{"line":3817,"column":48,"offset":120268}}},{"type":"text","value":", and something totally different if ","position":{"start":{"line":3817,"column":48,"offset":120268},"end":{"line":3817,"column":85,"offset":120305}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":3817,"column":85,"offset":120305},"end":{"line":3817,"column":88,"offset":120308}}},{"type":"text","value":" has a value of ","position":{"start":{"line":3817,"column":88,"offset":120308},"end":{"line":3817,"column":104,"offset":120324}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":3817,"column":104,"offset":120324},"end":{"line":3817,"column":107,"offset":120327}}},{"type":"text","value":".","position":{"start":{"line":3817,"column":107,"offset":120327},"end":{"line":3817,"column":108,"offset":120328}}}],"position":{"start":{"line":3817,"column":1,"offset":120221},"end":{"line":3817,"column":108,"offset":120328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In short, we want to specify 2 alternatives to the ","position":{"start":{"line":3819,"column":1,"offset":120332},"end":{"line":3819,"column":52,"offset":120383}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3819,"column":52,"offset":120383},"end":{"line":3819,"column":56,"offset":120387}}},{"type":"text","value":" condition. How can that be done?","position":{"start":{"line":3819,"column":56,"offset":120387},"end":{"line":3819,"column":89,"offset":120420}}}],"position":{"start":{"line":3819,"column":1,"offset":120332},"end":{"line":3819,"column":89,"offset":120420}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is 1\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">elif</span> i<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is 2\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is not 1 or 2\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    i <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> <span class=\"token number\">2</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":3821,"column":1,"offset":120424},"end":{"line":3831,"column":4,"offset":120620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That's where the ","position":{"start":{"line":3833,"column":1,"offset":120624},"end":{"line":3833,"column":18,"offset":120641}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3833,"column":20,"offset":120643},"end":{"line":3833,"column":26,"offset":120649}}}],"position":{"start":{"line":3833,"column":18,"offset":120641},"end":{"line":3833,"column":28,"offset":120651}}},{"type":"text","value":" clause comes into the picture. The code in ","position":{"start":{"line":3833,"column":28,"offset":120651},"end":{"line":3833,"column":72,"offset":120695}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3833,"column":72,"offset":120695},"end":{"line":3833,"column":78,"offset":120701}}},{"type":"text","value":" is executed if the previous conditions are false and the current ","position":{"start":{"line":3833,"column":78,"offset":120701},"end":{"line":3833,"column":144,"offset":120767}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3833,"column":144,"offset":120767},"end":{"line":3833,"column":150,"offset":120773}}},{"type":"text","value":" condition is true.","position":{"start":{"line":3833,"column":150,"offset":120773},"end":{"line":3833,"column":169,"offset":120792}}}],"position":{"start":{"line":3833,"column":1,"offset":120624},"end":{"line":3833,"column":169,"offset":120792}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3835,"column":3,"offset":120798},"end":{"line":3835,"column":10,"offset":120805}}}],"position":{"start":{"line":3835,"column":1,"offset":120796},"end":{"line":3835,"column":12,"offset":120807}}}],"position":{"start":{"line":3835,"column":1,"offset":120796},"end":{"line":3835,"column":12,"offset":120807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3837,"column":1,"offset":120811},"end":{"line":3837,"column":18,"offset":120828}}}],"position":{"start":{"line":3837,"column":1,"offset":120811},"end":{"line":3837,"column":18,"offset":120828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at two important components of the ","position":{"start":{"line":3839,"column":5,"offset":120836},"end":{"line":3839,"column":47,"offset":120878}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3839,"column":47,"offset":120878},"end":{"line":3839,"column":51,"offset":120882}}},{"type":"text","value":" statement: ","position":{"start":{"line":3839,"column":51,"offset":120882},"end":{"line":3839,"column":63,"offset":120894}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":3839,"column":63,"offset":120894},"end":{"line":3839,"column":69,"offset":120900}}},{"type":"text","value":" and ","position":{"start":{"line":3839,"column":69,"offset":120900},"end":{"line":3839,"column":74,"offset":120905}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3839,"column":74,"offset":120905},"end":{"line":3839,"column":80,"offset":120911}}},{"type":"text","value":".","position":{"start":{"line":3839,"column":80,"offset":120911},"end":{"line":3839,"column":81,"offset":120912}}}],"position":{"start":{"line":3839,"column":1,"offset":120832},"end":{"line":3839,"column":81,"offset":120912}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood that the ","position":{"start":{"line":3840,"column":5,"offset":120918},"end":{"line":3840,"column":25,"offset":120938}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3840,"column":25,"offset":120938},"end":{"line":3840,"column":31,"offset":120944}}},{"type":"text","value":" clauses and the final ","position":{"start":{"line":3840,"column":31,"offset":120944},"end":{"line":3840,"column":54,"offset":120967}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":3840,"column":54,"offset":120967},"end":{"line":3840,"column":60,"offset":120973}}},{"type":"text","value":" clause provide alternative conditions to check, when earlier if conditions are true.","position":{"start":{"line":3840,"column":60,"offset":120973},"end":{"line":3840,"column":145,"offset":121058}}}],"position":{"start":{"line":3840,"column":1,"offset":120914},"end":{"line":3840,"column":145,"offset":121058}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3839,"column":1,"offset":120832},"end":{"line":3840,"column":145,"offset":121058}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 10: Classroom Exercise CE-DT-02","position":{"start":{"line":3842,"column":3,"offset":121064},"end":{"line":3842,"column":39,"offset":121100}}}],"position":{"start":{"line":3842,"column":1,"offset":121062},"end":{"line":3842,"column":41,"offset":121102}}}],"position":{"start":{"line":3842,"column":1,"offset":121062},"end":{"line":3842,"column":41,"offset":121102}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's do a simple exercise with ","position":{"start":{"line":3844,"column":1,"offset":121106},"end":{"line":3844,"column":47,"offset":121152}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3844,"column":47,"offset":121152},"end":{"line":3844,"column":51,"offset":121156}}},{"type":"text","value":", ","position":{"start":{"line":3844,"column":51,"offset":121156},"end":{"line":3844,"column":53,"offset":121158}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":3844,"column":53,"offset":121158},"end":{"line":3844,"column":59,"offset":121164}}},{"type":"text","value":" and ","position":{"start":{"line":3844,"column":59,"offset":121164},"end":{"line":3844,"column":64,"offset":121169}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3844,"column":64,"offset":121169},"end":{"line":3844,"column":70,"offset":121175}}},{"type":"text","value":".","position":{"start":{"line":3844,"column":70,"offset":121175},"end":{"line":3844,"column":71,"offset":121176}}}],"position":{"start":{"line":3844,"column":1,"offset":121106},"end":{"line":3844,"column":71,"offset":121176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Before getting to the exercise, let's try and learn how to get console input from the user.","position":{"start":{"line":3846,"column":1,"offset":121180},"end":{"line":3846,"column":92,"offset":121271}}}],"position":{"start":{"line":3846,"column":1,"offset":121180},"end":{"line":3846,"column":92,"offset":121271}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Until now, we had been hard-coding all the data we were to use. Let's make that part more dynamic now.","position":{"start":{"line":3848,"column":1,"offset":121275},"end":{"line":3848,"column":103,"offset":121377}}}],"position":{"start":{"line":3848,"column":1,"offset":121275},"end":{"line":3848,"column":103,"offset":121377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":3850,"column":3,"offset":121383},"end":{"line":3850,"column":14,"offset":121394}}}],"position":{"start":{"line":3850,"column":1,"offset":121381},"end":{"line":3850,"column":16,"offset":121396}}}],"position":{"start":{"line":3850,"column":1,"offset":121381},"end":{"line":3850,"column":16,"offset":121396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How do we get input from the user? We want to get input from the console, and assign it to a variable. The way we can do that, is by statement ","position":{"start":{"line":3852,"column":1,"offset":121400},"end":{"line":3852,"column":144,"offset":121543}}},{"type":"raw","value":"<code class=\"language-text\">value = input()</code>","position":{"start":{"line":3852,"column":144,"offset":121543},"end":{"line":3852,"column":161,"offset":121560}}}],"position":{"start":{"line":3852,"column":1,"offset":121400},"end":{"line":3852,"column":161,"offset":121560}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    value <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter a Value: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"you entered \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3854,"column":1,"offset":121564},"end":{"line":3857,"column":4,"offset":121650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can call the ","position":{"start":{"line":3859,"column":1,"offset":121654},"end":{"line":3859,"column":17,"offset":121670}}},{"type":"raw","value":"<code class=\"language-text\">input()</code>","position":{"start":{"line":3859,"column":17,"offset":121670},"end":{"line":3859,"column":26,"offset":121679}}},{"type":"text","value":" method with a text 'prompt', such as ","position":{"start":{"line":3859,"column":26,"offset":121679},"end":{"line":3859,"column":64,"offset":121717}}},{"type":"raw","value":"<code class=\"language-text\">\"Enter A Value: \"</code>","position":{"start":{"line":3859,"column":64,"offset":121717},"end":{"line":3859,"column":83,"offset":121736}}},{"type":"text","value":". What we can initially do here, is print the value which was entered, back to the console, by ","position":{"start":{"line":3859,"column":83,"offset":121736},"end":{"line":3859,"column":178,"offset":121831}}},{"type":"raw","value":"<code class=\"language-text\">print(\"you entered \", integer_value)</code>","position":{"start":{"line":3859,"column":178,"offset":121831},"end":{"line":3859,"column":216,"offset":121869}}},{"type":"text","value":".","position":{"start":{"line":3859,"column":216,"offset":121869},"end":{"line":3859,"column":217,"offset":121870}}}],"position":{"start":{"line":3859,"column":1,"offset":121654},"end":{"line":3859,"column":217,"offset":121870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An interesting point to explore here, is the type of data input at the console.","position":{"start":{"line":3861,"column":1,"offset":121874},"end":{"line":3861,"column":80,"offset":121953}}}],"position":{"start":{"line":3861,"column":1,"offset":121874},"end":{"line":3861,"column":80,"offset":121953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's do a ","position":{"start":{"line":3863,"column":1,"offset":121957},"end":{"line":3863,"column":12,"offset":121968}}},{"type":"raw","value":"<code class=\"language-text\">print(type(value))</code>","position":{"start":{"line":3863,"column":12,"offset":121968},"end":{"line":3863,"column":32,"offset":121988}}},{"type":"text","value":".","position":{"start":{"line":3863,"column":32,"offset":121988},"end":{"line":3863,"column":33,"offset":121989}}}],"position":{"start":{"line":3863,"column":1,"offset":121957},"end":{"line":3863,"column":33,"offset":121989}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    value <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter a Value: \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"you entered \"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3865,"column":1,"offset":121993},"end":{"line":3869,"column":4,"offset":122103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Input a value of ","position":{"start":{"line":3871,"column":1,"offset":122107},"end":{"line":3871,"column":18,"offset":122124}}},{"type":"raw","value":"<code class=\"language-text\">Test</code>","position":{"start":{"line":3871,"column":18,"offset":122124},"end":{"line":3871,"column":24,"offset":122130}}},{"type":"text","value":". It has a class of ","position":{"start":{"line":3871,"column":24,"offset":122130},"end":{"line":3871,"column":44,"offset":122150}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":3871,"column":44,"offset":122150},"end":{"line":3871,"column":49,"offset":122155}}},{"type":"text","value":".","position":{"start":{"line":3871,"column":49,"offset":122155},"end":{"line":3871,"column":50,"offset":122156}}}],"position":{"start":{"line":3871,"column":1,"offset":122107},"end":{"line":3871,"column":50,"offset":122156}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's run it again to see other possibilities. This time, let's enter a numeric value, say ","position":{"start":{"line":3873,"column":1,"offset":122160},"end":{"line":3873,"column":92,"offset":122251}}},{"type":"raw","value":"<code class=\"language-text\">12</code>","position":{"start":{"line":3873,"column":92,"offset":122251},"end":{"line":3873,"column":96,"offset":122255}}},{"type":"text","value":". what would happen?","position":{"start":{"line":3873,"column":96,"offset":122255},"end":{"line":3873,"column":116,"offset":122275}}}],"position":{"start":{"line":3873,"column":1,"offset":122160},"end":{"line":3873,"column":116,"offset":122275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We again get ","position":{"start":{"line":3875,"column":1,"offset":122279},"end":{"line":3875,"column":14,"offset":122292}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":3875,"column":14,"offset":122292},"end":{"line":3875,"column":19,"offset":122297}}},{"type":"text","value":".","position":{"start":{"line":3875,"column":19,"offset":122297},"end":{"line":3875,"column":20,"offset":122298}}}],"position":{"start":{"line":3875,"column":1,"offset":122279},"end":{"line":3875,"column":20,"offset":122298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to get an integer value from the input. How can we do it?","position":{"start":{"line":3877,"column":1,"offset":122302},"end":{"line":3877,"column":66,"offset":122367}}}],"position":{"start":{"line":3877,"column":1,"offset":122302},"end":{"line":3877,"column":66,"offset":122367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">int()</code>","position":{"start":{"line":3879,"column":1,"offset":122371},"end":{"line":3879,"column":8,"offset":122378}}},{"type":"text","value":" function converts string to int. Let's use it.","position":{"start":{"line":3879,"column":8,"offset":122378},"end":{"line":3879,"column":55,"offset":122425}}}],"position":{"start":{"line":3879,"column":1,"offset":122371},"end":{"line":3879,"column":55,"offset":122425}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">value <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter a Value: \"</span><span class=\"token punctuation\">)</span>\ninteger_value <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"you entered \"</span><span class=\"token punctuation\">,</span> integer_value<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>integer_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3881,"column":1,"offset":122429},"end":{"line":3886,"column":4,"offset":122571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's run our code once again.","position":{"start":{"line":3888,"column":1,"offset":122575},"end":{"line":3888,"column":31,"offset":122605}}}],"position":{"start":{"line":3888,"column":1,"offset":122575},"end":{"line":3888,"column":31,"offset":122605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">\"Enter A Value: \"</code>","position":{"start":{"line":3890,"column":1,"offset":122609},"end":{"line":3890,"column":20,"offset":122628}}},{"type":"text","value":" is prompted, and we enter ","position":{"start":{"line":3890,"column":20,"offset":122628},"end":{"line":3890,"column":47,"offset":122655}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":3890,"column":47,"offset":122655},"end":{"line":3890,"column":51,"offset":122659}}},{"type":"text","value":". And now, of it says ","position":{"start":{"line":3890,"column":51,"offset":122659},"end":{"line":3890,"column":73,"offset":122681}}},{"type":"raw","value":"<code class=\"language-text\">\"You entered 15\"</code>","position":{"start":{"line":3890,"column":73,"offset":122681},"end":{"line":3890,"column":91,"offset":122699}}},{"type":"text","value":", and the type it indicates to us, is ","position":{"start":{"line":3890,"column":91,"offset":122699},"end":{"line":3890,"column":129,"offset":122737}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":3890,"column":129,"offset":122737},"end":{"line":3890,"column":134,"offset":122742}}},{"type":"text","value":".","position":{"start":{"line":3890,"column":134,"offset":122742},"end":{"line":3890,"column":135,"offset":122743}}}],"position":{"start":{"line":3890,"column":1,"offset":122609},"end":{"line":3890,"column":135,"offset":122743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Design a menu","position":{"start":{"line":3892,"column":3,"offset":122749},"end":{"line":3892,"column":16,"offset":122762}}}],"position":{"start":{"line":3892,"column":1,"offset":122747},"end":{"line":3892,"column":18,"offset":122764}}}],"position":{"start":{"line":3892,"column":1,"offset":122747},"end":{"line":3892,"column":18,"offset":122764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ask the User for input:","position":{"start":{"line":3894,"column":5,"offset":122772},"end":{"line":3894,"column":28,"offset":122795}}}],"position":{"start":{"line":3894,"column":5,"offset":122772},"end":{"line":3894,"column":28,"offset":122795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Enter two numbers","position":{"start":{"line":3895,"column":9,"offset":122805},"end":{"line":3895,"column":26,"offset":122822}}}],"position":{"start":{"line":3895,"column":5,"offset":122801},"end":{"line":3895,"column":26,"offset":122822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Choose the Option:","position":{"start":{"line":3896,"column":9,"offset":122832},"end":{"line":3896,"column":27,"offset":122850}}}],"position":{"start":{"line":3896,"column":9,"offset":122832},"end":{"line":3896,"column":27,"offset":122850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"1 - Add","position":{"start":{"line":3897,"column":13,"offset":122864},"end":{"line":3897,"column":20,"offset":122871}}}],"position":{"start":{"line":3897,"column":9,"offset":122860},"end":{"line":3897,"column":20,"offset":122871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"2 - Subtract","position":{"start":{"line":3898,"column":13,"offset":122885},"end":{"line":3898,"column":25,"offset":122897}}}],"position":{"start":{"line":3898,"column":9,"offset":122881},"end":{"line":3898,"column":25,"offset":122897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"3 - Multiply","position":{"start":{"line":3899,"column":13,"offset":122911},"end":{"line":3899,"column":25,"offset":122923}}}],"position":{"start":{"line":3899,"column":9,"offset":122907},"end":{"line":3899,"column":25,"offset":122923}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"4 - Divide","position":{"start":{"line":3900,"column":13,"offset":122937},"end":{"line":3900,"column":23,"offset":122947}}}],"position":{"start":{"line":3900,"column":9,"offset":122933},"end":{"line":3900,"column":23,"offset":122947}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3897,"column":9,"offset":122860},"end":{"line":3900,"column":23,"offset":122947}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3896,"column":5,"offset":122828},"end":{"line":3900,"column":23,"offset":122947}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3895,"column":5,"offset":122801},"end":{"line":3900,"column":23,"offset":122947}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3894,"column":1,"offset":122768},"end":{"line":3900,"column":23,"offset":122947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Perform the Operation","position":{"start":{"line":3901,"column":5,"offset":122953},"end":{"line":3901,"column":26,"offset":122974}}}],"position":{"start":{"line":3901,"column":1,"offset":122949},"end":{"line":3901,"column":26,"offset":122974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Publish the Result","position":{"start":{"line":3902,"column":5,"offset":122980},"end":{"line":3902,"column":23,"offset":122998}}}],"position":{"start":{"line":3902,"column":1,"offset":122976},"end":{"line":3902,"column":23,"offset":122998}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3894,"column":1,"offset":122768},"end":{"line":3902,"column":23,"offset":122998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's design a menu, and then ask the user for input.","position":{"start":{"line":3904,"column":1,"offset":123002},"end":{"line":3904,"column":54,"offset":123055}}}],"position":{"start":{"line":3904,"column":1,"offset":123002},"end":{"line":3904,"column":54,"offset":123055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We have codes for each of the operations : add is ","position":{"start":{"line":3906,"column":1,"offset":123059},"end":{"line":3906,"column":51,"offset":123109}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":3906,"column":51,"offset":123109},"end":{"line":3906,"column":54,"offset":123112}}},{"type":"text","value":", subtract is ","position":{"start":{"line":3906,"column":54,"offset":123112},"end":{"line":3906,"column":68,"offset":123126}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":3906,"column":68,"offset":123126},"end":{"line":3906,"column":71,"offset":123129}}},{"type":"text","value":", divide is ","position":{"start":{"line":3906,"column":71,"offset":123129},"end":{"line":3906,"column":83,"offset":123141}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":3906,"column":83,"offset":123141},"end":{"line":3906,"column":86,"offset":123144}}},{"type":"text","value":", and multiply is ","position":{"start":{"line":3906,"column":86,"offset":123144},"end":{"line":3906,"column":104,"offset":123162}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":3906,"column":104,"offset":123162},"end":{"line":3906,"column":107,"offset":123165}}},{"type":"text","value":".","position":{"start":{"line":3906,"column":107,"offset":123165},"end":{"line":3906,"column":108,"offset":123166}}}],"position":{"start":{"line":3906,"column":1,"offset":123059},"end":{"line":3906,"column":108,"offset":123166}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the first version of the program let's get all the inputs and print them out.","position":{"start":{"line":3908,"column":1,"offset":123170},"end":{"line":3908,"column":81,"offset":123250}}}],"position":{"start":{"line":3908,"column":1,"offset":123170},"end":{"line":3908,"column":81,"offset":123250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution","position":{"start":{"line":3910,"column":3,"offset":123256},"end":{"line":3910,"column":11,"offset":123264}}}],"position":{"start":{"line":3910,"column":1,"offset":123254},"end":{"line":3910,"column":13,"offset":123266}}}],"position":{"start":{"line":3910,"column":1,"offset":123254},"end":{"line":3910,"column":13,"offset":123266}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first version of the program is simple to write","position":{"start":{"line":3912,"column":1,"offset":123270},"end":{"line":3912,"column":52,"offset":123321}}}],"position":{"start":{"line":3912,"column":1,"offset":123270},"end":{"line":3912,"column":52,"offset":123321}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Number1: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnumber2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Number2: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"You entered </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>number1<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"You entered </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>number2<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number1 <span class=\"token operator\">+</span> number2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n1 - Add\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2 - Subtract\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3 - Divide\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4 - Multiply\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5 - Exit\"</span><span class=\"token punctuation\">)</span>\nchoice <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose Operation: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>choice<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3914,"column":1,"offset":123325},"end":{"line":3927,"column":4,"offset":123679}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We will continue this exercise to complete it, in the next step.","position":{"start":{"line":3929,"column":1,"offset":123683},"end":{"line":3929,"column":65,"offset":123747}}}],"position":{"start":{"line":3929,"column":1,"offset":123683},"end":{"line":3929,"column":65,"offset":123747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3931,"column":3,"offset":123753},"end":{"line":3931,"column":10,"offset":123760}}}],"position":{"start":{"line":3931,"column":1,"offset":123751},"end":{"line":3931,"column":12,"offset":123762}}}],"position":{"start":{"line":3931,"column":1,"offset":123751},"end":{"line":3931,"column":12,"offset":123762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3933,"column":1,"offset":123766},"end":{"line":3933,"column":18,"offset":123783}}}],"position":{"start":{"line":3933,"column":1,"offset":123766},"end":{"line":3933,"column":18,"offset":123783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at the in-built ","position":{"start":{"line":3935,"column":5,"offset":123791},"end":{"line":3935,"column":28,"offset":123814}}},{"type":"raw","value":"<code class=\"language-text\">input()</code>","position":{"start":{"line":3935,"column":28,"offset":123814},"end":{"line":3935,"column":37,"offset":123823}}},{"type":"text","value":" function that can read console input","position":{"start":{"line":3935,"column":37,"offset":123823},"end":{"line":3935,"column":74,"offset":123860}}}],"position":{"start":{"line":3935,"column":1,"offset":123787},"end":{"line":3935,"column":74,"offset":123860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Learned that ","position":{"start":{"line":3936,"column":5,"offset":123866},"end":{"line":3936,"column":18,"offset":123879}}},{"type":"raw","value":"<code class=\"language-text\">input()</code>","position":{"start":{"line":3936,"column":18,"offset":123879},"end":{"line":3936,"column":27,"offset":123888}}},{"type":"text","value":" always returns what the user enters, as a string","position":{"start":{"line":3936,"column":27,"offset":123888},"end":{"line":3936,"column":76,"offset":123937}}}],"position":{"start":{"line":3936,"column":1,"offset":123862},"end":{"line":3936,"column":76,"offset":123937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We can convert the string from ","position":{"start":{"line":3937,"column":5,"offset":123943},"end":{"line":3937,"column":36,"offset":123974}}},{"type":"raw","value":"<code class=\"language-text\">input()</code>","position":{"start":{"line":3937,"column":36,"offset":123974},"end":{"line":3937,"column":45,"offset":123983}}},{"type":"text","value":", to the data type we expect by invoking conversion functions","position":{"start":{"line":3937,"column":45,"offset":123983},"end":{"line":3937,"column":106,"offset":124044}}}],"position":{"start":{"line":3937,"column":1,"offset":123939},"end":{"line":3937,"column":106,"offset":124044}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3935,"column":1,"offset":123787},"end":{"line":3937,"column":106,"offset":124044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 11: Continued - Classroom Exercise CE-DT-02","position":{"start":{"line":3939,"column":3,"offset":124050},"end":{"line":3939,"column":51,"offset":124098}}}],"position":{"start":{"line":3939,"column":1,"offset":124048},"end":{"line":3939,"column":53,"offset":124100}}}],"position":{"start":{"line":3939,"column":1,"offset":124048},"end":{"line":3939,"column":53,"offset":124100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":3941,"column":3,"offset":124106},"end":{"line":3941,"column":12,"offset":124115}}}],"position":{"start":{"line":3941,"column":1,"offset":124104},"end":{"line":3941,"column":14,"offset":124117}}}],"position":{"start":{"line":3941,"column":1,"offset":124104},"end":{"line":3941,"column":14,"offset":124117}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step, we got the input from the user. Let's continue the exercise in this step. We want to write an if condition.","position":{"start":{"line":3943,"column":1,"offset":124121},"end":{"line":3943,"column":130,"offset":124250}}}],"position":{"start":{"line":3943,"column":1,"offset":124121},"end":{"line":3943,"column":130,"offset":124250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution ","position":{"start":{"line":3945,"column":3,"offset":124256},"end":{"line":3945,"column":12,"offset":124265}}},{"type":"text","value":"(","position":{"start":{"line":3945,"column":12,"offset":124265},"end":{"line":3945,"column":14,"offset":124267}}},{"type":"text","value":"Continued","position":{"start":{"line":3945,"column":14,"offset":124267},"end":{"line":3945,"column":23,"offset":124276}}},{"type":"text","value":")","position":{"start":{"line":3945,"column":23,"offset":124276},"end":{"line":3945,"column":25,"offset":124278}}}],"position":{"start":{"line":3945,"column":1,"offset":124254},"end":{"line":3945,"column":27,"offset":124280}}}],"position":{"start":{"line":3945,"column":1,"offset":124254},"end":{"line":3945,"column":27,"offset":124280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Extending the solution is easy. Write appropriate ","position":{"start":{"line":3947,"column":1,"offset":124284},"end":{"line":3947,"column":51,"offset":124334}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3947,"column":51,"offset":124334},"end":{"line":3947,"column":55,"offset":124338}}},{"type":"text","value":", ","position":{"start":{"line":3947,"column":55,"offset":124338},"end":{"line":3947,"column":57,"offset":124340}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3947,"column":57,"offset":124340},"end":{"line":3947,"column":63,"offset":124346}}},{"type":"text","value":" and ","position":{"start":{"line":3947,"column":63,"offset":124346},"end":{"line":3947,"column":68,"offset":124351}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":3947,"column":68,"offset":124351},"end":{"line":3947,"column":74,"offset":124357}}},{"type":"text","value":" conditions.","position":{"start":{"line":3947,"column":74,"offset":124357},"end":{"line":3947,"column":86,"offset":124369}}}],"position":{"start":{"line":3947,"column":1,"offset":124284},"end":{"line":3947,"column":86,"offset":124369}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Number1: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnumber2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Number2: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n1 - Add\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2 - Subtract\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3 - Divide\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4 - Multiply\"</span><span class=\"token punctuation\">)</span>\n\nchoice <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose Operation: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># print(number1 + number2)</span>\n<span class=\"token comment\"># print(choice)</span>\n<span class=\"token keyword\">if</span> choice<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> number1 <span class=\"token operator\">+</span> number2\n<span class=\"token keyword\">elif</span> choice<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> number1 <span class=\"token operator\">-</span> number2\n<span class=\"token keyword\">elif</span> choice<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> number1 <span class=\"token operator\">/</span> number2\n<span class=\"token keyword\">elif</span> choice<span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> number1 <span class=\"token operator\">*</span> number2\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token string\">\"Invalid Choice\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3949,"column":1,"offset":124373},"end":{"line":3974,"column":4,"offset":124901}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We added the following code to account for invalid input.","position":{"start":{"line":3976,"column":1,"offset":124905},"end":{"line":3976,"column":58,"offset":124962}}}],"position":{"start":{"line":3976,"column":1,"offset":124905},"end":{"line":3976,"column":58,"offset":124962}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token string\">\"Invalid Choice\"</span></code></pre></div>","position":{"start":{"line":3978,"column":1,"offset":124966},"end":{"line":3981,"column":4,"offset":125018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":3983,"column":3,"offset":125024},"end":{"line":3983,"column":10,"offset":125031}}}],"position":{"start":{"line":3983,"column":1,"offset":125022},"end":{"line":3983,"column":12,"offset":125033}}}],"position":{"start":{"line":3983,"column":1,"offset":125022},"end":{"line":3983,"column":12,"offset":125033}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":3985,"column":1,"offset":125037},"end":{"line":3985,"column":18,"offset":125054}}}],"position":{"start":{"line":3985,"column":1,"offset":125037},"end":{"line":3985,"column":18,"offset":125054}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Augmented the Menu Exercise to get all the input from the console, and compute a value from them","position":{"start":{"line":3987,"column":5,"offset":125062},"end":{"line":3987,"column":101,"offset":125158}}}],"position":{"start":{"line":3987,"column":1,"offset":125058},"end":{"line":3987,"column":101,"offset":125158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Corrected the logic to handle incorrect input","position":{"start":{"line":3988,"column":5,"offset":125164},"end":{"line":3988,"column":50,"offset":125209}}}],"position":{"start":{"line":3988,"column":1,"offset":125160},"end":{"line":3988,"column":50,"offset":125209}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3987,"column":1,"offset":125058},"end":{"line":3988,"column":50,"offset":125209}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 12: Puzzles On Conditionals","position":{"start":{"line":3990,"column":3,"offset":125215},"end":{"line":3990,"column":35,"offset":125247}}}],"position":{"start":{"line":3990,"column":1,"offset":125213},"end":{"line":3990,"column":37,"offset":125249}}}],"position":{"start":{"line":3990,"column":1,"offset":125213},"end":{"line":3990,"column":37,"offset":125249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's look at a few puzzles related to these ","position":{"start":{"line":3992,"column":1,"offset":125253},"end":{"line":3992,"column":60,"offset":125312}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":3992,"column":60,"offset":125312},"end":{"line":3992,"column":64,"offset":125316}}},{"type":"text","value":", ","position":{"start":{"line":3992,"column":64,"offset":125316},"end":{"line":3992,"column":66,"offset":125318}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":3992,"column":66,"offset":125318},"end":{"line":3992,"column":72,"offset":125324}}},{"type":"text","value":" and ","position":{"start":{"line":3992,"column":72,"offset":125324},"end":{"line":3992,"column":77,"offset":125329}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":3992,"column":77,"offset":125329},"end":{"line":3992,"column":83,"offset":125335}}},{"type":"text","value":" clauses.","position":{"start":{"line":3992,"column":83,"offset":125335},"end":{"line":3992,"column":92,"offset":125344}}}],"position":{"start":{"line":3992,"column":1,"offset":125253},"end":{"line":3992,"column":92,"offset":125344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Puzzle-01","position":{"start":{"line":3994,"column":3,"offset":125350},"end":{"line":3994,"column":12,"offset":125359}}}],"position":{"start":{"line":3994,"column":1,"offset":125348},"end":{"line":3994,"column":14,"offset":125361}}}],"position":{"start":{"line":3994,"column":1,"offset":125348},"end":{"line":3994,"column":14,"offset":125361}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start with the first puzzle. Guess the output.","position":{"start":{"line":3996,"column":1,"offset":125365},"end":{"line":3996,"column":53,"offset":125417}}}],"position":{"start":{"line":3996,"column":1,"offset":125365},"end":{"line":3996,"column":53,"offset":125417}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">k <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">></span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span>k <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":3998,"column":1,"offset":125421},"end":{"line":4008,"column":4,"offset":125544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we run it, you can see that the output is ","position":{"start":{"line":4010,"column":1,"offset":125548},"end":{"line":4010,"column":48,"offset":125595}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":4010,"column":48,"offset":125595},"end":{"line":4010,"column":51,"offset":125598}}},{"type":"text","value":".","position":{"start":{"line":4010,"column":51,"offset":125598},"end":{"line":4010,"column":52,"offset":125599}}}],"position":{"start":{"line":4010,"column":1,"offset":125548},"end":{"line":4010,"column":52,"offset":125599}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">k</code>","position":{"start":{"line":4012,"column":1,"offset":125603},"end":{"line":4012,"column":4,"offset":125606}}},{"type":"text","value":" has a value of ","position":{"start":{"line":4012,"column":4,"offset":125606},"end":{"line":4012,"column":20,"offset":125622}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":4012,"column":20,"offset":125622},"end":{"line":4012,"column":24,"offset":125626}}},{"type":"text","value":", is it greater than ","position":{"start":{"line":4012,"column":24,"offset":125626},"end":{"line":4012,"column":45,"offset":125647}}},{"type":"raw","value":"<code class=\"language-text\">20</code>","position":{"start":{"line":4012,"column":45,"offset":125647},"end":{"line":4012,"column":49,"offset":125651}}},{"type":"text","value":"? No! Execution goes to the ","position":{"start":{"line":4012,"column":49,"offset":125651},"end":{"line":4012,"column":77,"offset":125679}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":4012,"column":77,"offset":125679},"end":{"line":4012,"column":83,"offset":125685}}},{"type":"text","value":", is ","position":{"start":{"line":4012,"column":83,"offset":125685},"end":{"line":4012,"column":88,"offset":125690}}},{"type":"raw","value":"<code class=\"language-text\">k</code>","position":{"start":{"line":4012,"column":88,"offset":125690},"end":{"line":4012,"column":91,"offset":125693}}},{"type":"text","value":" greater then ","position":{"start":{"line":4012,"column":91,"offset":125693},"end":{"line":4012,"column":105,"offset":125707}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":4012,"column":105,"offset":125707},"end":{"line":4012,"column":109,"offset":125711}}},{"type":"text","value":"? Yes. It prints ","position":{"start":{"line":4012,"column":109,"offset":125711},"end":{"line":4012,"column":126,"offset":125728}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":4012,"column":126,"offset":125728},"end":{"line":4012,"column":129,"offset":125731}}},{"type":"text","value":" and goes out of the complete ","position":{"start":{"line":4012,"column":129,"offset":125731},"end":{"line":4012,"column":159,"offset":125761}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4012,"column":159,"offset":125761},"end":{"line":4012,"column":163,"offset":125765}}},{"type":"text","value":"-","position":{"start":{"line":4012,"column":163,"offset":125765},"end":{"line":4012,"column":164,"offset":125766}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":4012,"column":164,"offset":125766},"end":{"line":4012,"column":170,"offset":125772}}},{"type":"text","value":" block.","position":{"start":{"line":4012,"column":170,"offset":125772},"end":{"line":4012,"column":177,"offset":125779}}}],"position":{"start":{"line":4012,"column":1,"offset":125603},"end":{"line":4012,"column":177,"offset":125779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Inside the ","position":{"start":{"line":4014,"column":1,"offset":125783},"end":{"line":4014,"column":12,"offset":125794}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4014,"column":12,"offset":125794},"end":{"line":4014,"column":16,"offset":125798}}},{"type":"text","value":" conditional, the ","position":{"start":{"line":4014,"column":16,"offset":125798},"end":{"line":4014,"column":34,"offset":125816}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4014,"column":34,"offset":125816},"end":{"line":4014,"column":38,"offset":125820}}},{"type":"text","value":", ","position":{"start":{"line":4014,"column":38,"offset":125820},"end":{"line":4014,"column":40,"offset":125822}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":4014,"column":40,"offset":125822},"end":{"line":4014,"column":46,"offset":125828}}},{"type":"text","value":" and ","position":{"start":{"line":4014,"column":46,"offset":125828},"end":{"line":4014,"column":51,"offset":125833}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":4014,"column":51,"offset":125833},"end":{"line":4014,"column":57,"offset":125839}}},{"type":"text","value":" clauses are all independent ones. Only one matching block is ever executed.","position":{"start":{"line":4014,"column":57,"offset":125839},"end":{"line":4014,"column":133,"offset":125915}}}],"position":{"start":{"line":4014,"column":1,"offset":125783},"end":{"line":4014,"column":133,"offset":125915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Puzzle-02","position":{"start":{"line":4016,"column":3,"offset":125921},"end":{"line":4016,"column":12,"offset":125930}}}],"position":{"start":{"line":4016,"column":1,"offset":125919},"end":{"line":4016,"column":14,"offset":125932}}}],"position":{"start":{"line":4016,"column":1,"offset":125919},"end":{"line":4016,"column":14,"offset":125932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What do you think would be the output of this particular piece of code?","position":{"start":{"line":4018,"column":1,"offset":125936},"end":{"line":4018,"column":72,"offset":126007}}}],"position":{"start":{"line":4018,"column":1,"offset":125936},"end":{"line":4018,"column":72,"offset":126007}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">l <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"l&lt;20\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l <span class=\"token operator\">></span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"l>20\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Who am I?\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":4020,"column":1,"offset":126011},"end":{"line":4028,"column":4,"offset":126138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that there are two totally different ","position":{"start":{"line":4030,"column":1,"offset":126142},"end":{"line":4030,"column":43,"offset":126184}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4030,"column":43,"offset":126184},"end":{"line":4030,"column":47,"offset":126188}}},{"type":"text","value":" conditions in here : ","position":{"start":{"line":4030,"column":47,"offset":126188},"end":{"line":4030,"column":69,"offset":126210}}},{"type":"raw","value":"<code class=\"language-text\">if l &lt; 20: ...</code>","position":{"start":{"line":4030,"column":69,"offset":126210},"end":{"line":4030,"column":85,"offset":126226}}},{"type":"text","value":" immediately followed by","position":{"start":{"line":4030,"column":85,"offset":126226},"end":{"line":4030,"column":109,"offset":126250}}},{"type":"raw","value":"<code class=\"language-text\">if l > 20: ... else: ...</code>","position":{"start":{"line":4030,"column":109,"offset":126250},"end":{"line":4030,"column":135,"offset":126276}}},{"type":"text","value":".","position":{"start":{"line":4030,"column":135,"offset":126276},"end":{"line":4030,"column":136,"offset":126277}}}],"position":{"start":{"line":4030,"column":1,"offset":126142},"end":{"line":4030,"column":136,"offset":126277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first ","position":{"start":{"line":4032,"column":1,"offset":126281},"end":{"line":4032,"column":11,"offset":126291}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4032,"column":11,"offset":126291},"end":{"line":4032,"column":15,"offset":126295}}},{"type":"text","value":" is true. ","position":{"start":{"line":4032,"column":15,"offset":126295},"end":{"line":4032,"column":25,"offset":126305}}},{"type":"raw","value":"<code class=\"language-text\">l&lt;20</code>","position":{"start":{"line":4032,"column":25,"offset":126305},"end":{"line":4032,"column":31,"offset":126311}}},{"type":"text","value":" is printed.","position":{"start":{"line":4032,"column":31,"offset":126311},"end":{"line":4032,"column":43,"offset":126323}}}],"position":{"start":{"line":4032,"column":1,"offset":126281},"end":{"line":4032,"column":43,"offset":126323}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The second ","position":{"start":{"line":4034,"column":1,"offset":126327},"end":{"line":4034,"column":12,"offset":126338}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4034,"column":12,"offset":126338},"end":{"line":4034,"column":16,"offset":126342}}},{"type":"text","value":" is a separate statement. The condition is false. So. ","position":{"start":{"line":4034,"column":16,"offset":126342},"end":{"line":4034,"column":70,"offset":126396}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":4034,"column":70,"offset":126396},"end":{"line":4034,"column":76,"offset":126402}}},{"type":"text","value":" gets executed. Therefore, ","position":{"start":{"line":4034,"column":76,"offset":126402},"end":{"line":4034,"column":103,"offset":126429}}},{"type":"raw","value":"<code class=\"language-text\">\"who am I\"</code>","position":{"start":{"line":4034,"column":103,"offset":126429},"end":{"line":4034,"column":115,"offset":126441}}},{"type":"text","value":" gets printed.","position":{"start":{"line":4034,"column":115,"offset":126441},"end":{"line":4034,"column":129,"offset":126455}}}],"position":{"start":{"line":4034,"column":1,"offset":126327},"end":{"line":4034,"column":129,"offset":126455}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Puzzle-03","position":{"start":{"line":4036,"column":3,"offset":126461},"end":{"line":4036,"column":12,"offset":126470}}}],"position":{"start":{"line":4036,"column":1,"offset":126459},"end":{"line":4036,"column":14,"offset":126472}}}],"position":{"start":{"line":4036,"column":1,"offset":126459},"end":{"line":4036,"column":14,"offset":126472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's run this code.","position":{"start":{"line":4038,"column":1,"offset":126476},"end":{"line":4038,"column":21,"offset":126496}}}],"position":{"start":{"line":4038,"column":1,"offset":126476},"end":{"line":4038,"column":21,"offset":126496}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">m <span class=\"token operator\">=</span> <span class=\"token number\">15</span>\n<span class=\"token keyword\">if</span> m<span class=\"token operator\">></span><span class=\"token number\">20</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> m<span class=\"token operator\">&lt;</span><span class=\"token number\">20</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"m>20\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Who am I?\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":4040,"column":1,"offset":126500},"end":{"line":4047,"column":4,"offset":126608}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see that nothing is printed.","position":{"start":{"line":4049,"column":1,"offset":126612},"end":{"line":4049,"column":37,"offset":126648}}}],"position":{"start":{"line":4049,"column":1,"offset":126612},"end":{"line":4049,"column":37,"offset":126648}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The most important thing to focus on here, is indentation.","position":{"start":{"line":4051,"column":1,"offset":126652},"end":{"line":4051,"column":59,"offset":126710}}}],"position":{"start":{"line":4051,"column":1,"offset":126652},"end":{"line":4051,"column":59,"offset":126710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The second ","position":{"start":{"line":4053,"column":1,"offset":126714},"end":{"line":4053,"column":12,"offset":126725}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4053,"column":12,"offset":126725},"end":{"line":4053,"column":16,"offset":126729}}},{"type":"text","value":" block is executed only if the first ","position":{"start":{"line":4053,"column":16,"offset":126729},"end":{"line":4053,"column":53,"offset":126766}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4053,"column":53,"offset":126766},"end":{"line":4053,"column":57,"offset":126770}}},{"type":"text","value":" is true.","position":{"start":{"line":4053,"column":57,"offset":126770},"end":{"line":4053,"column":66,"offset":126779}}}],"position":{"start":{"line":4053,"column":1,"offset":126714},"end":{"line":4053,"column":66,"offset":126779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Puzzle-04","position":{"start":{"line":4055,"column":3,"offset":126785},"end":{"line":4055,"column":12,"offset":126794}}}],"position":{"start":{"line":4055,"column":1,"offset":126783},"end":{"line":4055,"column":14,"offset":126796}}}],"position":{"start":{"line":4055,"column":1,"offset":126783},"end":{"line":4055,"column":14,"offset":126796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What would be the output?","position":{"start":{"line":4057,"column":1,"offset":126800},"end":{"line":4057,"column":26,"offset":126825}}}],"position":{"start":{"line":4057,"column":1,"offset":126800},"end":{"line":4057,"column":26,"offset":126825}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">if</span> number <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n  number <span class=\"token operator\">=</span> number <span class=\"token operator\">+</span> <span class=\"token number\">10</span>\nnumber <span class=\"token operator\">=</span> number <span class=\"token operator\">+</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":4059,"column":1,"offset":126829},"end":{"line":4065,"column":4,"offset":126931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":4067,"column":1,"offset":126935},"end":{"line":4067,"column":5,"offset":126939}}},{"type":"text","value":" is printed.","position":{"start":{"line":4067,"column":5,"offset":126939},"end":{"line":4067,"column":17,"offset":126951}}}],"position":{"start":{"line":4067,"column":1,"offset":126935},"end":{"line":4067,"column":17,"offset":126951}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The most important thing to focus on here, is indentation.","position":{"start":{"line":4069,"column":1,"offset":126955},"end":{"line":4069,"column":59,"offset":127013}}}],"position":{"start":{"line":4069,"column":1,"offset":126955},"end":{"line":4069,"column":59,"offset":127013}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Only ","position":{"start":{"line":4071,"column":1,"offset":127017},"end":{"line":4071,"column":6,"offset":127022}}},{"type":"raw","value":"<code class=\"language-text\">number = number + 10</code>","position":{"start":{"line":4071,"column":6,"offset":127022},"end":{"line":4071,"column":28,"offset":127044}}},{"type":"text","value":" is part of ","position":{"start":{"line":4071,"column":28,"offset":127044},"end":{"line":4071,"column":40,"offset":127056}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4071,"column":40,"offset":127056},"end":{"line":4071,"column":44,"offset":127060}}},{"type":"text","value":" block. It is not executed because the condition is false.","position":{"start":{"line":4071,"column":44,"offset":127060},"end":{"line":4071,"column":102,"offset":127118}}}],"position":{"start":{"line":4071,"column":1,"offset":127017},"end":{"line":4071,"column":102,"offset":127118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">number = number + 5</code>","position":{"start":{"line":4073,"column":1,"offset":127122},"end":{"line":4073,"column":22,"offset":127143}}},{"type":"text","value":" is not part of ","position":{"start":{"line":4073,"column":22,"offset":127143},"end":{"line":4073,"column":38,"offset":127159}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4073,"column":38,"offset":127159},"end":{"line":4073,"column":42,"offset":127163}}},{"type":"text","value":". So, it gets executed.","position":{"start":{"line":4073,"column":42,"offset":127163},"end":{"line":4073,"column":65,"offset":127186}}}],"position":{"start":{"line":4073,"column":1,"offset":127122},"end":{"line":4073,"column":65,"offset":127186}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's add a couple of spaces before ","position":{"start":{"line":4075,"column":1,"offset":127190},"end":{"line":4075,"column":37,"offset":127226}}},{"type":"raw","value":"<code class=\"language-text\">number = number + 5</code>","position":{"start":{"line":4075,"column":37,"offset":127226},"end":{"line":4075,"column":58,"offset":127247}}},{"type":"text","value":".","position":{"start":{"line":4075,"column":58,"offset":127247},"end":{"line":4075,"column":59,"offset":127248}}}],"position":{"start":{"line":4075,"column":1,"offset":127190},"end":{"line":4075,"column":59,"offset":127248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What would be the output?","position":{"start":{"line":4077,"column":1,"offset":127252},"end":{"line":4077,"column":26,"offset":127277}}}],"position":{"start":{"line":4077,"column":1,"offset":127252},"end":{"line":4077,"column":26,"offset":127277}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">if</span> number <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n  number <span class=\"token operator\">=</span> number <span class=\"token operator\">+</span> <span class=\"token number\">10</span>\n  number <span class=\"token operator\">=</span> number <span class=\"token operator\">+</span> <span class=\"token number\">5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":4079,"column":1,"offset":127281},"end":{"line":4085,"column":4,"offset":127385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":4087,"column":1,"offset":127389},"end":{"line":4087,"column":4,"offset":127392}}},{"type":"text","value":" is printed.","position":{"start":{"line":4087,"column":4,"offset":127392},"end":{"line":4087,"column":16,"offset":127404}}}],"position":{"start":{"line":4087,"column":1,"offset":127389},"end":{"line":4087,"column":16,"offset":127404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Both the statements ","position":{"start":{"line":4089,"column":1,"offset":127408},"end":{"line":4089,"column":21,"offset":127428}}},{"type":"raw","value":"<code class=\"language-text\">number = number + 10</code>","position":{"start":{"line":4089,"column":21,"offset":127428},"end":{"line":4089,"column":43,"offset":127450}}},{"type":"text","value":" and ","position":{"start":{"line":4089,"column":43,"offset":127450},"end":{"line":4089,"column":48,"offset":127455}}},{"type":"raw","value":"<code class=\"language-text\">number = number + 5</code>","position":{"start":{"line":4089,"column":48,"offset":127455},"end":{"line":4089,"column":69,"offset":127476}}},{"type":"text","value":" are part of ","position":{"start":{"line":4089,"column":69,"offset":127476},"end":{"line":4089,"column":82,"offset":127489}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4089,"column":82,"offset":127489},"end":{"line":4089,"column":86,"offset":127493}}},{"type":"text","value":" block. They are not executed because the condition is false.","position":{"start":{"line":4089,"column":86,"offset":127493},"end":{"line":4089,"column":147,"offset":127554}}}],"position":{"start":{"line":4089,"column":1,"offset":127408},"end":{"line":4089,"column":147,"offset":127554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":4091,"column":3,"offset":127560},"end":{"line":4091,"column":10,"offset":127567}}}],"position":{"start":{"line":4091,"column":1,"offset":127558},"end":{"line":4091,"column":12,"offset":127569}}}],"position":{"start":{"line":4091,"column":1,"offset":127558},"end":{"line":4091,"column":12,"offset":127569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":4093,"column":1,"offset":127573},"end":{"line":4093,"column":18,"offset":127590}}}],"position":{"start":{"line":4093,"column":1,"offset":127573},"end":{"line":4093,"column":18,"offset":127590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Looked at a few puzzles related to ","position":{"start":{"line":4095,"column":5,"offset":127598},"end":{"line":4095,"column":40,"offset":127633}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4095,"column":40,"offset":127633},"end":{"line":4095,"column":44,"offset":127637}}},{"type":"text","value":", ","position":{"start":{"line":4095,"column":44,"offset":127637},"end":{"line":4095,"column":46,"offset":127639}}},{"type":"raw","value":"<code class=\"language-text\">elif</code>","position":{"start":{"line":4095,"column":46,"offset":127639},"end":{"line":4095,"column":52,"offset":127645}}},{"type":"text","value":" and ","position":{"start":{"line":4095,"column":52,"offset":127645},"end":{"line":4095,"column":57,"offset":127650}}},{"type":"raw","value":"<code class=\"language-text\">else</code>","position":{"start":{"line":4095,"column":57,"offset":127650},"end":{"line":4095,"column":63,"offset":127656}}}],"position":{"start":{"line":4095,"column":1,"offset":127594},"end":{"line":4095,"column":63,"offset":127656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Explored the importance of indentation and the different condition clauses inside an ","position":{"start":{"line":4096,"column":5,"offset":127662},"end":{"line":4096,"column":90,"offset":127747}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4096,"column":90,"offset":127747},"end":{"line":4096,"column":94,"offset":127751}}},{"type":"text","value":" statement","position":{"start":{"line":4096,"column":94,"offset":127751},"end":{"line":4096,"column":104,"offset":127761}}}],"position":{"start":{"line":4096,"column":1,"offset":127658},"end":{"line":4096,"column":104,"offset":127761}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4095,"column":1,"offset":127594},"end":{"line":4096,"column":104,"offset":127761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 01: The Python Type To Denote Text","position":{"start":{"line":4098,"column":3,"offset":127767},"end":{"line":4098,"column":42,"offset":127806}}}],"position":{"start":{"line":4098,"column":1,"offset":127765},"end":{"line":4098,"column":44,"offset":127808}}}],"position":{"start":{"line":4098,"column":1,"offset":127765},"end":{"line":4098,"column":44,"offset":127808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start looking at another important data type in Python, that's used to represent strings. Not surprisingly, it is in fact named ","position":{"start":{"line":4100,"column":1,"offset":127812},"end":{"line":4100,"column":135,"offset":127946}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4100,"column":135,"offset":127946},"end":{"line":4100,"column":140,"offset":127951}}},{"type":"text","value":"!","position":{"start":{"line":4100,"column":140,"offset":127951},"end":{"line":4100,"column":141,"offset":127952}}}],"position":{"start":{"line":4100,"column":1,"offset":127812},"end":{"line":4100,"column":141,"offset":127952}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at valid string representations.","position":{"start":{"line":4102,"column":1,"offset":127956},"end":{"line":4102,"column":44,"offset":127999}}}],"position":{"start":{"line":4102,"column":1,"offset":127956},"end":{"line":4102,"column":44,"offset":127999}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> <span class=\"token string\">'Hello World'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> 'Hello World\"\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">1</span>\n        message <span class=\"token operator\">=</span> 'Hello World\"                          <span class=\"token operator\">^</span>\n     SyntaxError<span class=\"token punctuation\">:</span> EOL <span class=\"token keyword\">while</span> scanning string literal</code></pre></div>","position":{"start":{"line":4104,"column":1,"offset":128003},"end":{"line":4111,"column":4,"offset":128259}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, you can use either ","position":{"start":{"line":4113,"column":1,"offset":128263},"end":{"line":4113,"column":31,"offset":128293}}},{"type":"text","value":"`","position":{"start":{"line":4113,"column":31,"offset":128293},"end":{"line":4113,"column":33,"offset":128295}}},{"type":"text","value":"`","position":{"start":{"line":4113,"column":33,"offset":128295},"end":{"line":4113,"column":35,"offset":128297}}},{"type":"text","value":"`","position":{"start":{"line":4113,"column":35,"offset":128297},"end":{"line":4113,"column":37,"offset":128299}}},{"type":"raw","value":"<code class=\"language-text\">or</code>","position":{"start":{"line":4113,"column":37,"offset":128299},"end":{"line":4113,"column":41,"offset":128303}}},{"type":"text","value":"\"\"","position":{"start":{"line":4113,"column":41,"offset":128303},"end":{"line":4113,"column":43,"offset":128305}}},{"type":"text","value":"`","position":{"start":{"line":4113,"column":43,"offset":128305},"end":{"line":4113,"column":45,"offset":128307}}},{"type":"text","value":" to delimit string values.","position":{"start":{"line":4113,"column":45,"offset":128307},"end":{"line":4113,"column":71,"offset":128333}}}],"position":{"start":{"line":4113,"column":1,"offset":128263},"end":{"line":4113,"column":71,"offset":128333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">type()</code>","position":{"start":{"line":4115,"column":1,"offset":128337},"end":{"line":4115,"column":9,"offset":128345}}},{"type":"text","value":" method can be used to find type of a variable.","position":{"start":{"line":4115,"column":9,"offset":128345},"end":{"line":4115,"column":56,"offset":128392}}}],"position":{"start":{"line":4115,"column":1,"offset":128337},"end":{"line":4115,"column":56,"offset":128392}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":4117,"column":1,"offset":128396},"end":{"line":4121,"column":4,"offset":128485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":4123,"column":1,"offset":128489},"end":{"line":4123,"column":5,"offset":128493}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4123,"column":5,"offset":128493},"end":{"line":4123,"column":10,"offset":128498}}},{"type":"text","value":" ","position":{"start":{"line":4123,"column":10,"offset":128498},"end":{"line":4123,"column":11,"offset":128499}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":4123,"column":11,"offset":128499},"end":{"line":4123,"column":18,"offset":128506}}},{"type":"text","value":" provides a lot of utility methods.","position":{"start":{"line":4123,"column":18,"offset":128506},"end":{"line":4123,"column":53,"offset":128541}}}],"position":{"start":{"line":4123,"column":1,"offset":128489},"end":{"line":4123,"column":53,"offset":128541}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'HELLO WORLD'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'hello world'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"hello\"</span></code></pre></div>","position":{"start":{"line":4125,"column":1,"offset":128545},"end":{"line":4131,"column":4,"offset":128674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">message.capitalize()</code>","position":{"start":{"line":4133,"column":1,"offset":128678},"end":{"line":4133,"column":23,"offset":128700}}},{"type":"text","value":" does init caps. Only first character is changed to uppercase.","position":{"start":{"line":4133,"column":23,"offset":128700},"end":{"line":4133,"column":85,"offset":128762}}}],"position":{"start":{"line":4133,"column":1,"offset":128678},"end":{"line":4133,"column":85,"offset":128762}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">.</span>capitalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'Hello'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">.</span>capitalize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'Hello'</span></code></pre></div>","position":{"start":{"line":4135,"column":1,"offset":128766},"end":{"line":4140,"column":4,"offset":128866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also run this directly - ","position":{"start":{"line":4142,"column":1,"offset":128870},"end":{"line":4142,"column":34,"offset":128903}}},{"type":"raw","value":"<code class=\"language-text\">'hello'.capitalize()</code>","position":{"start":{"line":4142,"column":34,"offset":128903},"end":{"line":4142,"column":56,"offset":128925}}},{"type":"text","value":". Isn't that cool!","position":{"start":{"line":4142,"column":56,"offset":128925},"end":{"line":4142,"column":74,"offset":128943}}}],"position":{"start":{"line":4142,"column":1,"offset":128870},"end":{"line":4142,"column":74,"offset":128943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"That's because each piece of text in python is an object of the ","position":{"start":{"line":4144,"column":1,"offset":128947},"end":{"line":4144,"column":65,"offset":129011}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4144,"column":65,"offset":129011},"end":{"line":4144,"column":70,"offset":129016}}},{"type":"text","value":" ","position":{"start":{"line":4144,"column":70,"offset":129016},"end":{"line":4144,"column":71,"offset":129017}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":4144,"column":71,"offset":129017},"end":{"line":4144,"column":78,"offset":129024}}},{"type":"text","value":", and we can directly call methods of that ","position":{"start":{"line":4144,"column":78,"offset":129024},"end":{"line":4144,"column":121,"offset":129067}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":4144,"column":121,"offset":129067},"end":{"line":4144,"column":128,"offset":129074}}},{"type":"text","value":" on ","position":{"start":{"line":4144,"column":128,"offset":129074},"end":{"line":4144,"column":132,"offset":129078}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4144,"column":132,"offset":129078},"end":{"line":4144,"column":137,"offset":129083}}},{"type":"text","value":" objects.","position":{"start":{"line":4144,"column":137,"offset":129083},"end":{"line":4144,"column":146,"offset":129092}}}],"position":{"start":{"line":4144,"column":1,"offset":128947},"end":{"line":4144,"column":146,"offset":129092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let's shift our attention to methods, which gives us more information about the specific contents of a string.","position":{"start":{"line":4146,"column":1,"offset":129096},"end":{"line":4146,"column":115,"offset":129210}}}],"position":{"start":{"line":4146,"column":1,"offset":129096},"end":{"line":4146,"column":115,"offset":129210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We want to find out if this string contains numeric values?","position":{"start":{"line":4148,"column":5,"offset":129218},"end":{"line":4148,"column":64,"offset":129277}}}],"position":{"start":{"line":4148,"column":1,"offset":129214},"end":{"line":4148,"column":64,"offset":129277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Does it contain alphabets only?","position":{"start":{"line":4149,"column":5,"offset":129283},"end":{"line":4149,"column":36,"offset":129314}}}],"position":{"start":{"line":4149,"column":1,"offset":129279},"end":{"line":4149,"column":36,"offset":129314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Does it contain alpha-numeric values?","position":{"start":{"line":4150,"column":5,"offset":129320},"end":{"line":4150,"column":42,"offset":129357}}}],"position":{"start":{"line":4150,"column":1,"offset":129316},"end":{"line":4150,"column":42,"offset":129357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Is it lowercase?","position":{"start":{"line":4151,"column":5,"offset":129363},"end":{"line":4151,"column":21,"offset":129379}}}],"position":{"start":{"line":4151,"column":1,"offset":129359},"end":{"line":4151,"column":21,"offset":129379}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Is it uppercase?","position":{"start":{"line":4152,"column":5,"offset":129385},"end":{"line":4152,"column":21,"offset":129401}}}],"position":{"start":{"line":4152,"column":1,"offset":129381},"end":{"line":4152,"column":21,"offset":129401}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4148,"column":1,"offset":129214},"end":{"line":4152,"column":21,"offset":129401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To find if a piece of text contains only lower case alphabets.","position":{"start":{"line":4154,"column":1,"offset":129405},"end":{"line":4154,"column":63,"offset":129467}}}],"position":{"start":{"line":4154,"column":1,"offset":129405},"end":{"line":4154,"column":63,"offset":129467}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":4156,"column":1,"offset":129471},"end":{"line":4161,"column":4,"offset":129560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If the first letter is in uppercase, then ","position":{"start":{"line":4163,"column":1,"offset":129564},"end":{"line":4163,"column":43,"offset":129606}}},{"type":"raw","value":"<code class=\"language-text\">istitle()</code>","position":{"start":{"line":4163,"column":43,"offset":129606},"end":{"line":4163,"column":54,"offset":129617}}},{"type":"text","value":" will return a ","position":{"start":{"line":4163,"column":54,"offset":129617},"end":{"line":4163,"column":69,"offset":129632}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":4163,"column":69,"offset":129632},"end":{"line":4163,"column":75,"offset":129638}}},{"type":"text","value":" value.","position":{"start":{"line":4163,"column":75,"offset":129638},"end":{"line":4163,"column":82,"offset":129645}}}],"position":{"start":{"line":4163,"column":1,"offset":129564},"end":{"line":4163,"column":82,"offset":129645}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>istitle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">.</span>istitle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":4165,"column":1,"offset":129649},"end":{"line":4170,"column":4,"offset":129738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To find if a piece of text contains only upper case alphabets.","position":{"start":{"line":4172,"column":1,"offset":129742},"end":{"line":4172,"column":63,"offset":129804}}}],"position":{"start":{"line":4172,"column":1,"offset":129742},"end":{"line":4172,"column":63,"offset":129804}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello'</span><span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'HELLO'</span><span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4174,"column":1,"offset":129808},"end":{"line":4181,"column":4,"offset":129935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">isdigit()</code>","position":{"start":{"line":4183,"column":1,"offset":129939},"end":{"line":4183,"column":12,"offset":129950}}},{"type":"text","value":" checks if a string is a numeric value.","position":{"start":{"line":4183,"column":12,"offset":129950},"end":{"line":4183,"column":51,"offset":129989}}}],"position":{"start":{"line":4183,"column":1,"offset":129939},"end":{"line":4183,"column":51,"offset":129989}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'A23'</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'2 3'</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'23'</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4185,"column":1,"offset":129993},"end":{"line":4194,"column":4,"offset":130148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">isalpha()</code>","position":{"start":{"line":4196,"column":1,"offset":130152},"end":{"line":4196,"column":12,"offset":130163}}},{"type":"text","value":" checks if a string only contains alphabets.","position":{"start":{"line":4196,"column":12,"offset":130163},"end":{"line":4196,"column":56,"offset":130207}}}],"position":{"start":{"line":4196,"column":1,"offset":130152},"end":{"line":4196,"column":56,"offset":130207}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'23'</span><span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'2A'</span><span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'ABC'</span><span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4198,"column":1,"offset":130211},"end":{"line":4205,"column":4,"offset":130330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">isalnum()</code>","position":{"start":{"line":4207,"column":1,"offset":130334},"end":{"line":4207,"column":12,"offset":130345}}},{"type":"text","value":" checks if a string only contains alphabets and/or numerals.","position":{"start":{"line":4207,"column":12,"offset":130345},"end":{"line":4207,"column":72,"offset":130405}}}],"position":{"start":{"line":4207,"column":1,"offset":130334},"end":{"line":4207,"column":72,"offset":130405}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'ABC123'</span><span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'ABC 123'</span><span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":4209,"column":1,"offset":130409},"end":{"line":4214,"column":4,"offset":130501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lastly, we look at things which you can use, to check characters of a string.","position":{"start":{"line":4216,"column":1,"offset":130505},"end":{"line":4216,"column":78,"offset":130582}}}],"position":{"start":{"line":4216,"column":1,"offset":130505},"end":{"line":4216,"column":78,"offset":130582}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">endswith</code>","position":{"start":{"line":4218,"column":1,"offset":130586},"end":{"line":4218,"column":11,"offset":130596}}},{"type":"text","value":" is self explanatory.","position":{"start":{"line":4218,"column":11,"offset":130596},"end":{"line":4218,"column":32,"offset":130617}}}],"position":{"start":{"line":4218,"column":1,"offset":130586},"end":{"line":4218,"column":32,"offset":130617}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'World'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'ld'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'old'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span><span class=\"token string\">'Wo'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":4220,"column":1,"offset":130621},"end":{"line":4229,"column":4,"offset":130833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">startswith</code>","position":{"start":{"line":4231,"column":1,"offset":130837},"end":{"line":4231,"column":13,"offset":130849}}},{"type":"text","value":" is self explanatory as well.","position":{"start":{"line":4231,"column":13,"offset":130849},"end":{"line":4231,"column":42,"offset":130878}}}],"position":{"start":{"line":4231,"column":1,"offset":130837},"end":{"line":4231,"column":42,"offset":130878}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'Wo'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'He'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'Hell0'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4233,"column":1,"offset":130882},"end":{"line":4242,"column":4,"offset":131104}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">find</code>","position":{"start":{"line":4244,"column":1,"offset":131108},"end":{"line":4244,"column":7,"offset":131114}}},{"type":"text","value":" method returns if a piece of text is present in another string. Returns the first match index.","position":{"start":{"line":4244,"column":7,"offset":131114},"end":{"line":4244,"column":102,"offset":131209}}}],"position":{"start":{"line":4244,"column":1,"offset":131108},"end":{"line":4244,"column":102,"offset":131209}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'ello'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":4246,"column":1,"offset":131213},"end":{"line":4251,"column":4,"offset":131314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A value of ","position":{"start":{"line":4253,"column":1,"offset":131318},"end":{"line":4253,"column":12,"offset":131329}}},{"type":"raw","value":"<code class=\"language-text\">-1</code>","position":{"start":{"line":4253,"column":12,"offset":131329},"end":{"line":4253,"column":16,"offset":131333}}},{"type":"text","value":" is returned, if you're searching for something which is not present in the string.","position":{"start":{"line":4253,"column":16,"offset":131333},"end":{"line":4253,"column":99,"offset":131416}}}],"position":{"start":{"line":4253,"column":1,"offset":131318},"end":{"line":4253,"column":99,"offset":131416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you are searching for ","position":{"start":{"line":4255,"column":1,"offset":131420},"end":{"line":4255,"column":26,"offset":131445}}},{"type":"raw","value":"<code class=\"language-text\">'Ello'</code>","position":{"start":{"line":4255,"column":26,"offset":131445},"end":{"line":4255,"column":34,"offset":131453}}},{"type":"text","value":" with a capital ","position":{"start":{"line":4255,"column":34,"offset":131453},"end":{"line":4255,"column":50,"offset":131469}}},{"type":"raw","value":"<code class=\"language-text\">'E'</code>","position":{"start":{"line":4255,"column":50,"offset":131469},"end":{"line":4255,"column":55,"offset":131474}}},{"type":"text","value":" ,you'll not be able to find it. Search is case sensitive.","position":{"start":{"line":4255,"column":55,"offset":131474},"end":{"line":4255,"column":113,"offset":131532}}}],"position":{"start":{"line":4255,"column":1,"offset":131420},"end":{"line":4255,"column":113,"offset":131532}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'Ello'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'bello'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span><span class=\"token string\">'Ello'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":4257,"column":1,"offset":131536},"end":{"line":4264,"column":4,"offset":131683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 02: Type Conversion Puzzles","position":{"start":{"line":4266,"column":3,"offset":131689},"end":{"line":4266,"column":35,"offset":131721}}}],"position":{"start":{"line":4266,"column":1,"offset":131687},"end":{"line":4266,"column":37,"offset":131723}}}],"position":{"start":{"line":4266,"column":1,"offset":131687},"end":{"line":4266,"column":37,"offset":131723}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We'll now try and convert values from one type to another, and try and play around with them.","position":{"start":{"line":4268,"column":1,"offset":131727},"end":{"line":4268,"column":94,"offset":131820}}}],"position":{"start":{"line":4268,"column":1,"offset":131727},"end":{"line":4268,"column":94,"offset":131820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4270,"column":1,"offset":131824},"end":{"line":4270,"column":6,"offset":131829}}},{"type":"text","value":" converts boolean value to a text value.","position":{"start":{"line":4270,"column":6,"offset":131829},"end":{"line":4270,"column":46,"offset":131869}}}],"position":{"start":{"line":4270,"column":1,"offset":131824},"end":{"line":4270,"column":46,"offset":131869}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'True'</span></code></pre></div>","position":{"start":{"line":4272,"column":1,"offset":131873},"end":{"line":4275,"column":4,"offset":131918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All text value except for empty string represent True. So, ","position":{"start":{"line":4277,"column":1,"offset":131922},"end":{"line":4277,"column":60,"offset":131981}}},{"type":"raw","value":"<code class=\"language-text\">bool</code>","position":{"start":{"line":4277,"column":60,"offset":131981},"end":{"line":4277,"column":66,"offset":131987}}},{"type":"text","value":" returns True for everything except empty string.","position":{"start":{"line":4277,"column":66,"offset":131987},"end":{"line":4277,"column":115,"offset":132036}}}],"position":{"start":{"line":4277,"column":1,"offset":131922},"end":{"line":4277,"column":115,"offset":132036}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">'True'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">'true'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tru'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">'false'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">'False'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":4279,"column":1,"offset":132040},"end":{"line":4292,"column":4,"offset":132244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try and convert a few integer values to strings.","position":{"start":{"line":4294,"column":1,"offset":132248},"end":{"line":4294,"column":55,"offset":132302}}}],"position":{"start":{"line":4294,"column":1,"offset":132248},"end":{"line":4294,"column":55,"offset":132302}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'123'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">12345</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'12345'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token number\">12345.45678</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'12345.45678'</span></code></pre></div>","position":{"start":{"line":4296,"column":1,"offset":132306},"end":{"line":4303,"column":4,"offset":132426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's do the reverse.","position":{"start":{"line":4305,"column":1,"offset":132430},"end":{"line":4305,"column":22,"offset":132451}}}],"position":{"start":{"line":4305,"column":1,"offset":132430},"end":{"line":4305,"column":22,"offset":132451}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'45'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">45</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'45.56'</span><span class=\"token punctuation\">)</span>\n    ValueError<span class=\"token punctuation\">:</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":4307,"column":1,"offset":132455},"end":{"line":4312,"column":4,"offset":132561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if we do ","position":{"start":{"line":4314,"column":1,"offset":132565},"end":{"line":4314,"column":10,"offset":132574}}},{"type":"raw","value":"<code class=\"language-text\">int('45.56')</code>","position":{"start":{"line":4314,"column":10,"offset":132574},"end":{"line":4314,"column":24,"offset":132588}}},{"type":"text","value":", you can see that it throws an error. It says \"I cannot convert this to an ","position":{"start":{"line":4314,"column":24,"offset":132588},"end":{"line":4314,"column":100,"offset":132664}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":4314,"column":100,"offset":132664},"end":{"line":4314,"column":105,"offset":132669}}},{"type":"text","value":", as ","position":{"start":{"line":4314,"column":105,"offset":132669},"end":{"line":4314,"column":110,"offset":132674}}},{"type":"raw","value":"<code class=\"language-text\">45.56</code>","position":{"start":{"line":4314,"column":110,"offset":132674},"end":{"line":4314,"column":117,"offset":132681}}},{"type":"text","value":" is an invalid integer\".","position":{"start":{"line":4314,"column":117,"offset":132681},"end":{"line":4314,"column":141,"offset":132705}}}],"position":{"start":{"line":4314,"column":1,"offset":132565},"end":{"line":4314,"column":141,"offset":132705}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also pass an additional parameter to ","position":{"start":{"line":4316,"column":1,"offset":132709},"end":{"line":4316,"column":46,"offset":132754}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":4316,"column":46,"offset":132754},"end":{"line":4316,"column":51,"offset":132759}}},{"type":"text","value":" indicating the numeric system - 16 for Hexa decimal, 8 for Octal etc. Default is 10 - Decimal.","position":{"start":{"line":4316,"column":51,"offset":132759},"end":{"line":4316,"column":146,"offset":132854}}}],"position":{"start":{"line":4316,"column":1,"offset":132709},"end":{"line":4316,"column":146,"offset":132854}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'45abc'</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">285372</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">10</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">11</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">12</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">15</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n    ValueError<span class=\"token punctuation\">:</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">16</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'g'</span></code></pre></div>","position":{"start":{"line":4318,"column":1,"offset":132858},"end":{"line":4331,"column":4,"offset":133107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also convert string to float.","position":{"start":{"line":4333,"column":1,"offset":133111},"end":{"line":4333,"column":38,"offset":133148}}}],"position":{"start":{"line":4333,"column":1,"offset":133111},"end":{"line":4333,"column":38,"offset":133148}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"34.43\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token number\">34.43</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"34.43rer\"</span><span class=\"token punctuation\">)</span>\n    ValueError<span class=\"token punctuation\">:</span> could <span class=\"token keyword\">not</span> convert string to <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'34.43rer'</span></code></pre></div>","position":{"start":{"line":4335,"column":1,"offset":133152},"end":{"line":4340,"column":4,"offset":133291}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":4342,"column":3,"offset":133297},"end":{"line":4342,"column":10,"offset":133304}}}],"position":{"start":{"line":4342,"column":1,"offset":133295},"end":{"line":4342,"column":12,"offset":133306}}}],"position":{"start":{"line":4342,"column":1,"offset":133295},"end":{"line":4342,"column":12,"offset":133306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this quick step, we looked at converting different types to strings, and converting strings to different types. So we looked at ","position":{"start":{"line":4344,"column":1,"offset":133310},"end":{"line":4344,"column":132,"offset":133441}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":4344,"column":132,"offset":133441},"end":{"line":4344,"column":137,"offset":133446}}},{"type":"text","value":", ","position":{"start":{"line":4344,"column":137,"offset":133446},"end":{"line":4344,"column":139,"offset":133448}}},{"type":"raw","value":"<code class=\"language-text\">bool</code>","position":{"start":{"line":4344,"column":139,"offset":133448},"end":{"line":4344,"column":145,"offset":133454}}},{"type":"text","value":" and ","position":{"start":{"line":4344,"column":145,"offset":133454},"end":{"line":4344,"column":150,"offset":133459}}},{"type":"raw","value":"<code class=\"language-text\">float</code>","position":{"start":{"line":4344,"column":150,"offset":133459},"end":{"line":4344,"column":157,"offset":133466}}},{"type":"text","value":" values, and we looked at how to convert them to string, and how to convert strings back to these specific types.","position":{"start":{"line":4344,"column":157,"offset":133466},"end":{"line":4344,"column":270,"offset":133579}}}],"position":{"start":{"line":4344,"column":1,"offset":133310},"end":{"line":4344,"column":270,"offset":133579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 02: Strings Are Immutable","position":{"start":{"line":4346,"column":3,"offset":133585},"end":{"line":4346,"column":33,"offset":133615}}}],"position":{"start":{"line":4346,"column":1,"offset":133583},"end":{"line":4346,"column":35,"offset":133617}}}],"position":{"start":{"line":4346,"column":1,"offset":133583},"end":{"line":4346,"column":35,"offset":133617}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, let's learn an important fact about strings in Python.","position":{"start":{"line":4348,"column":1,"offset":133621},"end":{"line":4348,"column":69,"offset":133689}}}],"position":{"start":{"line":4348,"column":1,"offset":133621},"end":{"line":4348,"column":69,"offset":133689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"String values are immutable.","position":{"start":{"line":4350,"column":1,"offset":133693},"end":{"line":4350,"column":29,"offset":133721}}}],"position":{"start":{"line":4350,"column":1,"offset":133693},"end":{"line":4350,"column":29,"offset":133721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What does immutability mean, and why do we say strings are immutable?","position":{"start":{"line":4352,"column":1,"offset":133725},"end":{"line":4352,"column":70,"offset":133794}}}],"position":{"start":{"line":4352,"column":1,"offset":133725},"end":{"line":4352,"column":70,"offset":133794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's create a very simple string: ","position":{"start":{"line":4354,"column":1,"offset":133798},"end":{"line":4354,"column":36,"offset":133833}}},{"type":"raw","value":"<code class=\"language-text\">message = 'Hello'</code>","position":{"start":{"line":4354,"column":36,"offset":133833},"end":{"line":4354,"column":55,"offset":133852}}},{"type":"text","value":", and we're saying ","position":{"start":{"line":4354,"column":55,"offset":133852},"end":{"line":4354,"column":74,"offset":133871}}},{"type":"raw","value":"<code class=\"language-text\">message.upper()</code>","position":{"start":{"line":4354,"column":74,"offset":133871},"end":{"line":4354,"column":91,"offset":133888}}},{"type":"text","value":". But what does it do? It prints ","position":{"start":{"line":4354,"column":91,"offset":133888},"end":{"line":4354,"column":124,"offset":133921}}},{"type":"raw","value":"<code class=\"language-text\">'HELLO'</code>","position":{"start":{"line":4354,"column":124,"offset":133921},"end":{"line":4354,"column":133,"offset":133930}}},{"type":"text","value":", with all characters in uppercase. Well, what would happen if you do ","position":{"start":{"line":4354,"column":133,"offset":133930},"end":{"line":4354,"column":203,"offset":134000}}},{"type":"raw","value":"<code class=\"language-text\">print(message)</code>","position":{"start":{"line":4354,"column":203,"offset":134000},"end":{"line":4354,"column":219,"offset":134016}}},{"type":"text","value":"? It says ","position":{"start":{"line":4354,"column":219,"offset":134016},"end":{"line":4354,"column":229,"offset":134026}}},{"type":"raw","value":"<code class=\"language-text\">'Hello'</code>","position":{"start":{"line":4354,"column":229,"offset":134026},"end":{"line":4354,"column":238,"offset":134035}}},{"type":"text","value":".","position":{"start":{"line":4354,"column":238,"offset":134035},"end":{"line":4354,"column":239,"offset":134036}}}],"position":{"start":{"line":4354,"column":1,"offset":133798},"end":{"line":4354,"column":239,"offset":134036}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token string\">'HELLO'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message\n    <span class=\"token string\">'Hello'</span></code></pre></div>","position":{"start":{"line":4356,"column":1,"offset":134040},"end":{"line":4362,"column":4,"offset":134149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You would see we tried change the content of message, but it has not changed.","position":{"start":{"line":4364,"column":1,"offset":134153},"end":{"line":4364,"column":78,"offset":134230}}}],"position":{"start":{"line":4364,"column":1,"offset":134153},"end":{"line":4364,"column":78,"offset":134230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we execute ","position":{"start":{"line":4366,"column":1,"offset":134234},"end":{"line":4366,"column":17,"offset":134250}}},{"type":"raw","value":"<code class=\"language-text\">message.upper()</code>","position":{"start":{"line":4366,"column":17,"offset":134250},"end":{"line":4366,"column":34,"offset":134267}}},{"type":"text","value":", a new string is created, and it is returned back. Original string remained unchanged. This is called immutability.","position":{"start":{"line":4366,"column":34,"offset":134267},"end":{"line":4366,"column":150,"offset":134383}}}],"position":{"start":{"line":4366,"column":1,"offset":134234},"end":{"line":4366,"column":150,"offset":134383}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Once you define a string in Python, you'll not be able to change the value of it.","position":{"start":{"line":4368,"column":1,"offset":134387},"end":{"line":4368,"column":82,"offset":134468}}}],"position":{"start":{"line":4368,"column":1,"offset":134387},"end":{"line":4368,"column":82,"offset":134468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can use - \"OK. I can do something of this kind: ","position":{"start":{"line":4370,"column":1,"offset":134472},"end":{"line":4370,"column":53,"offset":134524}}},{"type":"raw","value":"<code class=\"language-text\">message = message.upper()</code>","position":{"start":{"line":4370,"column":53,"offset":134524},"end":{"line":4370,"column":80,"offset":134551}}},{"type":"text","value":"\".","position":{"start":{"line":4370,"column":80,"offset":134551},"end":{"line":4370,"column":82,"offset":134553}}}],"position":{"start":{"line":4370,"column":1,"offset":134472},"end":{"line":4370,"column":82,"offset":134553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What would happen now?","position":{"start":{"line":4372,"column":1,"offset":134557},"end":{"line":4372,"column":23,"offset":134579}}}],"position":{"start":{"line":4372,"column":1,"offset":134557},"end":{"line":4372,"column":23,"offset":134579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Will the value of ","position":{"start":{"line":4374,"column":1,"offset":134583},"end":{"line":4374,"column":19,"offset":134601}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4374,"column":19,"offset":134601},"end":{"line":4374,"column":28,"offset":134610}}},{"type":"text","value":" get changed? It prints ","position":{"start":{"line":4374,"column":28,"offset":134610},"end":{"line":4374,"column":52,"offset":134634}}},{"type":"raw","value":"<code class=\"language-text\">'HELLO'</code>","position":{"start":{"line":4374,"column":52,"offset":134634},"end":{"line":4374,"column":61,"offset":134643}}},{"type":"text","value":", with all caps.","position":{"start":{"line":4374,"column":61,"offset":134643},"end":{"line":4374,"column":77,"offset":134659}}}],"position":{"start":{"line":4374,"column":1,"offset":134583},"end":{"line":4374,"column":77,"offset":134659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Did the value of ","position":{"start":{"line":4376,"column":1,"offset":134663},"end":{"line":4376,"column":18,"offset":134680}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4376,"column":18,"offset":134680},"end":{"line":4376,"column":27,"offset":134689}}},{"type":"text","value":" change? Does this prove that strings are mutable?","position":{"start":{"line":4376,"column":27,"offset":134689},"end":{"line":4376,"column":77,"offset":134739}}}],"position":{"start":{"line":4376,"column":1,"offset":134663},"end":{"line":4376,"column":77,"offset":134739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The important thing you need to understand about all this stuff, is how objects are stored inside Python.","position":{"start":{"line":4378,"column":1,"offset":134743},"end":{"line":4378,"column":106,"offset":134848}}}],"position":{"start":{"line":4378,"column":1,"offset":134743},"end":{"line":4378,"column":106,"offset":134848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are things called variables, and there are things called objects.","position":{"start":{"line":4380,"column":1,"offset":134852},"end":{"line":4380,"column":72,"offset":134923}}}],"position":{"start":{"line":4380,"column":1,"offset":134852},"end":{"line":4380,"column":72,"offset":134923}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we run ","position":{"start":{"line":4382,"column":1,"offset":134927},"end":{"line":4382,"column":13,"offset":134939}}},{"type":"raw","value":"<code class=\"language-text\">message = 'Hello'</code>","position":{"start":{"line":4382,"column":13,"offset":134939},"end":{"line":4382,"column":32,"offset":134958}}}],"position":{"start":{"line":4382,"column":1,"offset":134927},"end":{"line":4382,"column":32,"offset":134958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We are creating one object of ","position":{"start":{"line":4384,"column":5,"offset":134966},"end":{"line":4384,"column":35,"offset":134996}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4384,"column":35,"offset":134996},"end":{"line":4384,"column":40,"offset":135001}}},{"type":"text","value":" class with a values ","position":{"start":{"line":4384,"column":40,"offset":135001},"end":{"line":4384,"column":61,"offset":135022}}},{"type":"raw","value":"<code class=\"language-text\">'Hello'</code>","position":{"start":{"line":4384,"column":61,"offset":135022},"end":{"line":4384,"column":70,"offset":135031}}},{"type":"text","value":".","position":{"start":{"line":4384,"column":70,"offset":135031},"end":{"line":4384,"column":71,"offset":135032}}}],"position":{"start":{"line":4384,"column":1,"offset":134962},"end":{"line":4384,"column":71,"offset":135032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We are creating one variable called ","position":{"start":{"line":4385,"column":5,"offset":135038},"end":{"line":4385,"column":41,"offset":135074}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4385,"column":41,"offset":135074},"end":{"line":4385,"column":50,"offset":135083}}}],"position":{"start":{"line":4385,"column":1,"offset":135034},"end":{"line":4385,"column":50,"offset":135083}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The location of ","position":{"start":{"line":4386,"column":5,"offset":135089},"end":{"line":4386,"column":21,"offset":135105}}},{"type":"raw","value":"<code class=\"language-text\">'Hello'</code>","position":{"start":{"line":4386,"column":21,"offset":135105},"end":{"line":4386,"column":30,"offset":135114}}},{"type":"text","value":" is stored into ","position":{"start":{"line":4386,"column":30,"offset":135114},"end":{"line":4386,"column":46,"offset":135130}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4386,"column":46,"offset":135130},"end":{"line":4386,"column":55,"offset":135139}}}],"position":{"start":{"line":4386,"column":1,"offset":135085},"end":{"line":4386,"column":55,"offset":135139}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4384,"column":1,"offset":134962},"end":{"line":4386,"column":55,"offset":135139}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, your variables are nothing but a name.","position":{"start":{"line":4388,"column":1,"offset":135143},"end":{"line":4388,"column":50,"offset":135192}}}],"position":{"start":{"line":4388,"column":1,"offset":135143},"end":{"line":4388,"column":50,"offset":135192}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If location of ","position":{"start":{"line":4390,"column":1,"offset":135196},"end":{"line":4390,"column":16,"offset":135211}}},{"type":"raw","value":"<code class=\"language-text\">'Hello'</code>","position":{"start":{"line":4390,"column":16,"offset":135211},"end":{"line":4390,"column":25,"offset":135220}}},{"type":"text","value":" in memory is ","position":{"start":{"line":4390,"column":25,"offset":135220},"end":{"line":4390,"column":39,"offset":135234}}},{"type":"raw","value":"<code class=\"language-text\">A</code>","position":{"start":{"line":4390,"column":39,"offset":135234},"end":{"line":4390,"column":42,"offset":135237}}},{"type":"text","value":", then the value stored in ","position":{"start":{"line":4390,"column":42,"offset":135237},"end":{"line":4390,"column":69,"offset":135264}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4390,"column":69,"offset":135264},"end":{"line":4390,"column":78,"offset":135273}}},{"type":"text","value":" is ","position":{"start":{"line":4390,"column":78,"offset":135273},"end":{"line":4390,"column":82,"offset":135277}}},{"type":"raw","value":"<code class=\"language-text\">A</code>","position":{"start":{"line":4390,"column":82,"offset":135277},"end":{"line":4390,"column":85,"offset":135280}}},{"type":"text","value":". ","position":{"start":{"line":4390,"column":85,"offset":135280},"end":{"line":4390,"column":87,"offset":135282}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4390,"column":87,"offset":135282},"end":{"line":4390,"column":96,"offset":135291}}},{"type":"text","value":" is called a reference.","position":{"start":{"line":4390,"column":96,"offset":135291},"end":{"line":4390,"column":119,"offset":135314}}}],"position":{"start":{"line":4390,"column":1,"offset":135196},"end":{"line":4390,"column":119,"offset":135314}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What happens with ","position":{"start":{"line":4392,"column":1,"offset":135318},"end":{"line":4392,"column":19,"offset":135336}}},{"type":"raw","value":"<code class=\"language-text\">message = message.upper()</code>","position":{"start":{"line":4392,"column":19,"offset":135336},"end":{"line":4392,"column":46,"offset":135363}}},{"type":"text","value":"?","position":{"start":{"line":4392,"column":46,"offset":135363},"end":{"line":4392,"column":47,"offset":135364}}}],"position":{"start":{"line":4392,"column":1,"offset":135318},"end":{"line":4392,"column":47,"offset":135364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A new object is created with value ","position":{"start":{"line":4394,"column":1,"offset":135368},"end":{"line":4394,"column":36,"offset":135403}}},{"type":"raw","value":"<code class=\"language-text\">'HELLO'</code>","position":{"start":{"line":4394,"column":36,"offset":135403},"end":{"line":4394,"column":45,"offset":135412}}},{"type":"text","value":" at a different location ","position":{"start":{"line":4394,"column":45,"offset":135412},"end":{"line":4394,"column":70,"offset":135437}}},{"type":"raw","value":"<code class=\"language-text\">B</code>","position":{"start":{"line":4394,"column":70,"offset":135437},"end":{"line":4394,"column":73,"offset":135440}}},{"type":"text","value":".","position":{"start":{"line":4394,"column":73,"offset":135440},"end":{"line":4394,"column":74,"offset":135441}}}],"position":{"start":{"line":4394,"column":1,"offset":135368},"end":{"line":4394,"column":74,"offset":135441}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A reference ot location ","position":{"start":{"line":4396,"column":1,"offset":135445},"end":{"line":4396,"column":25,"offset":135469}}},{"type":"raw","value":"<code class=\"language-text\">B</code>","position":{"start":{"line":4396,"column":25,"offset":135469},"end":{"line":4396,"column":28,"offset":135472}}},{"type":"text","value":" is stored into ","position":{"start":{"line":4396,"column":28,"offset":135472},"end":{"line":4396,"column":44,"offset":135488}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4396,"column":44,"offset":135488},"end":{"line":4396,"column":53,"offset":135497}}},{"type":"text","value":" variable.","position":{"start":{"line":4396,"column":53,"offset":135497},"end":{"line":4396,"column":63,"offset":135507}}}],"position":{"start":{"line":4396,"column":1,"offset":135445},"end":{"line":4396,"column":63,"offset":135507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Summary : The original value at location ","position":{"start":{"line":4398,"column":1,"offset":135511},"end":{"line":4398,"column":42,"offset":135552}}},{"type":"raw","value":"<code class=\"language-text\">A</code>","position":{"start":{"line":4398,"column":42,"offset":135552},"end":{"line":4398,"column":45,"offset":135555}}},{"type":"text","value":" has not changed and cannot be changed for ","position":{"start":{"line":4398,"column":45,"offset":135555},"end":{"line":4398,"column":88,"offset":135598}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4398,"column":88,"offset":135598},"end":{"line":4398,"column":93,"offset":135603}}},{"type":"text","value":" variables. Hence 'str' objects are immutable.","position":{"start":{"line":4398,"column":93,"offset":135603},"end":{"line":4398,"column":139,"offset":135649}}}],"position":{"start":{"line":4398,"column":1,"offset":135511},"end":{"line":4398,"column":139,"offset":135649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Variables are just names referring to a location. They don't really contain the value. Variables contain a reference to the location that contains the object.","position":{"start":{"line":4400,"column":1,"offset":135653},"end":{"line":4400,"column":159,"offset":135811}}}],"position":{"start":{"line":4400,"column":1,"offset":135653},"end":{"line":4400,"column":159,"offset":135811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 03: Python Has No Separate Character Type","position":{"start":{"line":4402,"column":3,"offset":135817},"end":{"line":4402,"column":49,"offset":135863}}}],"position":{"start":{"line":4402,"column":1,"offset":135815},"end":{"line":4402,"column":51,"offset":135865}}}],"position":{"start":{"line":4402,"column":1,"offset":135815},"end":{"line":4402,"column":51,"offset":135865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the things that surprises people new to Python, is that there is no character data type in Python.","position":{"start":{"line":4404,"column":1,"offset":135869},"end":{"line":4404,"column":106,"offset":135974}}}],"position":{"start":{"line":4404,"column":1,"offset":135869},"end":{"line":4404,"column":106,"offset":135974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Typically we have text data types in all the languages, don't we? ","position":{"start":{"line":4406,"column":1,"offset":135978},"end":{"line":4406,"column":67,"offset":136044}}},{"type":"raw","value":"<code class=\"language-text\">'Hello World'</code>","position":{"start":{"line":4406,"column":67,"offset":136044},"end":{"line":4406,"column":82,"offset":136059}}},{"type":"text","value":" for example, is text data, and we stored it in ","position":{"start":{"line":4406,"column":82,"offset":136059},"end":{"line":4406,"column":130,"offset":136107}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4406,"column":130,"offset":136107},"end":{"line":4406,"column":139,"offset":136116}}},{"type":"text","value":". This is called a string.","position":{"start":{"line":4406,"column":139,"offset":136116},"end":{"line":4406,"column":165,"offset":136142}}}],"position":{"start":{"line":4406,"column":1,"offset":135978},"end":{"line":4406,"column":165,"offset":136142}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In other languages, you would have something to represent a single character symbol. For example in Java, you can have a ","position":{"start":{"line":4408,"column":1,"offset":136146},"end":{"line":4408,"column":122,"offset":136267}}},{"type":"raw","value":"<code class=\"language-text\">char</code>","position":{"start":{"line":4408,"column":122,"offset":136267},"end":{"line":4408,"column":128,"offset":136273}}},{"type":"text","value":" data type, to store a single character ","position":{"start":{"line":4408,"column":128,"offset":136273},"end":{"line":4408,"column":168,"offset":136313}}},{"type":"raw","value":"<code class=\"language-text\">ch</code>","position":{"start":{"line":4408,"column":168,"offset":136313},"end":{"line":4408,"column":172,"offset":136317}}},{"type":"text","value":", in which ","position":{"start":{"line":4408,"column":172,"offset":136317},"end":{"line":4408,"column":183,"offset":136328}}},{"type":"raw","value":"<code class=\"language-text\">'h'</code>","position":{"start":{"line":4408,"column":183,"offset":136328},"end":{"line":4408,"column":188,"offset":136333}}},{"type":"text","value":" is one character. But in Python, there is no separate data type to store single characters.","position":{"start":{"line":4408,"column":188,"offset":136333},"end":{"line":4408,"column":280,"offset":136425}}}],"position":{"start":{"line":4408,"column":1,"offset":136146},"end":{"line":4408,"column":280,"offset":136425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, let's see how Python treats the first character of the following string ","position":{"start":{"line":4410,"column":1,"offset":136429},"end":{"line":4410,"column":86,"offset":136514}}},{"type":"raw","value":"<code class=\"language-text\">message</code>","position":{"start":{"line":4410,"column":86,"offset":136514},"end":{"line":4410,"column":95,"offset":136523}}},{"type":"text","value":". The way you can access the first character of a string is by saying ","position":{"start":{"line":4410,"column":95,"offset":136523},"end":{"line":4410,"column":165,"offset":136593}}},{"type":"raw","value":"<code class=\"language-text\">message[0]</code>","position":{"start":{"line":4410,"column":165,"offset":136593},"end":{"line":4410,"column":177,"offset":136605}}},{"type":"text","value":".","position":{"start":{"line":4410,"column":177,"offset":136605},"end":{"line":4410,"column":178,"offset":136606}}}],"position":{"start":{"line":4410,"column":1,"offset":136429},"end":{"line":4410,"column":178,"offset":136606}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token string\">'H'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":4412,"column":1,"offset":136610},"end":{"line":4420,"column":4,"offset":136773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">type(message[0])</code>","position":{"start":{"line":4422,"column":1,"offset":136777},"end":{"line":4422,"column":19,"offset":136795}}},{"type":"text","value":" and ","position":{"start":{"line":4422,"column":19,"offset":136795},"end":{"line":4422,"column":24,"offset":136800}}},{"type":"raw","value":"<code class=\"language-text\">type(message)</code>","position":{"start":{"line":4422,"column":24,"offset":136800},"end":{"line":4422,"column":39,"offset":136815}}},{"type":"text","value":" print the same type ","position":{"start":{"line":4422,"column":39,"offset":136815},"end":{"line":4422,"column":60,"offset":136836}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4422,"column":60,"offset":136836},"end":{"line":4422,"column":65,"offset":136841}}},{"type":"text","value":". No difference.","position":{"start":{"line":4422,"column":65,"offset":136841},"end":{"line":4422,"column":81,"offset":136857}}}],"position":{"start":{"line":4422,"column":1,"offset":136777},"end":{"line":4422,"column":81,"offset":136857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, whether you're talking about a string, or you're talking about a single character symbol, they are all represented by the same ","position":{"start":{"line":4424,"column":1,"offset":136861},"end":{"line":4424,"column":139,"offset":136999}}},{"type":"raw","value":"<code class=\"language-text\">class</code>","position":{"start":{"line":4424,"column":139,"offset":136999},"end":{"line":4424,"column":146,"offset":137006}}},{"type":"text","value":", ","position":{"start":{"line":4424,"column":146,"offset":137006},"end":{"line":4424,"column":148,"offset":137008}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4424,"column":148,"offset":137008},"end":{"line":4424,"column":153,"offset":137013}}},{"type":"text","value":".","position":{"start":{"line":4424,"column":153,"offset":137013},"end":{"line":4424,"column":154,"offset":137014}}}],"position":{"start":{"line":4424,"column":1,"offset":136861},"end":{"line":4424,"column":154,"offset":137014}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">message[100]</code>","position":{"start":{"line":4426,"column":1,"offset":137018},"end":{"line":4426,"column":15,"offset":137032}}},{"type":"text","value":" throws an ","position":{"start":{"line":4426,"column":15,"offset":137032},"end":{"line":4426,"column":26,"offset":137043}}},{"type":"raw","value":"<code class=\"language-text\">IndexError</code>","position":{"start":{"line":4426,"column":26,"offset":137043},"end":{"line":4426,"column":38,"offset":137055}}},{"type":"text","value":".","position":{"start":{"line":4426,"column":38,"offset":137055},"end":{"line":4426,"column":39,"offset":137056}}}],"position":{"start":{"line":4426,"column":1,"offset":137018},"end":{"line":4426,"column":39,"offset":137056}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token string\">'H'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token string\">'e'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n    <span class=\"token string\">'l'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n    <span class=\"token string\">'l'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> message<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n    IndexError<span class=\"token punctuation\">:</span> string index out of <span class=\"token builtin\">range</span></code></pre></div>","position":{"start":{"line":4428,"column":1,"offset":137060},"end":{"line":4439,"column":4,"offset":137255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It says: \"The given index is out of the range of the value of that specific string\".","position":{"start":{"line":4441,"column":1,"offset":137259},"end":{"line":4441,"column":85,"offset":137343}}}],"position":{"start":{"line":4441,"column":1,"offset":137259},"end":{"line":4441,"column":85,"offset":137343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we would want to print all the characters in this string.","position":{"start":{"line":4443,"column":1,"offset":137347},"end":{"line":4443,"column":68,"offset":137414}}}],"position":{"start":{"line":4443,"column":1,"offset":137347},"end":{"line":4443,"column":68,"offset":137414}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The way you could do that, is by saying: ","position":{"start":{"line":4445,"column":1,"offset":137418},"end":{"line":4445,"column":42,"offset":137459}}},{"type":"raw","value":"<code class=\"language-text\">for ch in message: print(ch)</code>","position":{"start":{"line":4445,"column":42,"offset":137459},"end":{"line":4445,"column":72,"offset":137489}}},{"type":"text","value":".","position":{"start":{"line":4445,"column":72,"offset":137489},"end":{"line":4445,"column":73,"offset":137490}}}],"position":{"start":{"line":4445,"column":1,"offset":137418},"end":{"line":4445,"column":73,"offset":137490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":4447,"column":3,"offset":137496},"end":{"line":4447,"column":10,"offset":137503}}}],"position":{"start":{"line":4447,"column":1,"offset":137494},"end":{"line":4447,"column":12,"offset":137505}}}],"position":{"start":{"line":4447,"column":1,"offset":137494},"end":{"line":4447,"column":12,"offset":137505}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this short step, we looked at the fact that there is no separate character class, or data type in Python. We also looked at how do we loop over a given string, and print all the characters present inside this string.","position":{"start":{"line":4449,"column":1,"offset":137509},"end":{"line":4449,"column":220,"offset":137728}}}],"position":{"start":{"line":4449,"column":1,"offset":137509},"end":{"line":4449,"column":220,"offset":137728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 04: The string module","position":{"start":{"line":4451,"column":3,"offset":137734},"end":{"line":4451,"column":29,"offset":137760}}}],"position":{"start":{"line":4451,"column":1,"offset":137732},"end":{"line":4451,"column":31,"offset":137762}}}],"position":{"start":{"line":4451,"column":1,"offset":137732},"end":{"line":4451,"column":31,"offset":137762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we will introduce you to the ","position":{"start":{"line":4453,"column":1,"offset":137766},"end":{"line":4453,"column":44,"offset":137809}}},{"type":"raw","value":"<code class=\"language-text\">string</code>","position":{"start":{"line":4453,"column":44,"offset":137809},"end":{"line":4453,"column":52,"offset":137817}}},{"type":"text","value":" ","position":{"start":{"line":4453,"column":52,"offset":137817},"end":{"line":4453,"column":53,"offset":137818}}},{"type":"raw","value":"<code class=\"language-text\">module</code>","position":{"start":{"line":4453,"column":53,"offset":137818},"end":{"line":4453,"column":61,"offset":137826}}},{"type":"text","value":".","position":{"start":{"line":4453,"column":61,"offset":137826},"end":{"line":4453,"column":62,"offset":137827}}}],"position":{"start":{"line":4453,"column":1,"offset":137766},"end":{"line":4453,"column":62,"offset":137827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we would want to use anything from a module in Python, you need to import that specific ","position":{"start":{"line":4455,"column":1,"offset":137831},"end":{"line":4455,"column":92,"offset":137922}}},{"type":"raw","value":"<code class=\"language-text\">module</code>","position":{"start":{"line":4455,"column":92,"offset":137922},"end":{"line":4455,"column":100,"offset":137930}}},{"type":"text","value":" into your program.","position":{"start":{"line":4455,"column":100,"offset":137930},"end":{"line":4455,"column":119,"offset":137949}}}],"position":{"start":{"line":4455,"column":1,"offset":137831},"end":{"line":4455,"column":119,"offset":137949}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">import</span> string</code></pre></div>","position":{"start":{"line":4457,"column":1,"offset":137953},"end":{"line":4459,"column":4,"offset":137990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you do a ","position":{"start":{"line":4461,"column":1,"offset":137994},"end":{"line":4461,"column":13,"offset":138006}}},{"type":"raw","value":"<code class=\"language-text\">string.</code>","position":{"start":{"line":4461,"column":13,"offset":138006},"end":{"line":4461,"column":22,"offset":138015}}},{"type":"text","value":" and press , it would show the different things which are part of the ","position":{"start":{"line":4461,"column":22,"offset":138015},"end":{"line":4461,"column":92,"offset":138085}}},{"type":"raw","value":"<code class=\"language-text\">string</code>","position":{"start":{"line":4461,"column":92,"offset":138085},"end":{"line":4461,"column":100,"offset":138093}}},{"type":"text","value":" ","position":{"start":{"line":4461,"column":100,"offset":138093},"end":{"line":4461,"column":101,"offset":138094}}},{"type":"raw","value":"<code class=\"language-text\">module</code>","position":{"start":{"line":4461,"column":101,"offset":138094},"end":{"line":4461,"column":109,"offset":138102}}},{"type":"text","value":".","position":{"start":{"line":4461,"column":109,"offset":138102},"end":{"line":4461,"column":110,"offset":138103}}}],"position":{"start":{"line":4461,"column":1,"offset":137994},"end":{"line":4461,"column":110,"offset":138103}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>\n    string<span class=\"token punctuation\">.</span>Formatter<span class=\"token punctuation\">(</span>       string<span class=\"token punctuation\">.</span>ascii_uppercase  string<span class=\"token punctuation\">.</span>octdigits\n    string<span class=\"token punctuation\">.</span>Template<span class=\"token punctuation\">(</span>        string<span class=\"token punctuation\">.</span>capwords<span class=\"token punctuation\">(</span>        string<span class=\"token punctuation\">.</span>printable\n    string<span class=\"token punctuation\">.</span>ascii_letters    string<span class=\"token punctuation\">.</span>digits           string<span class=\"token punctuation\">.</span>punctuation\n    string<span class=\"token punctuation\">.</span>ascii_lowercase  string<span class=\"token punctuation\">.</span>hexdigits        string<span class=\"token punctuation\">.</span>whitespace</code></pre></div>","position":{"start":{"line":4463,"column":1,"offset":138107},"end":{"line":4469,"column":4,"offset":138421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's explore some of these.","position":{"start":{"line":4471,"column":1,"offset":138425},"end":{"line":4471,"column":29,"offset":138453}}}],"position":{"start":{"line":4471,"column":1,"offset":138425},"end":{"line":4471,"column":29,"offset":138453}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>ascii_letters\n    <span class=\"token string\">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>ascii_lowercase\n    <span class=\"token string\">'abcdefghijklmnopqrstuvwxyz'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>ascii_uppercase\n    <span class=\"token string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>digits\n    <span class=\"token string\">'0123456789'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>hexdigits\n    <span class=\"token string\">'0123456789abcdefABCDEF'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>punctuation\n    <span class=\"token string\">'!\"#$%&amp;\\'()*+,-./:;&lt;=>?@[\\\\]^_`{|}~'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>ascii_letters\n    <span class=\"token string\">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></code></pre></div>","position":{"start":{"line":4473,"column":1,"offset":138457},"end":{"line":4488,"column":4,"offset":138950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You have a set of printable characters, punctuation characters and a lot more.","position":{"start":{"line":4490,"column":1,"offset":138954},"end":{"line":4490,"column":79,"offset":139032}}}],"position":{"start":{"line":4490,"column":1,"offset":138954},"end":{"line":4490,"column":79,"offset":139032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can check a text value against any of these","position":{"start":{"line":4492,"column":1,"offset":139036},"end":{"line":4492,"column":48,"offset":139083}}}],"position":{"start":{"line":4492,"column":1,"offset":139036},"end":{"line":4492,"column":48,"offset":139083}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'a'</span> <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_letters\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'ab'</span> <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_letters\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'abc'</span> <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_letters\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4494,"column":1,"offset":139087},"end":{"line":4501,"column":4,"offset":139245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">in</code>","position":{"start":{"line":4503,"column":1,"offset":139249},"end":{"line":4503,"column":5,"offset":139253}}},{"type":"text","value":" operation on a string, checks if a given string.","position":{"start":{"line":4503,"column":5,"offset":139253},"end":{"line":4503,"column":54,"offset":139302}}}],"position":{"start":{"line":4503,"column":1,"offset":139249},"end":{"line":4503,"column":54,"offset":139302}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'1'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'13579'</span>\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'2'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'13579'</span>\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'4'</span> <span class=\"token keyword\">in</span> <span class=\"token string\">'13579'</span>\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":4505,"column":1,"offset":139306},"end":{"line":4512,"column":4,"offset":139424}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":4514,"column":3,"offset":139430},"end":{"line":4514,"column":10,"offset":139437}}}],"position":{"start":{"line":4514,"column":1,"offset":139428},"end":{"line":4514,"column":12,"offset":139439}}}],"position":{"start":{"line":4514,"column":1,"offset":139428},"end":{"line":4514,"column":12,"offset":139439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we explored more exercises involving the ","position":{"start":{"line":4516,"column":1,"offset":139443},"end":{"line":4516,"column":56,"offset":139498}}},{"type":"raw","value":"<code class=\"language-text\">str</code>","position":{"start":{"line":4516,"column":56,"offset":139498},"end":{"line":4516,"column":61,"offset":139503}}},{"type":"text","value":" module of Python.","position":{"start":{"line":4516,"column":61,"offset":139503},"end":{"line":4516,"column":79,"offset":139521}}}],"position":{"start":{"line":4516,"column":1,"offset":139443},"end":{"line":4516,"column":79,"offset":139521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 05: More Exercises With The str Module","position":{"start":{"line":4518,"column":3,"offset":139527},"end":{"line":4518,"column":46,"offset":139570}}}],"position":{"start":{"line":4518,"column":1,"offset":139525},"end":{"line":4518,"column":48,"offset":139572}}}],"position":{"start":{"line":4518,"column":1,"offset":139525},"end":{"line":4518,"column":48,"offset":139572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start with an Exercise - find if a specific character is a vowel or not.","position":{"start":{"line":4520,"column":1,"offset":139576},"end":{"line":4520,"column":79,"offset":139654}}}],"position":{"start":{"line":4520,"column":1,"offset":139576},"end":{"line":4520,"column":79,"offset":139654}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> vowel_string <span class=\"token operator\">=</span> <span class=\"token string\">'aeiouAEIOU'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char <span class=\"token keyword\">in</span> vowel_string\n    <span class=\"token boolean\">True</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char <span class=\"token operator\">=</span> <span class=\"token string\">'b'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char <span class=\"token keyword\">in</span> vowel_string\n    <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":4522,"column":1,"offset":139658},"end":{"line":4530,"column":4,"offset":139830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"he other thing you can do, is just have the capital vowels, or just the lowercase versions.","position":{"start":{"line":4532,"column":1,"offset":139834},"end":{"line":4532,"column":92,"offset":139925}}}],"position":{"start":{"line":4532,"column":1,"offset":139834},"end":{"line":4532,"column":92,"offset":139925}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> vowel_string <span class=\"token operator\">=</span> <span class=\"token string\">'AEIOU'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> vowel_string\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char <span class=\"token operator\">=</span> <span class=\"token string\">'a'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> vowel_string\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4534,"column":1,"offset":139929},"end":{"line":4541,"column":4,"offset":140092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now let's move on to the next one.","position":{"start":{"line":4543,"column":1,"offset":140096},"end":{"line":4543,"column":35,"offset":140130}}}],"position":{"start":{"line":4543,"column":1,"offset":140096},"end":{"line":4543,"column":35,"offset":140130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to find out and print all the capital alphabets, from ","position":{"start":{"line":4545,"column":1,"offset":140134},"end":{"line":4545,"column":63,"offset":140196}}},{"type":"raw","value":"<code class=\"language-text\">A</code>","position":{"start":{"line":4545,"column":63,"offset":140196},"end":{"line":4545,"column":66,"offset":140199}}},{"type":"text","value":" to ","position":{"start":{"line":4545,"column":66,"offset":140199},"end":{"line":4545,"column":70,"offset":140203}}},{"type":"raw","value":"<code class=\"language-text\">Z</code>","position":{"start":{"line":4545,"column":70,"offset":140203},"end":{"line":4545,"column":73,"offset":140206}}},{"type":"text","value":".","position":{"start":{"line":4545,"column":73,"offset":140206},"end":{"line":4545,"column":74,"offset":140207}}}],"position":{"start":{"line":4545,"column":1,"offset":140134},"end":{"line":4545,"column":74,"offset":140207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There was a small clue at the start of the previous step, regarding importing the ","position":{"start":{"line":4547,"column":1,"offset":140211},"end":{"line":4547,"column":83,"offset":140293}}},{"type":"raw","value":"<code class=\"language-text\">string</code>","position":{"start":{"line":4547,"column":83,"offset":140293},"end":{"line":4547,"column":91,"offset":140301}}},{"type":"text","value":" ","position":{"start":{"line":4547,"column":91,"offset":140301},"end":{"line":4547,"column":92,"offset":140302}}},{"type":"raw","value":"<code class=\"language-text\">module</code>","position":{"start":{"line":4547,"column":92,"offset":140302},"end":{"line":4547,"column":100,"offset":140310}}},{"type":"text","value":". We did the ","position":{"start":{"line":4547,"column":100,"offset":140310},"end":{"line":4547,"column":113,"offset":140323}}},{"type":"raw","value":"<code class=\"language-text\">string</code>","position":{"start":{"line":4547,"column":113,"offset":140323},"end":{"line":4547,"column":121,"offset":140331}}},{"type":"text","value":" ","position":{"start":{"line":4547,"column":121,"offset":140331},"end":{"line":4547,"column":122,"offset":140332}}},{"type":"raw","value":"<code class=\"language-text\">module</code>","position":{"start":{"line":4547,"column":122,"offset":140332},"end":{"line":4547,"column":130,"offset":140340}}},{"type":"text","value":", and we saw that ","position":{"start":{"line":4547,"column":130,"offset":140340},"end":{"line":4547,"column":148,"offset":140358}}},{"type":"raw","value":"<code class=\"language-text\">string</code>","position":{"start":{"line":4547,"column":148,"offset":140358},"end":{"line":4547,"column":156,"offset":140366}}},{"type":"text","value":" ","position":{"start":{"line":4547,"column":156,"offset":140366},"end":{"line":4547,"column":157,"offset":140367}}},{"type":"raw","value":"<code class=\"language-text\">module</code>","position":{"start":{"line":4547,"column":157,"offset":140367},"end":{"line":4547,"column":165,"offset":140375}}},{"type":"text","value":" contained a number of things.","position":{"start":{"line":4547,"column":165,"offset":140375},"end":{"line":4547,"column":195,"offset":140405}}}],"position":{"start":{"line":4547,"column":1,"offset":140211},"end":{"line":4547,"column":195,"offset":140405}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string<span class=\"token punctuation\">.</span>ascii_uppercase\n    <span class=\"token string\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_uppercase<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    A\n    B\n    C\n    D\n    E\n    F\n    G\n    H\n    I\n    J\n    K\n    L\n    M\n    N\n    O\n    P\n    Q\n    R\n    S\n    T\n    U\n    V\n    W\n    X\n    Y\n    Z</code></pre></div>","position":{"start":{"line":4549,"column":1,"offset":140409},"end":{"line":4581,"column":4,"offset":140748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Try another easy exercise: print all the lower characters. Instead of ","position":{"start":{"line":4583,"column":1,"offset":140752},"end":{"line":4583,"column":71,"offset":140822}}},{"type":"raw","value":"<code class=\"language-text\">string.ascii_uppercase</code>","position":{"start":{"line":4583,"column":71,"offset":140822},"end":{"line":4583,"column":95,"offset":140846}}},{"type":"text","value":", you have ","position":{"start":{"line":4583,"column":95,"offset":140846},"end":{"line":4583,"column":106,"offset":140857}}},{"type":"raw","value":"<code class=\"language-text\">string.ascii_lowercase</code>","position":{"start":{"line":4583,"column":106,"offset":140857},"end":{"line":4583,"column":130,"offset":140881}}},{"type":"text","value":".","position":{"start":{"line":4583,"column":130,"offset":140881},"end":{"line":4583,"column":131,"offset":140882}}}],"position":{"start":{"line":4583,"column":1,"offset":140752},"end":{"line":4583,"column":131,"offset":140882}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>ascii_lowercase<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    a\n    b\n    c\n    d\n    e\n    f\n    g\n    h\n    i\n    j\n    k\n    l\n    m\n    n\n    o\n    p\n    q\n    r\n    s\n    t\n    u\n    v\n    w\n    x\n    y\n    z</code></pre></div>","position":{"start":{"line":4585,"column":1,"offset":140886},"end":{"line":4615,"column":4,"offset":141159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An even easier exercise, would be to print all the digits.","position":{"start":{"line":4617,"column":1,"offset":141163},"end":{"line":4617,"column":59,"offset":141221}}}],"position":{"start":{"line":4617,"column":1,"offset":141163},"end":{"line":4617,"column":59,"offset":141221}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>\n    string<span class=\"token punctuation\">.</span>Formatter<span class=\"token punctuation\">(</span>       string<span class=\"token punctuation\">.</span>ascii_uppercase  string<span class=\"token punctuation\">.</span>octdigits\n    string<span class=\"token punctuation\">.</span>Template<span class=\"token punctuation\">(</span>        string<span class=\"token punctuation\">.</span>capwords<span class=\"token punctuation\">(</span>        string<span class=\"token punctuation\">.</span>printable\n    string<span class=\"token punctuation\">.</span>ascii_letters    string<span class=\"token punctuation\">.</span>digits           string<span class=\"token punctuation\">.</span>punctuation\n    string<span class=\"token punctuation\">.</span>ascii_lowercase  string<span class=\"token punctuation\">.</span>hexdigits        string<span class=\"token punctuation\">.</span>whitespace\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> char <span class=\"token keyword\">in</span> string<span class=\"token punctuation\">.</span>digits<span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>char<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":4619,"column":1,"offset":141225},"end":{"line":4639,"column":4,"offset":141698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The last exercise which we want to leave you with, is to check if something is a consonant.","position":{"start":{"line":4641,"column":1,"offset":141702},"end":{"line":4641,"column":92,"offset":141793}}}],"position":{"start":{"line":4641,"column":1,"offset":141702},"end":{"line":4641,"column":92,"offset":141793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A consonant is an alphabet which is not a vowel, so any alphabet which is not in ","position":{"start":{"line":4643,"column":1,"offset":141797},"end":{"line":4643,"column":82,"offset":141878}}},{"type":"raw","value":"<code class=\"language-text\">'aeiou'</code>","position":{"start":{"line":4643,"column":82,"offset":141878},"end":{"line":4643,"column":91,"offset":141887}}},{"type":"text","value":" is a consonant. The simplest way of doing this is to say ","position":{"start":{"line":4643,"column":91,"offset":141887},"end":{"line":4643,"column":149,"offset":141945}}},{"type":"raw","value":"<code class=\"language-text\">consonant_string = 'bcdfghj...'</code>","position":{"start":{"line":4643,"column":149,"offset":141945},"end":{"line":4643,"column":182,"offset":141978}}},{"type":"text","value":" and so on. Looks like a very long solution? There is an easier way out.","position":{"start":{"line":4643,"column":182,"offset":141978},"end":{"line":4643,"column":254,"offset":142050}}}],"position":{"start":{"line":4643,"column":1,"offset":141797},"end":{"line":4643,"column":254,"offset":142050}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> vowel_string <span class=\"token operator\">=</span> <span class=\"token string\">'aeiou'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char <span class=\"token operator\">=</span> <span class=\"token string\">'b'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> char<span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> char<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> vowel_string\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4645,"column":1,"offset":142054},"end":{"line":4650,"column":4,"offset":142191}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 06: More Exercises On Strings","position":{"start":{"line":4652,"column":3,"offset":142197},"end":{"line":4652,"column":37,"offset":142231}}}],"position":{"start":{"line":4652,"column":1,"offset":142195},"end":{"line":4652,"column":39,"offset":142233}}}],"position":{"start":{"line":4652,"column":1,"offset":142195},"end":{"line":4652,"column":39,"offset":142233}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the step, let's look at a few more puzzles and exercises related to strings. Let's say we have a simple string, ","position":{"start":{"line":4654,"column":1,"offset":142237},"end":{"line":4654,"column":116,"offset":142352}}},{"type":"raw","value":"<code class=\"language-text\">string_example</code>","position":{"start":{"line":4654,"column":116,"offset":142352},"end":{"line":4654,"column":132,"offset":142368}}},{"type":"text","value":", and this is contains an English sentence. ","position":{"start":{"line":4654,"column":132,"offset":142368},"end":{"line":4654,"column":176,"offset":142412}}},{"type":"raw","value":"<code class=\"language-text\">'This is a great thing.'</code>","position":{"start":{"line":4654,"column":176,"offset":142412},"end":{"line":4654,"column":202,"offset":142438}}}],"position":{"start":{"line":4654,"column":1,"offset":142237},"end":{"line":4654,"column":202,"offset":142438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try to to print each of the words present in this string, on a separate line.","position":{"start":{"line":4656,"column":1,"offset":142442},"end":{"line":4656,"column":84,"offset":142525}}}],"position":{"start":{"line":4656,"column":1,"offset":142442},"end":{"line":4656,"column":84,"offset":142525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So we would want to print ","position":{"start":{"line":4658,"column":1,"offset":142529},"end":{"line":4658,"column":27,"offset":142555}}},{"type":"raw","value":"<code class=\"language-text\">'This'</code>","position":{"start":{"line":4658,"column":27,"offset":142555},"end":{"line":4658,"column":35,"offset":142563}}},{"type":"text","value":", ","position":{"start":{"line":4658,"column":35,"offset":142563},"end":{"line":4658,"column":37,"offset":142565}}},{"type":"raw","value":"<code class=\"language-text\">'is'</code>","position":{"start":{"line":4658,"column":37,"offset":142565},"end":{"line":4658,"column":43,"offset":142571}}},{"type":"text","value":", ","position":{"start":{"line":4658,"column":43,"offset":142571},"end":{"line":4658,"column":45,"offset":142573}}},{"type":"raw","value":"<code class=\"language-text\">'a'</code>","position":{"start":{"line":4658,"column":45,"offset":142573},"end":{"line":4658,"column":50,"offset":142578}}},{"type":"text","value":", ","position":{"start":{"line":4658,"column":50,"offset":142578},"end":{"line":4658,"column":52,"offset":142580}}},{"type":"raw","value":"<code class=\"language-text\">'great'</code>","position":{"start":{"line":4658,"column":52,"offset":142580},"end":{"line":4658,"column":61,"offset":142589}}},{"type":"text","value":" and ","position":{"start":{"line":4658,"column":61,"offset":142589},"end":{"line":4658,"column":66,"offset":142594}}},{"type":"raw","value":"<code class=\"language-text\">'thing'</code>","position":{"start":{"line":4658,"column":66,"offset":142594},"end":{"line":4658,"column":75,"offset":142603}}},{"type":"text","value":" on individual lines.","position":{"start":{"line":4658,"column":75,"offset":142603},"end":{"line":4658,"column":96,"offset":142624}}}],"position":{"start":{"line":4658,"column":1,"offset":142529},"end":{"line":4658,"column":96,"offset":142624}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the clues we'll give you is, try and do ","position":{"start":{"line":4660,"column":1,"offset":142628},"end":{"line":4660,"column":48,"offset":142675}}},{"type":"raw","value":"<code class=\"language-text\">string_example. &lt;TAB></code>","position":{"start":{"line":4660,"column":48,"offset":142675},"end":{"line":4660,"column":71,"offset":142698}}},{"type":"text","value":". There are a huge list of methods, which would come up if you do that.","position":{"start":{"line":4660,"column":71,"offset":142698},"end":{"line":4660,"column":142,"offset":142769}}}],"position":{"start":{"line":4660,"column":1,"offset":142628},"end":{"line":4660,"column":142,"offset":142769}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string_example <span class=\"token operator\">=</span> <span class=\"token string\">\"This is a great thing\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string_example<span class=\"token punctuation\">.</span>\n    string_example<span class=\"token punctuation\">.</span>capitalize<span class=\"token punctuation\">(</span>    string_example<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>casefold<span class=\"token punctuation\">(</span>      string_example<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>center<span class=\"token punctuation\">(</span>        string_example<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span>         string_example<span class=\"token punctuation\">.</span>lstrip<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>        string_example<span class=\"token punctuation\">.</span>maketrans<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>      string_example<span class=\"token punctuation\">.</span>partition<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>expandtabs<span class=\"token punctuation\">(</span>    string_example<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>          string_example<span class=\"token punctuation\">.</span>rfind<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>        string_example<span class=\"token punctuation\">.</span>rindex<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>format_map<span class=\"token punctuation\">(</span>    string_example<span class=\"token punctuation\">.</span>rjust<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>         string_example<span class=\"token punctuation\">.</span>rpartition<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isalnum<span class=\"token punctuation\">(</span>       string_example<span class=\"token punctuation\">.</span>rsplit<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isalpha<span class=\"token punctuation\">(</span>       string_example<span class=\"token punctuation\">.</span>rstrip<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isdecimal<span class=\"token punctuation\">(</span>     string_example<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span>       string_example<span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isidentifier<span class=\"token punctuation\">(</span>  string_example<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>islower<span class=\"token punctuation\">(</span>       string_example<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isnumeric<span class=\"token punctuation\">(</span>     string_example<span class=\"token punctuation\">.</span>swapcase<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isprintable<span class=\"token punctuation\">(</span>   string_example<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isspace<span class=\"token punctuation\">(</span>       string_example<span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>istitle<span class=\"token punctuation\">(</span>       string_example<span class=\"token punctuation\">.</span>upper<span class=\"token punctuation\">(</span>\n    string_example<span class=\"token punctuation\">.</span>isupper<span class=\"token punctuation\">(</span>       string_example<span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span></code></pre></div>","position":{"start":{"line":4662,"column":1,"offset":142773},"end":{"line":4687,"column":4,"offset":144151}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the methods in the list is the ","position":{"start":{"line":4689,"column":1,"offset":144155},"end":{"line":4689,"column":39,"offset":144193}}},{"type":"raw","value":"<code class=\"language-text\">split()</code>","position":{"start":{"line":4689,"column":39,"offset":144193},"end":{"line":4689,"column":48,"offset":144202}}},{"type":"text","value":" method.","position":{"start":{"line":4689,"column":48,"offset":144202},"end":{"line":4689,"column":56,"offset":144210}}}],"position":{"start":{"line":4689,"column":1,"offset":144155},"end":{"line":4689,"column":56,"offset":144210}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string_example<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'This'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'great'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'thing'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> string_example<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    This\n    <span class=\"token keyword\">is</span>\n    a\n    great\n    thing</code></pre></div>","position":{"start":{"line":4691,"column":1,"offset":144214},"end":{"line":4702,"column":4,"offset":144428}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">split_lines()</code>","position":{"start":{"line":4704,"column":1,"offset":144432},"end":{"line":4704,"column":16,"offset":144447}}},{"type":"text","value":" method looks for a ","position":{"start":{"line":4704,"column":16,"offset":144447},"end":{"line":4704,"column":36,"offset":144467}}},{"type":"raw","value":"<code class=\"language-text\">'\\n'</code>","position":{"start":{"line":4704,"column":36,"offset":144467},"end":{"line":4704,"column":42,"offset":144473}}},{"type":"text","value":", and it divides the string based on it. If you have a string which contains newlines, and you would want to divide it into a number of strings with each line as a new element, the method you can use is ","position":{"start":{"line":4704,"column":42,"offset":144473},"end":{"line":4704,"column":245,"offset":144676}}},{"type":"raw","value":"<code class=\"language-text\">split_lines()</code>","position":{"start":{"line":4704,"column":245,"offset":144676},"end":{"line":4704,"column":260,"offset":144691}}},{"type":"text","value":".","position":{"start":{"line":4704,"column":260,"offset":144691},"end":{"line":4704,"column":261,"offset":144692}}}],"position":{"start":{"line":4704,"column":1,"offset":144432},"end":{"line":4704,"column":261,"offset":144692}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string_example <span class=\"token operator\">=</span> <span class=\"token string\">\"This\\nis\\n\\ngreat\\nthing\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>string_example<span class=\"token punctuation\">)</span>\n    This\n    <span class=\"token keyword\">is</span>\n\n    great\n    thing\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string_example <span class=\"token operator\">=</span> <span class=\"token string\">\"This\\nis\\na\\ngreat\\nthing\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>string_example<span class=\"token punctuation\">)</span>\n    This\n    <span class=\"token keyword\">is</span>\n    a\n    great\n    thing\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> string_example<span class=\"token punctuation\">.</span>splitlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">'This'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'is'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'great'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'thing'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>","position":{"start":{"line":4706,"column":1,"offset":144696},"end":{"line":4724,"column":4,"offset":145057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The last thing which we look at, is ","position":{"start":{"line":4726,"column":1,"offset":145061},"end":{"line":4726,"column":37,"offset":145097}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"concatenation operator","position":{"start":{"line":4726,"column":39,"offset":145099},"end":{"line":4726,"column":61,"offset":145121}}}],"position":{"start":{"line":4726,"column":37,"offset":145097},"end":{"line":4726,"column":63,"offset":145123}}},{"type":"text","value":".","position":{"start":{"line":4726,"column":63,"offset":145123},"end":{"line":4726,"column":64,"offset":145124}}}],"position":{"start":{"line":4726,"column":1,"offset":145061},"end":{"line":4726,"column":64,"offset":145124}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"2\"</span>\n    <span class=\"token string\">'12'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">\"1\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    TypeError<span class=\"token punctuation\">:</span> must be <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">int</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">\"ABC\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"DEF\"</span>\n    <span class=\"token string\">'ABCDEF'</span></code></pre></div>","position":{"start":{"line":4728,"column":1,"offset":145128},"end":{"line":4737,"column":4,"offset":145284}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Python, you cannot do ","position":{"start":{"line":4739,"column":1,"offset":145288},"end":{"line":4739,"column":26,"offset":145313}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":4739,"column":26,"offset":145313},"end":{"line":4739,"column":29,"offset":145316}}},{"type":"text","value":" operator between two different types. ","position":{"start":{"line":4739,"column":29,"offset":145316},"end":{"line":4739,"column":68,"offset":145355}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":4739,"column":68,"offset":145355},"end":{"line":4739,"column":71,"offset":145358}}},{"type":"text","value":" with two strings is concatenation. ","position":{"start":{"line":4739,"column":71,"offset":145358},"end":{"line":4739,"column":107,"offset":145394}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":4739,"column":107,"offset":145394},"end":{"line":4739,"column":110,"offset":145397}}},{"type":"text","value":" with two numbers is addition.","position":{"start":{"line":4739,"column":110,"offset":145397},"end":{"line":4739,"column":140,"offset":145427}}}],"position":{"start":{"line":4739,"column":1,"offset":145288},"end":{"line":4739,"column":140,"offset":145427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One other interesting operator on strings is multiplication. If you do a ","position":{"start":{"line":4741,"column":1,"offset":145431},"end":{"line":4741,"column":74,"offset":145504}}},{"type":"raw","value":"<code class=\"language-text\">'1' * 20</code>","position":{"start":{"line":4741,"column":74,"offset":145504},"end":{"line":4741,"column":84,"offset":145514}}},{"type":"text","value":", What do you think will be the output?","position":{"start":{"line":4741,"column":84,"offset":145514},"end":{"line":4741,"column":123,"offset":145553}}}],"position":{"start":{"line":4741,"column":1,"offset":145431},"end":{"line":4741,"column":123,"offset":145553}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span>\n    <span class=\"token number\">20</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'1'</span> <span class=\"token operator\">*</span> <span class=\"token number\">20</span>\n    <span class=\"token string\">'11111111111111111111'</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token string\">'A'</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span>\n    <span class=\"token string\">'AAAAAAAAAA'</span></code></pre></div>","position":{"start":{"line":4743,"column":1,"offset":145557},"end":{"line":4750,"column":4,"offset":145677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you multiply a string with ","position":{"start":{"line":4752,"column":1,"offset":145681},"end":{"line":4752,"column":31,"offset":145711}}},{"type":"raw","value":"<code class=\"language-text\">number</code>","position":{"start":{"line":4752,"column":31,"offset":145711},"end":{"line":4752,"column":39,"offset":145719}}},{"type":"text","value":", the string value is concatenated ","position":{"start":{"line":4752,"column":39,"offset":145719},"end":{"line":4752,"column":74,"offset":145754}}},{"type":"raw","value":"<code class=\"language-text\">number</code>","position":{"start":{"line":4752,"column":74,"offset":145754},"end":{"line":4752,"column":82,"offset":145762}}},{"type":"text","value":" times.","position":{"start":{"line":4752,"column":82,"offset":145762},"end":{"line":4752,"column":89,"offset":145769}}}],"position":{"start":{"line":4752,"column":1,"offset":145681},"end":{"line":4752,"column":89,"offset":145769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The last thing which we look at in this step, is comparing strings.","position":{"start":{"line":4754,"column":1,"offset":145773},"end":{"line":4754,"column":68,"offset":145840}}}],"position":{"start":{"line":4754,"column":1,"offset":145773},"end":{"line":4754,"column":68,"offset":145840}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say we have a string with a value ","position":{"start":{"line":4756,"column":1,"offset":145844},"end":{"line":4756,"column":41,"offset":145884}}},{"type":"raw","value":"<code class=\"language-text\">str = 'test'</code>","position":{"start":{"line":4756,"column":41,"offset":145884},"end":{"line":4756,"column":55,"offset":145898}}},{"type":"text","value":", and you have another string to with a value ","position":{"start":{"line":4756,"column":55,"offset":145898},"end":{"line":4756,"column":101,"offset":145944}}},{"type":"raw","value":"<code class=\"language-text\">str1 = 'test1'</code>","position":{"start":{"line":4756,"column":101,"offset":145944},"end":{"line":4756,"column":117,"offset":145960}}},{"type":"text","value":".","position":{"start":{"line":4756,"column":117,"offset":145960},"end":{"line":4756,"column":118,"offset":145961}}}],"position":{"start":{"line":4756,"column":1,"offset":145844},"end":{"line":4756,"column":118,"offset":145961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We want to check whether both these strings are the same.","position":{"start":{"line":4758,"column":1,"offset":145965},"end":{"line":4758,"column":58,"offset":146022}}}],"position":{"start":{"line":4758,"column":1,"offset":145965},"end":{"line":4758,"column":58,"offset":146022}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"test1\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span> <span class=\"token operator\">==</span> str2\n    <span class=\"token boolean\">False</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"test\"</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token builtin\">str</span> <span class=\"token operator\">==</span> str2\n    <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4760,"column":1,"offset":146026},"end":{"line":4768,"column":4,"offset":146172}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can compare strings using the ","position":{"start":{"line":4770,"column":1,"offset":146176},"end":{"line":4770,"column":35,"offset":146210}}},{"type":"raw","value":"<code class=\"language-text\">==</code>","position":{"start":{"line":4770,"column":35,"offset":146210},"end":{"line":4770,"column":39,"offset":146214}}},{"type":"text","value":" operator.","position":{"start":{"line":4770,"column":39,"offset":146214},"end":{"line":4770,"column":49,"offset":146224}}}],"position":{"start":{"line":4770,"column":1,"offset":146176},"end":{"line":4770,"column":49,"offset":146224}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":4772,"column":3,"offset":146230},"end":{"line":4772,"column":10,"offset":146237}}}],"position":{"start":{"line":4772,"column":1,"offset":146228},"end":{"line":4772,"column":12,"offset":146239}}}],"position":{"start":{"line":4772,"column":1,"offset":146228},"end":{"line":4772,"column":12,"offset":146239}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we explored a few exercises on strings, covering areas such as:","position":{"start":{"line":4774,"column":1,"offset":146243},"end":{"line":4774,"column":78,"offset":146320}}}],"position":{"start":{"line":4774,"column":1,"offset":146243},"end":{"line":4774,"column":78,"offset":146320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Splitting a given sentence into individual words","position":{"start":{"line":4776,"column":5,"offset":146328},"end":{"line":4776,"column":53,"offset":146376}}}],"position":{"start":{"line":4776,"column":1,"offset":146324},"end":{"line":4776,"column":53,"offset":146376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The concatenation operator, ","position":{"start":{"line":4777,"column":5,"offset":146382},"end":{"line":4777,"column":33,"offset":146410}}},{"type":"raw","value":"<code class=\"language-text\">+</code>","position":{"start":{"line":4777,"column":33,"offset":146410},"end":{"line":4777,"column":36,"offset":146413}}}],"position":{"start":{"line":4777,"column":1,"offset":146378},"end":{"line":4777,"column":36,"offset":146413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The string multiplication pattern, ","position":{"start":{"line":4778,"column":5,"offset":146419},"end":{"line":4778,"column":40,"offset":146454}}},{"type":"raw","value":"<code class=\"language-text\">*</code>","position":{"start":{"line":4778,"column":40,"offset":146454},"end":{"line":4778,"column":43,"offset":146457}}}],"position":{"start":{"line":4778,"column":1,"offset":146415},"end":{"line":4778,"column":43,"offset":146457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The use of the ","position":{"start":{"line":4779,"column":5,"offset":146463},"end":{"line":4779,"column":20,"offset":146478}}},{"type":"raw","value":"<code class=\"language-text\">==</code>","position":{"start":{"line":4779,"column":20,"offset":146478},"end":{"line":4779,"column":24,"offset":146482}}},{"type":"text","value":" operator to compare strings","position":{"start":{"line":4779,"column":24,"offset":146482},"end":{"line":4779,"column":52,"offset":146510}}}],"position":{"start":{"line":4779,"column":1,"offset":146459},"end":{"line":4779,"column":52,"offset":146510}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4776,"column":1,"offset":146324},"end":{"line":4779,"column":52,"offset":146510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Chapter 07 - Introducing Loops","position":{"start":{"line":4781,"column":6,"offset":146519},"end":{"line":4781,"column":36,"offset":146549}}}],"position":{"start":{"line":4781,"column":1,"offset":146514},"end":{"line":4781,"column":36,"offset":146549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Welcome to the section on Loops. In this section, we will look at a variety of loops that are available in Python. We will look mainly at the ","position":{"start":{"line":4783,"column":1,"offset":146553},"end":{"line":4783,"column":143,"offset":146695}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4783,"column":145,"offset":146697},"end":{"line":4783,"column":150,"offset":146702}}}],"position":{"start":{"line":4783,"column":143,"offset":146695},"end":{"line":4783,"column":152,"offset":146704}}},{"type":"text","value":" loop, and the ","position":{"start":{"line":4783,"column":152,"offset":146704},"end":{"line":4783,"column":167,"offset":146719}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":4783,"column":169,"offset":146721},"end":{"line":4783,"column":176,"offset":146728}}}],"position":{"start":{"line":4783,"column":167,"offset":146719},"end":{"line":4783,"column":178,"offset":146730}}},{"type":"text","value":" loop.","position":{"start":{"line":4783,"column":178,"offset":146730},"end":{"line":4783,"column":184,"offset":146736}}}],"position":{"start":{"line":4783,"column":1,"offset":146553},"end":{"line":4783,"column":184,"offset":146736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 01: Revisited: The for Loop","position":{"start":{"line":4785,"column":3,"offset":146742},"end":{"line":4785,"column":35,"offset":146774}}}],"position":{"start":{"line":4785,"column":1,"offset":146740},"end":{"line":4785,"column":37,"offset":146776}}}],"position":{"start":{"line":4785,"column":1,"offset":146740},"end":{"line":4785,"column":37,"offset":146776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start with revising the basics of the for loop, we have learned in the previous steps.","position":{"start":{"line":4787,"column":1,"offset":146780},"end":{"line":4787,"column":93,"offset":146872}}}],"position":{"start":{"line":4787,"column":1,"offset":146780},"end":{"line":4787,"column":93,"offset":146872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We saw that a ","position":{"start":{"line":4789,"column":1,"offset":146876},"end":{"line":4789,"column":15,"offset":146890}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4789,"column":15,"offset":146890},"end":{"line":4789,"column":20,"offset":146895}}},{"type":"text","value":" loop helps us to loop around the same set of code statements, many times over.","position":{"start":{"line":4789,"column":20,"offset":146895},"end":{"line":4789,"column":99,"offset":146974}}}],"position":{"start":{"line":4789,"column":1,"offset":146876},"end":{"line":4789,"column":99,"offset":146974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at a few simple examples, once again.","position":{"start":{"line":4791,"column":1,"offset":146978},"end":{"line":4791,"column":49,"offset":147026}}}],"position":{"start":{"line":4791,"column":1,"offset":146978},"end":{"line":4791,"column":49,"offset":147026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01","position":{"start":{"line":4793,"column":3,"offset":147032},"end":{"line":4793,"column":13,"offset":147042}}}],"position":{"start":{"line":4793,"column":1,"offset":147030},"end":{"line":4793,"column":15,"offset":147044}}}],"position":{"start":{"line":4793,"column":1,"offset":147030},"end":{"line":4793,"column":15,"offset":147044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The syntax of a ","position":{"start":{"line":4795,"column":1,"offset":147048},"end":{"line":4795,"column":17,"offset":147064}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4795,"column":17,"offset":147064},"end":{"line":4795,"column":22,"offset":147069}}},{"type":"text","value":" loop is very simple.","position":{"start":{"line":4795,"column":22,"offset":147069},"end":{"line":4795,"column":43,"offset":147090}}}],"position":{"start":{"line":4795,"column":1,"offset":147048},"end":{"line":4795,"column":43,"offset":147090}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, this code snippet will tell you all about it: ","position":{"start":{"line":4797,"column":1,"offset":147094},"end":{"line":4797,"column":60,"offset":147153}}},{"type":"raw","value":"<code class=\"language-text\">for i in range(1, 11): print(i)</code>","position":{"start":{"line":4797,"column":60,"offset":147153},"end":{"line":4797,"column":93,"offset":147186}}},{"type":"text","value":".","position":{"start":{"line":4797,"column":93,"offset":147186},"end":{"line":4797,"column":94,"offset":147187}}}],"position":{"start":{"line":4797,"column":1,"offset":147094},"end":{"line":4797,"column":94,"offset":147187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What does this do? Very simple, it prints from ","position":{"start":{"line":4799,"column":1,"offset":147191},"end":{"line":4799,"column":48,"offset":147238}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4799,"column":48,"offset":147238},"end":{"line":4799,"column":51,"offset":147241}}},{"type":"text","value":" to ","position":{"start":{"line":4799,"column":51,"offset":147241},"end":{"line":4799,"column":55,"offset":147245}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":4799,"column":55,"offset":147245},"end":{"line":4799,"column":59,"offset":147249}}},{"type":"text","value":".","position":{"start":{"line":4799,"column":59,"offset":147249},"end":{"line":4799,"column":60,"offset":147250}}}],"position":{"start":{"line":4799,"column":1,"offset":147191},"end":{"line":4799,"column":60,"offset":147250}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the call to the ","position":{"start":{"line":4801,"column":1,"offset":147254},"end":{"line":4801,"column":20,"offset":147273}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":4801,"column":20,"offset":147273},"end":{"line":4801,"column":29,"offset":147282}}},{"type":"text","value":" function, the second parameter is exclusive. We are actually looping from ","position":{"start":{"line":4801,"column":29,"offset":147282},"end":{"line":4801,"column":104,"offset":147357}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4801,"column":104,"offset":147357},"end":{"line":4801,"column":107,"offset":147360}}},{"type":"text","value":" to ","position":{"start":{"line":4801,"column":107,"offset":147360},"end":{"line":4801,"column":111,"offset":147364}}},{"type":"raw","value":"<code class=\"language-text\">10</code>","position":{"start":{"line":4801,"column":111,"offset":147364},"end":{"line":4801,"column":115,"offset":147368}}},{"type":"text","value":", and this piece of code, ","position":{"start":{"line":4801,"column":115,"offset":147368},"end":{"line":4801,"column":141,"offset":147394}}},{"type":"raw","value":"<code class=\"language-text\">print(i)</code>","position":{"start":{"line":4801,"column":141,"offset":147394},"end":{"line":4801,"column":151,"offset":147404}}},{"type":"text","value":", is being executed for different values of ","position":{"start":{"line":4801,"column":151,"offset":147404},"end":{"line":4801,"column":195,"offset":147448}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":4801,"column":195,"offset":147448},"end":{"line":4801,"column":198,"offset":147451}}},{"type":"text","value":".","position":{"start":{"line":4801,"column":198,"offset":147451},"end":{"line":4801,"column":199,"offset":147452}}}],"position":{"start":{"line":4801,"column":1,"offset":147254},"end":{"line":4801,"column":199,"offset":147452}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">7</span>\n    <span class=\"token number\">8</span>\n    <span class=\"token number\">9</span>\n    <span class=\"token number\">10</span></code></pre></div>","position":{"start":{"line":4803,"column":1,"offset":147456},"end":{"line":4817,"column":4,"offset":147601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4819,"column":1,"offset":147605},"end":{"line":4819,"column":6,"offset":147610}}},{"type":"text","value":" loop can also be used to loop round the characters in a string.","position":{"start":{"line":4819,"column":6,"offset":147610},"end":{"line":4819,"column":70,"offset":147674}}}],"position":{"start":{"line":4819,"column":1,"offset":147605},"end":{"line":4819,"column":70,"offset":147674}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> ch <span class=\"token keyword\">in</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    H\n    e\n    l\n    l\n    o\n    W\n    o\n    r\n    l\n    d</code></pre></div>","position":{"start":{"line":4821,"column":1,"offset":147678},"end":{"line":4835,"column":4,"offset":147826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4837,"column":1,"offset":147830},"end":{"line":4837,"column":6,"offset":147835}}},{"type":"text","value":" loop can be used to loop around all the words in a given sentence.","position":{"start":{"line":4837,"column":6,"offset":147835},"end":{"line":4837,"column":73,"offset":147902}}}],"position":{"start":{"line":4837,"column":1,"offset":147830},"end":{"line":4837,"column":73,"offset":147902}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    Hello\n    World</code></pre></div>","position":{"start":{"line":4839,"column":1,"offset":147906},"end":{"line":4845,"column":4,"offset":148018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4847,"column":1,"offset":148022},"end":{"line":4847,"column":6,"offset":148027}}},{"type":"text","value":" loop can be used to loop around a specific list of values.","position":{"start":{"line":4847,"column":6,"offset":148027},"end":{"line":4847,"column":65,"offset":148086}}}],"position":{"start":{"line":4847,"column":1,"offset":148022},"end":{"line":4847,"column":65,"offset":148086}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">6</span>\n    <span class=\"token number\">9</span></code></pre></div>","position":{"start":{"line":4849,"column":1,"offset":148090},"end":{"line":4856,"column":4,"offset":148189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":4858,"column":3,"offset":148195},"end":{"line":4858,"column":10,"offset":148202}}}],"position":{"start":{"line":4858,"column":1,"offset":148193},"end":{"line":4858,"column":12,"offset":148204}}}],"position":{"start":{"line":4858,"column":1,"offset":148193},"end":{"line":4858,"column":12,"offset":148204}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we started with discussing and revising basic concepts about the ","position":{"start":{"line":4860,"column":1,"offset":148208},"end":{"line":4860,"column":80,"offset":148287}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4860,"column":80,"offset":148287},"end":{"line":4860,"column":85,"offset":148292}}},{"type":"text","value":" loop","position":{"start":{"line":4860,"column":85,"offset":148292},"end":{"line":4860,"column":90,"offset":148297}}}],"position":{"start":{"line":4860,"column":1,"offset":148208},"end":{"line":4860,"column":90,"offset":148297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 02: Programming Exercise PE-LO-01","position":{"start":{"line":4862,"column":3,"offset":148303},"end":{"line":4862,"column":41,"offset":148341}}}],"position":{"start":{"line":4862,"column":1,"offset":148301},"end":{"line":4862,"column":43,"offset":148343}}}],"position":{"start":{"line":4862,"column":1,"offset":148301},"end":{"line":4862,"column":43,"offset":148343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Welcome back to this step, where we would do a lot of exercises with the ","position":{"start":{"line":4864,"column":1,"offset":148347},"end":{"line":4864,"column":74,"offset":148420}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4864,"column":74,"offset":148420},"end":{"line":4864,"column":79,"offset":148425}}},{"type":"text","value":" loop.","position":{"start":{"line":4864,"column":79,"offset":148425},"end":{"line":4864,"column":85,"offset":148431}}}],"position":{"start":{"line":4864,"column":1,"offset":148347},"end":{"line":4864,"column":85,"offset":148431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":4866,"column":3,"offset":148437},"end":{"line":4866,"column":12,"offset":148446}}}],"position":{"start":{"line":4866,"column":1,"offset":148435},"end":{"line":4866,"column":14,"offset":148448}}}],"position":{"start":{"line":4866,"column":1,"offset":148435},"end":{"line":4866,"column":14,"offset":148448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first exercise is to find out if a number is prime. We want to write a method, ","position":{"start":{"line":4868,"column":4,"offset":148455},"end":{"line":4868,"column":87,"offset":148538}}},{"type":"raw","value":"<code class=\"language-text\">is_prime()</code>","position":{"start":{"line":4868,"column":87,"offset":148538},"end":{"line":4868,"column":99,"offset":148550}}},{"type":"text","value":", which accepts an integer value as parameter, and returns whether it's a prime. ","position":{"start":{"line":4868,"column":99,"offset":148550},"end":{"line":4868,"column":180,"offset":148631}}},{"type":"text","value":"(","position":{"start":{"line":4868,"column":180,"offset":148631},"end":{"line":4868,"column":182,"offset":148633}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Hint","position":{"start":{"line":4868,"column":184,"offset":148635},"end":{"line":4868,"column":188,"offset":148639}}}],"position":{"start":{"line":4868,"column":182,"offset":148633},"end":{"line":4868,"column":190,"offset":148641}}},{"type":"text","value":": A prime number is something which is only divisible by ","position":{"start":{"line":4868,"column":190,"offset":148641},"end":{"line":4868,"column":247,"offset":148698}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4868,"column":247,"offset":148698},"end":{"line":4868,"column":250,"offset":148701}}},{"type":"text","value":" and itself","position":{"start":{"line":4868,"column":250,"offset":148701},"end":{"line":4868,"column":261,"offset":148712}}},{"type":"text","value":")","position":{"start":{"line":4868,"column":261,"offset":148712},"end":{"line":4868,"column":263,"offset":148714}}},{"type":"text","value":".","position":{"start":{"line":4868,"column":263,"offset":148714},"end":{"line":4868,"column":264,"offset":148715}}}],"position":{"start":{"line":4868,"column":4,"offset":148455},"end":{"line":4868,"column":264,"offset":148715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":4869,"column":8,"offset":148724},"end":{"line":4869,"column":11,"offset":148727}}},{"type":"text","value":" is only divisible by ","position":{"start":{"line":4869,"column":11,"offset":148727},"end":{"line":4869,"column":33,"offset":148749}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4869,"column":33,"offset":148749},"end":{"line":4869,"column":36,"offset":148752}}},{"type":"text","value":" and ","position":{"start":{"line":4869,"column":36,"offset":148752},"end":{"line":4869,"column":41,"offset":148757}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":4869,"column":41,"offset":148757},"end":{"line":4869,"column":44,"offset":148760}}},{"type":"text","value":". It is not divisible by any other number. Same is the case with ","position":{"start":{"line":4869,"column":44,"offset":148760},"end":{"line":4869,"column":109,"offset":148825}}},{"type":"raw","value":"<code class=\"language-text\">7</code>","position":{"start":{"line":4869,"column":109,"offset":148825},"end":{"line":4869,"column":112,"offset":148828}}},{"type":"text","value":" and ","position":{"start":{"line":4869,"column":112,"offset":148828},"end":{"line":4869,"column":117,"offset":148833}}},{"type":"raw","value":"<code class=\"language-text\">11</code>","position":{"start":{"line":4869,"column":117,"offset":148833},"end":{"line":4869,"column":121,"offset":148837}}},{"type":"text","value":".","position":{"start":{"line":4869,"column":121,"offset":148837},"end":{"line":4869,"column":122,"offset":148838}}}],"position":{"start":{"line":4869,"column":5,"offset":148721},"end":{"line":4869,"column":122,"offset":148838}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"However, ","position":{"start":{"line":4870,"column":8,"offset":148847},"end":{"line":4870,"column":17,"offset":148856}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":4870,"column":17,"offset":148856},"end":{"line":4870,"column":20,"offset":148859}}},{"type":"text","value":" is divisible by ","position":{"start":{"line":4870,"column":20,"offset":148859},"end":{"line":4870,"column":37,"offset":148876}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4870,"column":37,"offset":148876},"end":{"line":4870,"column":40,"offset":148879}}},{"type":"text","value":", ","position":{"start":{"line":4870,"column":40,"offset":148879},"end":{"line":4870,"column":42,"offset":148881}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":4870,"column":42,"offset":148881},"end":{"line":4870,"column":45,"offset":148884}}},{"type":"text","value":", ","position":{"start":{"line":4870,"column":45,"offset":148884},"end":{"line":4870,"column":47,"offset":148886}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":4870,"column":47,"offset":148886},"end":{"line":4870,"column":50,"offset":148889}}},{"type":"text","value":" and ","position":{"start":{"line":4870,"column":50,"offset":148889},"end":{"line":4870,"column":55,"offset":148894}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":4870,"column":55,"offset":148894},"end":{"line":4870,"column":58,"offset":148897}}},{"type":"text","value":". So it's not a prime number.","position":{"start":{"line":4870,"column":58,"offset":148897},"end":{"line":4870,"column":87,"offset":148926}}}],"position":{"start":{"line":4870,"column":5,"offset":148844},"end":{"line":4870,"column":87,"offset":148926}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4869,"column":5,"offset":148721},"end":{"line":4870,"column":87,"offset":148926}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4868,"column":1,"offset":148452},"end":{"line":4870,"column":87,"offset":148926}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The second exercise is to write a method to calculate the sum up to a given integer, starting from ","position":{"start":{"line":4871,"column":4,"offset":148931},"end":{"line":4871,"column":103,"offset":149030}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4871,"column":103,"offset":149030},"end":{"line":4871,"column":106,"offset":149033}}},{"type":"text","value":". ","position":{"start":{"line":4871,"column":106,"offset":149033},"end":{"line":4871,"column":108,"offset":149035}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Hint","position":{"start":{"line":4871,"column":110,"offset":149037},"end":{"line":4871,"column":114,"offset":149041}}}],"position":{"start":{"line":4871,"column":108,"offset":149035},"end":{"line":4871,"column":116,"offset":149043}}},{"type":"text","value":": If I would want to find that the sum up to ","position":{"start":{"line":4871,"column":116,"offset":149043},"end":{"line":4871,"column":161,"offset":149088}}},{"type":"raw","value":"<code class=\"language-text\">6</code>","position":{"start":{"line":4871,"column":161,"offset":149088},"end":{"line":4871,"column":164,"offset":149091}}},{"type":"text","value":". what's needed is ","position":{"start":{"line":4871,"column":164,"offset":149091},"end":{"line":4871,"column":183,"offset":149110}}},{"type":"raw","value":"<code class=\"language-text\">1 + 2 + 3 + 4 + 5 + 6</code>","position":{"start":{"line":4871,"column":183,"offset":149110},"end":{"line":4871,"column":206,"offset":149133}}},{"type":"text","value":".","position":{"start":{"line":4871,"column":206,"offset":149133},"end":{"line":4871,"column":207,"offset":149134}}}],"position":{"start":{"line":4871,"column":1,"offset":148928},"end":{"line":4871,"column":207,"offset":149134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The third exercise is to find that the sum of divisors of a given integer. ","position":{"start":{"line":4872,"column":4,"offset":149139},"end":{"line":4872,"column":79,"offset":149214}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Hint","position":{"start":{"line":4872,"column":81,"offset":149216},"end":{"line":4872,"column":85,"offset":149220}}}],"position":{"start":{"line":4872,"column":79,"offset":149214},"end":{"line":4872,"column":87,"offset":149222}}},{"type":"text","value":": Let's say we want to find out the sum of the divisors of ","position":{"start":{"line":4872,"column":87,"offset":149222},"end":{"line":4872,"column":146,"offset":149281}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":4872,"column":146,"offset":149281},"end":{"line":4872,"column":150,"offset":149285}}},{"type":"text","value":". The divisors of ","position":{"start":{"line":4872,"column":150,"offset":149285},"end":{"line":4872,"column":168,"offset":149303}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":4872,"column":168,"offset":149303},"end":{"line":4872,"column":172,"offset":149307}}},{"type":"text","value":" are ","position":{"start":{"line":4872,"column":172,"offset":149307},"end":{"line":4872,"column":177,"offset":149312}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4872,"column":177,"offset":149312},"end":{"line":4872,"column":180,"offset":149315}}},{"type":"text","value":", ","position":{"start":{"line":4872,"column":180,"offset":149315},"end":{"line":4872,"column":182,"offset":149317}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":4872,"column":182,"offset":149317},"end":{"line":4872,"column":185,"offset":149320}}},{"type":"text","value":", ","position":{"start":{"line":4872,"column":185,"offset":149320},"end":{"line":4872,"column":187,"offset":149322}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":4872,"column":187,"offset":149322},"end":{"line":4872,"column":190,"offset":149325}}},{"type":"text","value":" and ","position":{"start":{"line":4872,"column":190,"offset":149325},"end":{"line":4872,"column":195,"offset":149330}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":4872,"column":195,"offset":149330},"end":{"line":4872,"column":199,"offset":149334}}},{"type":"text","value":". So I would want to calculate ","position":{"start":{"line":4872,"column":199,"offset":149334},"end":{"line":4872,"column":230,"offset":149365}}},{"type":"raw","value":"<code class=\"language-text\">1 + 3 + 5 + 15</code>","position":{"start":{"line":4872,"column":230,"offset":149365},"end":{"line":4872,"column":246,"offset":149381}}},{"type":"text","value":", and return that value.","position":{"start":{"line":4872,"column":246,"offset":149381},"end":{"line":4872,"column":270,"offset":149405}}}],"position":{"start":{"line":4872,"column":1,"offset":149136},"end":{"line":4872,"column":270,"offset":149405}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Fourth exercise is to print a numbered triangle, when given a specific integer.","position":{"start":{"line":4873,"column":4,"offset":149410},"end":{"line":4873,"column":83,"offset":149489}}}],"position":{"start":{"line":4873,"column":1,"offset":149407},"end":{"line":4873,"column":83,"offset":149489}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4868,"column":1,"offset":148452},"end":{"line":4873,"column":83,"offset":149489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hint: Given an input ","position":{"start":{"line":4875,"column":1,"offset":149493},"end":{"line":4875,"column":22,"offset":149514}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":4875,"column":22,"offset":149514},"end":{"line":4875,"column":25,"offset":149517}}},{"type":"text","value":", we would want to print the number triangle of these kind:","position":{"start":{"line":4875,"column":25,"offset":149517},"end":{"line":4875,"column":84,"offset":149576}}}],"position":{"start":{"line":4875,"column":1,"offset":149493},"end":{"line":4875,"column":84,"offset":149576}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5.</span></code></pre></div>","position":{"start":{"line":4877,"column":1,"offset":149580},"end":{"line":4883,"column":4,"offset":149630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These are the exercises for the ","position":{"start":{"line":4885,"column":1,"offset":149634},"end":{"line":4885,"column":33,"offset":149666}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4885,"column":33,"offset":149666},"end":{"line":4885,"column":38,"offset":149671}}},{"type":"text","value":" loop. We also test our skills, with creating method and executing them, in our IDE.","position":{"start":{"line":4885,"column":38,"offset":149671},"end":{"line":4885,"column":122,"offset":149755}}}],"position":{"start":{"line":4885,"column":1,"offset":149634},"end":{"line":4885,"column":122,"offset":149755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Solution 1","position":{"start":{"line":4887,"column":3,"offset":149761},"end":{"line":4887,"column":13,"offset":149771}}}],"position":{"start":{"line":4887,"column":1,"offset":149759},"end":{"line":4887,"column":15,"offset":149773}}}],"position":{"start":{"line":4887,"column":1,"offset":149759},"end":{"line":4887,"column":15,"offset":149773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's start with creating the ","position":{"start":{"line":4889,"column":1,"offset":149777},"end":{"line":4889,"column":31,"offset":149807}}},{"type":"raw","value":"<code class=\"language-text\">is_prime()</code>","position":{"start":{"line":4889,"column":31,"offset":149807},"end":{"line":4889,"column":43,"offset":149819}}},{"type":"text","value":" method, in a file named ","position":{"start":{"line":4889,"column":43,"offset":149819},"end":{"line":4889,"column":68,"offset":149844}}},{"type":"raw","value":"<code class=\"language-text\">for_exercises</code>","position":{"start":{"line":4889,"column":68,"offset":149844},"end":{"line":4889,"column":83,"offset":149859}}},{"type":"text","value":".","position":{"start":{"line":4889,"column":83,"offset":149859},"end":{"line":4889,"column":84,"offset":149860}}}],"position":{"start":{"line":4889,"column":1,"offset":149777},"end":{"line":4889,"column":84,"offset":149860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We would want to accept an ","position":{"start":{"line":4891,"column":1,"offset":149864},"end":{"line":4891,"column":28,"offset":149891}}},{"type":"raw","value":"<code class=\"language-text\">int</code>","position":{"start":{"line":4891,"column":28,"offset":149891},"end":{"line":4891,"column":33,"offset":149896}}},{"type":"text","value":" parameter, and find out if it is prime, or not.","position":{"start":{"line":4891,"column":33,"offset":149896},"end":{"line":4891,"column":81,"offset":149944}}}],"position":{"start":{"line":4891,"column":1,"offset":149864},"end":{"line":4891,"column":81,"offset":149944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We need to check whether it's divisible by any other number, other than ","position":{"start":{"line":4893,"column":1,"offset":149948},"end":{"line":4893,"column":73,"offset":150020}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4893,"column":73,"offset":150020},"end":{"line":4893,"column":76,"offset":150023}}},{"type":"text","value":" and itself. If we are passed in a value of ","position":{"start":{"line":4893,"column":76,"offset":150023},"end":{"line":4893,"column":120,"offset":150067}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":4893,"column":120,"offset":150067},"end":{"line":4893,"column":123,"offset":150070}}},{"type":"text","value":", you want to see if it's divisible by any of ","position":{"start":{"line":4893,"column":123,"offset":150070},"end":{"line":4893,"column":169,"offset":150116}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":4893,"column":169,"offset":150116},"end":{"line":4893,"column":172,"offset":150119}}},{"type":"text","value":", ","position":{"start":{"line":4893,"column":172,"offset":150119},"end":{"line":4893,"column":174,"offset":150121}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":4893,"column":174,"offset":150121},"end":{"line":4893,"column":177,"offset":150124}}},{"type":"text","value":" or ","position":{"start":{"line":4893,"column":177,"offset":150124},"end":{"line":4893,"column":181,"offset":150128}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":4893,"column":181,"offset":150128},"end":{"line":4893,"column":184,"offset":150131}}},{"type":"text","value":".","position":{"start":{"line":4893,"column":184,"offset":150131},"end":{"line":4893,"column":185,"offset":150132}}}],"position":{"start":{"line":4893,"column":1,"offset":149948},"end":{"line":4893,"column":185,"offset":150132}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">is_prime</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></code></pre></div>","position":{"start":{"line":4895,"column":1,"offset":150136},"end":{"line":4897,"column":4,"offset":150173}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can use a ","position":{"start":{"line":4899,"column":1,"offset":150177},"end":{"line":4899,"column":14,"offset":150190}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":4899,"column":14,"offset":150190},"end":{"line":4899,"column":19,"offset":150195}}},{"type":"text","value":" loop. We can structure it like this: ","position":{"start":{"line":4899,"column":19,"offset":150195},"end":{"line":4899,"column":57,"offset":150233}}},{"type":"raw","value":"<code class=\"language-text\">for divisor in range(1, number): ...</code>","position":{"start":{"line":4899,"column":57,"offset":150233},"end":{"line":4899,"column":95,"offset":150271}}},{"type":"text","value":". We would not want to divide it with ","position":{"start":{"line":4899,"column":95,"offset":150271},"end":{"line":4899,"column":133,"offset":150309}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4899,"column":133,"offset":150309},"end":{"line":4899,"column":136,"offset":150312}}},{"type":"text","value":", but start with ","position":{"start":{"line":4899,"column":136,"offset":150312},"end":{"line":4899,"column":153,"offset":150329}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":4899,"column":153,"offset":150329},"end":{"line":4899,"column":156,"offset":150332}}},{"type":"text","value":" instead, and go up to ","position":{"start":{"line":4899,"column":156,"offset":150332},"end":{"line":4899,"column":179,"offset":150355}}},{"type":"raw","value":"<code class=\"language-text\">number-1</code>","position":{"start":{"line":4899,"column":179,"offset":150355},"end":{"line":4899,"column":189,"offset":150365}}},{"type":"text","value":", which is ","position":{"start":{"line":4899,"column":189,"offset":150365},"end":{"line":4899,"column":200,"offset":150376}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":4899,"column":200,"offset":150376},"end":{"line":4899,"column":203,"offset":150379}}},{"type":"text","value":".","position":{"start":{"line":4899,"column":203,"offset":150379},"end":{"line":4899,"column":204,"offset":150380}}}],"position":{"start":{"line":4899,"column":1,"offset":150177},"end":{"line":4899,"column":204,"offset":150380}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> divisor <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></code></pre></div>","position":{"start":{"line":4901,"column":1,"offset":150384},"end":{"line":4903,"column":4,"offset":150431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How can we check if the ","position":{"start":{"line":4905,"column":1,"offset":150435},"end":{"line":4905,"column":25,"offset":150459}}},{"type":"raw","value":"<code class=\"language-text\">number</code>","position":{"start":{"line":4905,"column":25,"offset":150459},"end":{"line":4905,"column":33,"offset":150467}}},{"type":"text","value":" is divisible by ","position":{"start":{"line":4905,"column":33,"offset":150467},"end":{"line":4905,"column":50,"offset":150484}}},{"type":"raw","value":"<code class=\"language-text\">divisor</code>","position":{"start":{"line":4905,"column":50,"offset":150484},"end":{"line":4905,"column":59,"offset":150493}}},{"type":"text","value":"?","position":{"start":{"line":4905,"column":59,"offset":150493},"end":{"line":4905,"column":60,"offset":150494}}}],"position":{"start":{"line":4905,"column":1,"offset":150435},"end":{"line":4905,"column":60,"offset":150494}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By using the ","position":{"start":{"line":4907,"column":1,"offset":150498},"end":{"line":4907,"column":14,"offset":150511}}},{"type":"raw","value":"<code class=\"language-text\">%</code>","position":{"start":{"line":4907,"column":14,"offset":150511},"end":{"line":4907,"column":17,"offset":150514}}},{"type":"text","value":" operator. If ","position":{"start":{"line":4907,"column":17,"offset":150514},"end":{"line":4907,"column":31,"offset":150528}}},{"type":"raw","value":"<code class=\"language-text\">number</code>","position":{"start":{"line":4907,"column":31,"offset":150528},"end":{"line":4907,"column":39,"offset":150536}}},{"type":"text","value":" is divisible by ","position":{"start":{"line":4907,"column":39,"offset":150536},"end":{"line":4907,"column":56,"offset":150553}}},{"type":"raw","value":"<code class=\"language-text\">divisor</code>","position":{"start":{"line":4907,"column":56,"offset":150553},"end":{"line":4907,"column":65,"offset":150562}}},{"type":"text","value":" we return ","position":{"start":{"line":4907,"column":65,"offset":150562},"end":{"line":4907,"column":76,"offset":150573}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":4907,"column":76,"offset":150573},"end":{"line":4907,"column":83,"offset":150580}}},{"type":"text","value":".","position":{"start":{"line":4907,"column":83,"offset":150580},"end":{"line":4907,"column":84,"offset":150581}}}],"position":{"start":{"line":4907,"column":1,"offset":150498},"end":{"line":4907,"column":84,"offset":150581}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> divisor <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> number <span class=\"token operator\">%</span> divisor <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code></pre></div>","position":{"start":{"line":4909,"column":1,"offset":150585},"end":{"line":4913,"column":4,"offset":150685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What happens if the code comes up to the end? It would mean we tried with ","position":{"start":{"line":4915,"column":1,"offset":150689},"end":{"line":4915,"column":75,"offset":150763}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":4915,"column":75,"offset":150763},"end":{"line":4915,"column":78,"offset":150766}}},{"type":"text","value":", ","position":{"start":{"line":4915,"column":78,"offset":150766},"end":{"line":4915,"column":80,"offset":150768}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":4915,"column":80,"offset":150768},"end":{"line":4915,"column":83,"offset":150771}}},{"type":"text","value":" and ","position":{"start":{"line":4915,"column":83,"offset":150771},"end":{"line":4915,"column":88,"offset":150776}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":4915,"column":88,"offset":150776},"end":{"line":4915,"column":91,"offset":150779}}},{"type":"text","value":", but ","position":{"start":{"line":4915,"column":91,"offset":150779},"end":{"line":4915,"column":97,"offset":150785}}},{"type":"raw","value":"<code class=\"language-text\">number</code>","position":{"start":{"line":4915,"column":97,"offset":150785},"end":{"line":4915,"column":105,"offset":150793}}},{"type":"text","value":" was not divisible by all of them. In that case, ","position":{"start":{"line":4915,"column":105,"offset":150793},"end":{"line":4915,"column":154,"offset":150842}}},{"type":"raw","value":"<code class=\"language-text\">number</code>","position":{"start":{"line":4915,"column":154,"offset":150842},"end":{"line":4915,"column":162,"offset":150850}}},{"type":"text","value":" would be prime, and we can safely return ","position":{"start":{"line":4915,"column":162,"offset":150850},"end":{"line":4915,"column":204,"offset":150892}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":4915,"column":204,"offset":150892},"end":{"line":4915,"column":210,"offset":150898}}},{"type":"text","value":".","position":{"start":{"line":4915,"column":210,"offset":150898},"end":{"line":4915,"column":211,"offset":150899}}}],"position":{"start":{"line":4915,"column":1,"offset":150689},"end":{"line":4915,"column":211,"offset":150899}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> divisor <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> number <span class=\"token operator\">%</span> divisor <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></code></pre></div>","position":{"start":{"line":4917,"column":1,"offset":150903},"end":{"line":4923,"column":4,"offset":151018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For ","position":{"start":{"line":4925,"column":1,"offset":151022},"end":{"line":4925,"column":5,"offset":151026}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4925,"column":5,"offset":151026},"end":{"line":4925,"column":8,"offset":151029}}},{"type":"text","value":", the rules are a little different, as it is neither a prime or composite. We will add an ","position":{"start":{"line":4925,"column":8,"offset":151029},"end":{"line":4925,"column":98,"offset":151119}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4925,"column":98,"offset":151119},"end":{"line":4925,"column":102,"offset":151123}}},{"type":"text","value":" condition to check if the number is ","position":{"start":{"line":4925,"column":102,"offset":151123},"end":{"line":4925,"column":139,"offset":151160}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4925,"column":139,"offset":151160},"end":{"line":4925,"column":142,"offset":151163}}},{"type":"text","value":". ","position":{"start":{"line":4925,"column":142,"offset":151163},"end":{"line":4925,"column":144,"offset":151165}}},{"type":"raw","value":"<code class=\"language-text\">if(number &lt; 2):</code>","position":{"start":{"line":4925,"column":144,"offset":151165},"end":{"line":4925,"column":161,"offset":151182}}}],"position":{"start":{"line":4925,"column":1,"offset":151022},"end":{"line":4925,"column":161,"offset":151182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This ","position":{"start":{"line":4927,"column":1,"offset":151186},"end":{"line":4927,"column":6,"offset":151191}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":4927,"column":6,"offset":151191},"end":{"line":4927,"column":10,"offset":151195}}},{"type":"text","value":" condition is called a guard check or a boundary check, to make sure that you are processing only the right input. If ","position":{"start":{"line":4927,"column":10,"offset":151195},"end":{"line":4927,"column":128,"offset":151313}}},{"type":"raw","value":"<code class=\"language-text\">number</code>","position":{"start":{"line":4927,"column":128,"offset":151313},"end":{"line":4927,"column":136,"offset":151321}}},{"type":"text","value":" has a value less than ","position":{"start":{"line":4927,"column":136,"offset":151321},"end":{"line":4927,"column":159,"offset":151344}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":4927,"column":159,"offset":151344},"end":{"line":4927,"column":162,"offset":151347}}},{"type":"text","value":", do nothing. OK, it's not a prime.","position":{"start":{"line":4927,"column":162,"offset":151347},"end":{"line":4927,"column":197,"offset":151382}}}],"position":{"start":{"line":4927,"column":1,"offset":151186},"end":{"line":4927,"column":197,"offset":151382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the entire code at one place, for your reference:","position":{"start":{"line":4929,"column":1,"offset":151386},"end":{"line":4929,"column":58,"offset":151443}}}],"position":{"start":{"line":4929,"column":1,"offset":151386},"end":{"line":4929,"column":58,"offset":151443}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">is_prime</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n    <span class=\"token keyword\">for</span> divisor <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> number <span class=\"token operator\">%</span> divisor <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_prime<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":4931,"column":1,"offset":151447},"end":{"line":4940,"column":4,"offset":151663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 03: Continued - Programming Exercise PE-LO-01","position":{"start":{"line":4942,"column":3,"offset":151669},"end":{"line":4942,"column":53,"offset":151719}}}],"position":{"start":{"line":4942,"column":1,"offset":151667},"end":{"line":4942,"column":55,"offset":151721}}}],"position":{"start":{"line":4942,"column":1,"offset":151667},"end":{"line":4942,"column":55,"offset":151721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step, we looked at solving the ","position":{"start":{"line":4944,"column":1,"offset":151725},"end":{"line":4944,"column":48,"offset":151772}}},{"type":"raw","value":"<code class=\"language-text\">is_prime()</code>","position":{"start":{"line":4944,"column":48,"offset":151772},"end":{"line":4944,"column":60,"offset":151784}}},{"type":"text","value":" exercise. In this step, let's look at an implementation of ","position":{"start":{"line":4944,"column":60,"offset":151784},"end":{"line":4944,"column":120,"offset":151844}}},{"type":"raw","value":"<code class=\"language-text\">sum_up_to_n()</code>","position":{"start":{"line":4944,"column":120,"offset":151844},"end":{"line":4944,"column":135,"offset":151859}}},{"type":"text","value":". Here is the entire code for this exercise:","position":{"start":{"line":4944,"column":135,"offset":151859},"end":{"line":4944,"column":179,"offset":151903}}}],"position":{"start":{"line":4944,"column":1,"offset":151725},"end":{"line":4944,"column":179,"offset":151903}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sum_upto_n</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span> <span class=\"token operator\">+</span> i\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sum_upto_n<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sum_upto_n<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":4946,"column":1,"offset":151907},"end":{"line":4954,"column":4,"offset":152077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":4956,"column":3,"offset":152083},"end":{"line":4956,"column":10,"offset":152090}}}],"position":{"start":{"line":4956,"column":1,"offset":152081},"end":{"line":4956,"column":12,"offset":152092}}}],"position":{"start":{"line":4956,"column":1,"offset":152081},"end":{"line":4956,"column":12,"offset":152092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":4958,"column":1,"offset":152096},"end":{"line":4958,"column":18,"offset":152113}}}],"position":{"start":{"line":4958,"column":1,"offset":152096},"end":{"line":4958,"column":18,"offset":152113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Wrote a Python function to compute the sum of all integers, from ","position":{"start":{"line":4960,"column":5,"offset":152121},"end":{"line":4960,"column":70,"offset":152186}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":4960,"column":70,"offset":152186},"end":{"line":4960,"column":73,"offset":152189}}},{"type":"text","value":", up to the input integer ","position":{"start":{"line":4960,"column":73,"offset":152189},"end":{"line":4960,"column":99,"offset":152215}}},{"type":"raw","value":"<code class=\"language-text\">n</code>","position":{"start":{"line":4960,"column":99,"offset":152215},"end":{"line":4960,"column":102,"offset":152218}}},{"type":"text","value":".","position":{"start":{"line":4960,"column":102,"offset":152218},"end":{"line":4960,"column":103,"offset":152219}}}],"position":{"start":{"line":4960,"column":1,"offset":152117},"end":{"line":4960,"column":103,"offset":152219}}},{"type":"text","value":"\n"}],"position":{"start":{"line":4960,"column":1,"offset":152117},"end":{"line":4960,"column":103,"offset":152219}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 04: Continued - Programming Exercise PE-LO-01","position":{"start":{"line":4962,"column":3,"offset":152225},"end":{"line":4962,"column":53,"offset":152275}}}],"position":{"start":{"line":4962,"column":1,"offset":152223},"end":{"line":4962,"column":55,"offset":152277}}}],"position":{"start":{"line":4962,"column":1,"offset":152223},"end":{"line":4962,"column":55,"offset":152277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's focus on the third exercise, ","position":{"start":{"line":4964,"column":1,"offset":152281},"end":{"line":4964,"column":36,"offset":152316}}},{"type":"raw","value":"<code class=\"language-text\">sum_of_divisors</code>","position":{"start":{"line":4964,"column":36,"offset":152316},"end":{"line":4964,"column":53,"offset":152333}}},{"type":"text","value":".","position":{"start":{"line":4964,"column":53,"offset":152333},"end":{"line":4964,"column":54,"offset":152334}}}],"position":{"start":{"line":4964,"column":1,"offset":152281},"end":{"line":4964,"column":54,"offset":152334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the clues we can give you, is that ","position":{"start":{"line":4966,"column":1,"offset":152338},"end":{"line":4966,"column":43,"offset":152380}}},{"type":"raw","value":"<code class=\"language-text\">sum_of_divisors()</code>","position":{"start":{"line":4966,"column":43,"offset":152380},"end":{"line":4966,"column":62,"offset":152399}}},{"type":"text","value":" is very similar to ","position":{"start":{"line":4966,"column":62,"offset":152399},"end":{"line":4966,"column":82,"offset":152419}}},{"type":"raw","value":"<code class=\"language-text\">is_prime()</code>","position":{"start":{"line":4966,"column":82,"offset":152419},"end":{"line":4966,"column":94,"offset":152431}}},{"type":"text","value":".","position":{"start":{"line":4966,"column":94,"offset":152431},"end":{"line":4966,"column":95,"offset":152432}}}],"position":{"start":{"line":4966,"column":1,"offset":152338},"end":{"line":4966,"column":95,"offset":152432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You want to find out if a number is dividing ","position":{"start":{"line":4968,"column":1,"offset":152436},"end":{"line":4968,"column":46,"offset":152481}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":4968,"column":46,"offset":152481},"end":{"line":4968,"column":50,"offset":152485}}},{"type":"text","value":", and if it's dividing ","position":{"start":{"line":4968,"column":50,"offset":152485},"end":{"line":4968,"column":73,"offset":152508}}},{"type":"raw","value":"<code class=\"language-text\">15</code>","position":{"start":{"line":4968,"column":73,"offset":152508},"end":{"line":4968,"column":77,"offset":152512}}},{"type":"text","value":", with the remainder of ","position":{"start":{"line":4968,"column":77,"offset":152512},"end":{"line":4968,"column":101,"offset":152536}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":4968,"column":101,"offset":152536},"end":{"line":4968,"column":104,"offset":152539}}},{"type":"text","value":", then you need to add that up.","position":{"start":{"line":4968,"column":104,"offset":152539},"end":{"line":4968,"column":135,"offset":152570}}}],"position":{"start":{"line":4968,"column":1,"offset":152436},"end":{"line":4968,"column":135,"offset":152570}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">calculate_sum_of_divisors</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>number <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span>\n    <span class=\"token keyword\">for</span> divisor <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>number<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> number <span class=\"token operator\">%</span> divisor <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span> <span class=\"token operator\">+</span> divisor\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>calculate_sum_of_divisors<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>calculate_sum_of_divisors<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":4970,"column":1,"offset":152574},"end":{"line":4981,"column":4,"offset":152880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 05: Continued - Programming Exercise PE-LO-01","position":{"start":{"line":4983,"column":3,"offset":152886},"end":{"line":4983,"column":53,"offset":152936}}}],"position":{"start":{"line":4983,"column":1,"offset":152884},"end":{"line":4983,"column":55,"offset":152938}}}],"position":{"start":{"line":4983,"column":1,"offset":152884},"end":{"line":4983,"column":55,"offset":152938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, Let's look at the last exercise - ","position":{"start":{"line":4985,"column":1,"offset":152942},"end":{"line":4985,"column":49,"offset":152990}}},{"type":"raw","value":"<code class=\"language-text\">print_a_number_triangle</code>","position":{"start":{"line":4985,"column":49,"offset":152990},"end":{"line":4985,"column":74,"offset":153015}}},{"type":"text","value":".","position":{"start":{"line":4985,"column":74,"offset":153015},"end":{"line":4985,"column":75,"offset":153016}}}],"position":{"start":{"line":4985,"column":1,"offset":152942},"end":{"line":4985,"column":75,"offset":153016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, if we call such a function with input ","position":{"start":{"line":4987,"column":1,"offset":153020},"end":{"line":4987,"column":52,"offset":153071}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":4987,"column":52,"offset":153071},"end":{"line":4987,"column":55,"offset":153074}}},{"type":"text","value":", the output needs to be:","position":{"start":{"line":4987,"column":55,"offset":153074},"end":{"line":4987,"column":80,"offset":153099}}}],"position":{"start":{"line":4987,"column":1,"offset":153020},"end":{"line":4987,"column":80,"offset":153099}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1</span>\n\n<span class=\"token number\">1</span> <span class=\"token number\">2</span>\n\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span>\n\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span>\n\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":4989,"column":1,"offset":153103},"end":{"line":4999,"column":4,"offset":153160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let start with a simple thing. Let's try and print ","position":{"start":{"line":5001,"column":1,"offset":153164},"end":{"line":5001,"column":52,"offset":153215}}},{"type":"raw","value":"<code class=\"language-text\">1 2 3 4 5</code>","position":{"start":{"line":5001,"column":52,"offset":153215},"end":{"line":5001,"column":63,"offset":153226}}},{"type":"text","value":" first, and then we would look at how to print the rest of the output. Lets proceed with defining this method.","position":{"start":{"line":5001,"column":63,"offset":153226},"end":{"line":5001,"column":173,"offset":153336}}}],"position":{"start":{"line":5001,"column":1,"offset":153164},"end":{"line":5001,"column":173,"offset":153336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can say ","position":{"start":{"line":5003,"column":1,"offset":153340},"end":{"line":5003,"column":12,"offset":153351}}},{"type":"raw","value":"<code class=\"language-text\">def print_a_number_triangle(number): ...</code>","position":{"start":{"line":5003,"column":12,"offset":153351},"end":{"line":5003,"column":54,"offset":153393}}},{"type":"text","value":" that takes a number as an input. You want to print a sequence of integers starting from ","position":{"start":{"line":5003,"column":54,"offset":153393},"end":{"line":5003,"column":143,"offset":153482}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":5003,"column":143,"offset":153482},"end":{"line":5003,"column":146,"offset":153485}}},{"type":"text","value":", up to that specific ","position":{"start":{"line":5003,"column":146,"offset":153485},"end":{"line":5003,"column":168,"offset":153507}}},{"type":"raw","value":"<code class=\"language-text\">number</code>","position":{"start":{"line":5003,"column":168,"offset":153507},"end":{"line":5003,"column":176,"offset":153515}}},{"type":"text","value":". How can you do that? Let's try this: ","position":{"start":{"line":5003,"column":176,"offset":153515},"end":{"line":5003,"column":215,"offset":153554}}},{"type":"raw","value":"<code class=\"language-text\">for i in range(1,number+1): print(i)</code>","position":{"start":{"line":5003,"column":215,"offset":153554},"end":{"line":5003,"column":253,"offset":153592}}},{"type":"text","value":" What would happen? Let's call ","position":{"start":{"line":5003,"column":253,"offset":153592},"end":{"line":5003,"column":284,"offset":153623}}},{"type":"raw","value":"<code class=\"language-text\">print_a_number_triangle(5)</code>","position":{"start":{"line":5003,"column":284,"offset":153623},"end":{"line":5003,"column":312,"offset":153651}}},{"type":"text","value":" now. It prints:","position":{"start":{"line":5003,"column":312,"offset":153651},"end":{"line":5003,"column":328,"offset":153667}}}],"position":{"start":{"line":5003,"column":1,"offset":153340},"end":{"line":5003,"column":328,"offset":153667}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span>\n    <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":5005,"column":1,"offset":153671},"end":{"line":5011,"column":4,"offset":153720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"on individual lines.","position":{"start":{"line":5013,"column":1,"offset":153724},"end":{"line":5013,"column":21,"offset":153744}}}],"position":{"start":{"line":5013,"column":1,"offset":153724},"end":{"line":5013,"column":21,"offset":153744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To print this sequence on a single line, let's delimit them with ","position":{"start":{"line":5015,"column":1,"offset":153748},"end":{"line":5015,"column":66,"offset":153813}}},{"type":"raw","value":"<code class=\"language-text\">&lt;SPACE></code>","position":{"start":{"line":5015,"column":66,"offset":153813},"end":{"line":5015,"column":75,"offset":153822}}},{"type":"text","value":" instead. Call ","position":{"start":{"line":5015,"column":75,"offset":153822},"end":{"line":5015,"column":90,"offset":153837}}},{"type":"raw","value":"<code class=\"language-text\">print()</code>","position":{"start":{"line":5015,"column":90,"offset":153837},"end":{"line":5015,"column":99,"offset":153846}}},{"type":"text","value":" like this instead: ","position":{"start":{"line":5015,"column":99,"offset":153846},"end":{"line":5015,"column":119,"offset":153866}}},{"type":"raw","value":"<code class=\"language-text\">for i in range(1,number+1): print(i, end=\" \")</code>","position":{"start":{"line":5015,"column":119,"offset":153866},"end":{"line":5015,"column":166,"offset":153913}}},{"type":"text","value":".","position":{"start":{"line":5015,"column":166,"offset":153913},"end":{"line":5015,"column":167,"offset":153914}}}],"position":{"start":{"line":5015,"column":1,"offset":153748},"end":{"line":5015,"column":167,"offset":153914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's see what would happen now. ","position":{"start":{"line":5017,"column":1,"offset":153918},"end":{"line":5017,"column":34,"offset":153951}}},{"type":"raw","value":"<code class=\"language-text\">1 2 3 4 5</code>","position":{"start":{"line":5017,"column":34,"offset":153951},"end":{"line":5017,"column":45,"offset":153962}}}],"position":{"start":{"line":5017,"column":1,"offset":153918},"end":{"line":5017,"column":45,"offset":153962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To solve our exercise, we want to repeat this again and again.","position":{"start":{"line":5019,"column":1,"offset":153966},"end":{"line":5019,"column":63,"offset":154028}}}],"position":{"start":{"line":5019,"column":1,"offset":153966},"end":{"line":5019,"column":63,"offset":154028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Yes, we need another for loop around it!","position":{"start":{"line":5021,"column":1,"offset":154032},"end":{"line":5021,"column":41,"offset":154072}}}],"position":{"start":{"line":5021,"column":1,"offset":154032},"end":{"line":5021,"column":41,"offset":154072}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> number <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":5023,"column":1,"offset":154076},"end":{"line":5027,"column":4,"offset":154183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Make sure that you have the indentation right. This is called ","position":{"start":{"line":5029,"column":1,"offset":154187},"end":{"line":5029,"column":63,"offset":154249}}},{"type":"raw","value":"<code class=\"language-text\">loop within a loop</code>","position":{"start":{"line":5029,"column":63,"offset":154249},"end":{"line":5029,"column":83,"offset":154269}}},{"type":"text","value":".","position":{"start":{"line":5029,"column":83,"offset":154269},"end":{"line":5029,"column":84,"offset":154270}}}],"position":{"start":{"line":5029,"column":1,"offset":154187},"end":{"line":5029,"column":84,"offset":154270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The output of above program is","position":{"start":{"line":5031,"column":1,"offset":154274},"end":{"line":5031,"column":31,"offset":154304}}}],"position":{"start":{"line":5031,"column":1,"offset":154274},"end":{"line":5031,"column":31,"offset":154304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5</code>","position":{"start":{"line":5033,"column":1,"offset":154308},"end":{"line":5033,"column":52,"offset":154359}}}],"position":{"start":{"line":5033,"column":1,"offset":154308},"end":{"line":5033,"column":52,"offset":154359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's add ","position":{"start":{"line":5035,"column":1,"offset":154363},"end":{"line":5035,"column":11,"offset":154373}}},{"type":"raw","value":"<code class=\"language-text\">print(\"\\n\")</code>","position":{"start":{"line":5035,"column":11,"offset":154373},"end":{"line":5035,"column":24,"offset":154386}}},{"type":"text","value":", so we have a new line at the end of each outer loop iteration.","position":{"start":{"line":5035,"column":24,"offset":154386},"end":{"line":5035,"column":88,"offset":154450}}}],"position":{"start":{"line":5035,"column":1,"offset":154363},"end":{"line":5035,"column":88,"offset":154450}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> number <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":5037,"column":1,"offset":154454},"end":{"line":5042,"column":4,"offset":154578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Output","position":{"start":{"line":5044,"column":1,"offset":154582},"end":{"line":5044,"column":7,"offset":154588}}}],"position":{"start":{"line":5044,"column":1,"offset":154582},"end":{"line":5044,"column":7,"offset":154588}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span>\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":5046,"column":1,"offset":154592},"end":{"line":5052,"column":4,"offset":154661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We are printing a square, not a triangle.","position":{"start":{"line":5054,"column":1,"offset":154665},"end":{"line":5054,"column":42,"offset":154706}}}],"position":{"start":{"line":5054,"column":1,"offset":154665},"end":{"line":5054,"column":42,"offset":154706}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What we want to do is to print up to ","position":{"start":{"line":5056,"column":1,"offset":154710},"end":{"line":5056,"column":38,"offset":154747}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":5056,"column":38,"offset":154747},"end":{"line":5056,"column":41,"offset":154750}}},{"type":"text","value":" in first line, upto ","position":{"start":{"line":5056,"column":41,"offset":154750},"end":{"line":5056,"column":62,"offset":154771}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":5056,"column":62,"offset":154771},"end":{"line":5056,"column":65,"offset":154774}}},{"type":"text","value":" in second line and so on.","position":{"start":{"line":5056,"column":65,"offset":154774},"end":{"line":5056,"column":91,"offset":154800}}}],"position":{"start":{"line":5056,"column":1,"offset":154710},"end":{"line":5056,"column":91,"offset":154800}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"How can we do that? Think about it.","position":{"start":{"line":5058,"column":1,"offset":154804},"end":{"line":5058,"column":36,"offset":154839}}}],"position":{"start":{"line":5058,"column":1,"offset":154804},"end":{"line":5058,"column":36,"offset":154839}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When you are inside this loop, you can see the variable ","position":{"start":{"line":5060,"column":1,"offset":154843},"end":{"line":5060,"column":57,"offset":154899}}},{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":5060,"column":57,"offset":154899},"end":{"line":5060,"column":60,"offset":154902}}},{"type":"text","value":".","position":{"start":{"line":5060,"column":60,"offset":154902},"end":{"line":5060,"column":61,"offset":154903}}}],"position":{"start":{"line":5060,"column":1,"offset":154843},"end":{"line":5060,"column":61,"offset":154903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of ","position":{"start":{"line":5062,"column":1,"offset":154907},"end":{"line":5062,"column":12,"offset":154918}}},{"type":"raw","value":"<code class=\"language-text\">number+1</code>","position":{"start":{"line":5062,"column":12,"offset":154918},"end":{"line":5062,"column":22,"offset":154928}}},{"type":"text","value":", let's say ","position":{"start":{"line":5062,"column":22,"offset":154928},"end":{"line":5062,"column":34,"offset":154940}}},{"type":"raw","value":"<code class=\"language-text\">j + 1</code>","position":{"start":{"line":5062,"column":34,"offset":154940},"end":{"line":5062,"column":41,"offset":154947}}},{"type":"text","value":".","position":{"start":{"line":5062,"column":41,"offset":154947},"end":{"line":5062,"column":42,"offset":154948}}}],"position":{"start":{"line":5062,"column":1,"offset":154907},"end":{"line":5062,"column":42,"offset":154948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When ","position":{"start":{"line":5064,"column":1,"offset":154952},"end":{"line":5064,"column":6,"offset":154957}}},{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":5064,"column":6,"offset":154957},"end":{"line":5064,"column":9,"offset":154960}}},{"type":"text","value":" has a value of ","position":{"start":{"line":5064,"column":9,"offset":154960},"end":{"line":5064,"column":25,"offset":154976}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":5064,"column":25,"offset":154976},"end":{"line":5064,"column":28,"offset":154979}}},{"type":"text","value":", ","position":{"start":{"line":5064,"column":28,"offset":154979},"end":{"line":5064,"column":30,"offset":154981}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":5064,"column":30,"offset":154981},"end":{"line":5064,"column":35,"offset":154986}}},{"type":"text","value":" will print from ","position":{"start":{"line":5064,"column":35,"offset":154986},"end":{"line":5064,"column":52,"offset":155003}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":5064,"column":52,"offset":155003},"end":{"line":5064,"column":55,"offset":155006}}},{"type":"text","value":" to ","position":{"start":{"line":5064,"column":55,"offset":155006},"end":{"line":5064,"column":59,"offset":155010}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":5064,"column":59,"offset":155010},"end":{"line":5064,"column":62,"offset":155013}}},{"type":"text","value":". When ","position":{"start":{"line":5064,"column":62,"offset":155013},"end":{"line":5064,"column":69,"offset":155020}}},{"type":"raw","value":"<code class=\"language-text\">j</code>","position":{"start":{"line":5064,"column":69,"offset":155020},"end":{"line":5064,"column":72,"offset":155023}}},{"type":"text","value":" has a value of ","position":{"start":{"line":5064,"column":72,"offset":155023},"end":{"line":5064,"column":88,"offset":155039}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":5064,"column":88,"offset":155039},"end":{"line":5064,"column":91,"offset":155042}}},{"type":"text","value":", print from ","position":{"start":{"line":5064,"column":91,"offset":155042},"end":{"line":5064,"column":104,"offset":155055}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":5064,"column":104,"offset":155055},"end":{"line":5064,"column":107,"offset":155058}}},{"type":"text","value":" to ","position":{"start":{"line":5064,"column":107,"offset":155058},"end":{"line":5064,"column":111,"offset":155062}}},{"type":"raw","value":"<code class=\"language-text\">2</code>","position":{"start":{"line":5064,"column":111,"offset":155062},"end":{"line":5064,"column":114,"offset":155065}}},{"type":"text","value":", literally printing ","position":{"start":{"line":5064,"column":114,"offset":155065},"end":{"line":5064,"column":135,"offset":155086}}},{"type":"raw","value":"<code class=\"language-text\">1 2</code>","position":{"start":{"line":5064,"column":135,"offset":155086},"end":{"line":5064,"column":140,"offset":155091}}},{"type":"text","value":". When j has a value of ","position":{"start":{"line":5064,"column":140,"offset":155091},"end":{"line":5064,"column":164,"offset":155115}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":5064,"column":164,"offset":155115},"end":{"line":5064,"column":167,"offset":155118}}},{"type":"text","value":", I'll print from ","position":{"start":{"line":5064,"column":167,"offset":155118},"end":{"line":5064,"column":185,"offset":155136}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":5064,"column":185,"offset":155136},"end":{"line":5064,"column":188,"offset":155139}}},{"type":"text","value":" to ","position":{"start":{"line":5064,"column":188,"offset":155139},"end":{"line":5064,"column":192,"offset":155143}}},{"type":"raw","value":"<code class=\"language-text\">3</code>","position":{"start":{"line":5064,"column":192,"offset":155143},"end":{"line":5064,"column":195,"offset":155146}}},{"type":"text","value":". Let's try this and see what would happen.","position":{"start":{"line":5064,"column":195,"offset":155146},"end":{"line":5064,"column":238,"offset":155189}}}],"position":{"start":{"line":5064,"column":1,"offset":154952},"end":{"line":5064,"column":238,"offset":155189}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> number<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":5066,"column":1,"offset":155193},"end":{"line":5071,"column":4,"offset":155312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can see that our number triangle is ready!","position":{"start":{"line":5073,"column":1,"offset":155316},"end":{"line":5073,"column":47,"offset":155362}}}],"position":{"start":{"line":5073,"column":1,"offset":155316},"end":{"line":5073,"column":47,"offset":155362}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1</span>\n\n<span class=\"token number\">1</span> <span class=\"token number\">2</span>\n\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span>\n\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span>\n\n<span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">3</span> <span class=\"token number\">4</span> <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":5075,"column":1,"offset":155366},"end":{"line":5085,"column":4,"offset":155423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the entire code for you:","position":{"start":{"line":5087,"column":1,"offset":155427},"end":{"line":5087,"column":33,"offset":155459}}}],"position":{"start":{"line":5087,"column":1,"offset":155427},"end":{"line":5087,"column":33,"offset":155459}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">print_a_number_triangle</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> number <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nprint_a_number_triangle<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":5089,"column":1,"offset":155463},"end":{"line":5096,"column":4,"offset":155662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An important point to note is, a couple of these things can be done in a much simpler way. We will look at these options when we talk about functional programming.","position":{"start":{"line":5098,"column":1,"offset":155666},"end":{"line":5098,"column":164,"offset":155829}}}],"position":{"start":{"line":5098,"column":1,"offset":155666},"end":{"line":5098,"column":164,"offset":155829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":5100,"column":3,"offset":155835},"end":{"line":5100,"column":10,"offset":155842}}}],"position":{"start":{"line":5100,"column":1,"offset":155833},"end":{"line":5100,"column":12,"offset":155844}}}],"position":{"start":{"line":5100,"column":1,"offset":155833},"end":{"line":5100,"column":12,"offset":155844}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this step, we:","position":{"start":{"line":5102,"column":1,"offset":155848},"end":{"line":5102,"column":18,"offset":155865}}}],"position":{"start":{"line":5102,"column":1,"offset":155848},"end":{"line":5102,"column":18,"offset":155865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Presented a solution to the exercise for printing a number triangle.","position":{"start":{"line":5104,"column":5,"offset":155873},"end":{"line":5104,"column":73,"offset":155941}}}],"position":{"start":{"line":5104,"column":1,"offset":155869},"end":{"line":5104,"column":73,"offset":155941}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5104,"column":1,"offset":155869},"end":{"line":5104,"column":73,"offset":155941}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 06: Introducing The while Loop","position":{"start":{"line":5106,"column":3,"offset":155947},"end":{"line":5106,"column":38,"offset":155982}}}],"position":{"start":{"line":5106,"column":1,"offset":155945},"end":{"line":5106,"column":40,"offset":155984}}}],"position":{"start":{"line":5106,"column":1,"offset":155945},"end":{"line":5106,"column":40,"offset":155984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at one of the other loops which is present in Python, called the ","position":{"start":{"line":5108,"column":1,"offset":155988},"end":{"line":5108,"column":77,"offset":156064}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5108,"column":79,"offset":156066},"end":{"line":5108,"column":86,"offset":156073}}}],"position":{"start":{"line":5108,"column":77,"offset":156064},"end":{"line":5108,"column":88,"offset":156075}}},{"type":"text","value":" loop.","position":{"start":{"line":5108,"column":88,"offset":156075},"end":{"line":5108,"column":94,"offset":156081}}}],"position":{"start":{"line":5108,"column":1,"offset":155988},"end":{"line":5108,"column":94,"offset":156081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the ","position":{"start":{"line":5110,"column":1,"offset":156085},"end":{"line":5110,"column":8,"offset":156092}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":5110,"column":8,"offset":156092},"end":{"line":5110,"column":13,"offset":156097}}},{"type":"text","value":" loop, we can specify the range of our iteration, by using the ","position":{"start":{"line":5110,"column":13,"offset":156097},"end":{"line":5110,"column":76,"offset":156160}}},{"type":"raw","value":"<code class=\"language-text\">range()</code>","position":{"start":{"line":5110,"column":76,"offset":156160},"end":{"line":5110,"column":85,"offset":156169}}},{"type":"text","value":" function.","position":{"start":{"line":5110,"column":85,"offset":156169},"end":{"line":5110,"column":95,"offset":156179}}}],"position":{"start":{"line":5110,"column":1,"offset":156085},"end":{"line":5110,"column":95,"offset":156179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In a ","position":{"start":{"line":5112,"column":1,"offset":156183},"end":{"line":5112,"column":6,"offset":156188}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5112,"column":6,"offset":156188},"end":{"line":5112,"column":13,"offset":156195}}},{"type":"text","value":" loop, we specify a logical condition. While the condition is true, loop continues running.","position":{"start":{"line":5112,"column":13,"offset":156195},"end":{"line":5112,"column":104,"offset":156286}}}],"position":{"start":{"line":5112,"column":1,"offset":156183},"end":{"line":5112,"column":104,"offset":156286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Do you remember one place where we use the condition until now? It was in an ","position":{"start":{"line":5114,"column":1,"offset":156290},"end":{"line":5114,"column":78,"offset":156367}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":5114,"column":78,"offset":156367},"end":{"line":5114,"column":82,"offset":156371}}},{"type":"text","value":" statement.","position":{"start":{"line":5114,"column":82,"offset":156371},"end":{"line":5114,"column":93,"offset":156382}}}],"position":{"start":{"line":5114,"column":1,"offset":156290},"end":{"line":5114,"column":93,"offset":156382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's see how to use a simple ","position":{"start":{"line":5116,"column":1,"offset":156386},"end":{"line":5116,"column":31,"offset":156416}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5116,"column":31,"offset":156416},"end":{"line":5116,"column":38,"offset":156423}}},{"type":"text","value":" loop.","position":{"start":{"line":5116,"column":38,"offset":156423},"end":{"line":5116,"column":44,"offset":156429}}}],"position":{"start":{"line":5116,"column":1,"offset":156386},"end":{"line":5116,"column":44,"offset":156429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01:","position":{"start":{"line":5118,"column":3,"offset":156435},"end":{"line":5118,"column":14,"offset":156446}}}],"position":{"start":{"line":5118,"column":1,"offset":156433},"end":{"line":5118,"column":16,"offset":156448}}}],"position":{"start":{"line":5118,"column":1,"offset":156433},"end":{"line":5118,"column":16,"offset":156448}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i is 5\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    i <span class=\"token keyword\">is</span> <span class=\"token number\">5</span></code></pre></div>","position":{"start":{"line":5120,"column":1,"offset":156452},"end":{"line":5126,"column":4,"offset":156549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's say ","position":{"start":{"line":5128,"column":1,"offset":156553},"end":{"line":5128,"column":11,"offset":156563}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":5128,"column":11,"offset":156563},"end":{"line":5128,"column":14,"offset":156566}}},{"type":"text","value":" has a value of ","position":{"start":{"line":5128,"column":14,"offset":156566},"end":{"line":5128,"column":30,"offset":156582}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":5128,"column":30,"offset":156582},"end":{"line":5128,"column":33,"offset":156585}}},{"type":"text","value":", and we then do: ","position":{"start":{"line":5128,"column":33,"offset":156585},"end":{"line":5128,"column":51,"offset":156603}}},{"type":"raw","value":"<code class=\"language-text\">while i &lt; 5: print(i)</code>","position":{"start":{"line":5128,"column":51,"offset":156603},"end":{"line":5128,"column":74,"offset":156626}}},{"type":"text","value":".","position":{"start":{"line":5128,"column":74,"offset":156626},"end":{"line":5128,"column":75,"offset":156627}}}],"position":{"start":{"line":5128,"column":1,"offset":156553},"end":{"line":5128,"column":75,"offset":156627}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token operator\">^</span>CTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      File <span class=\"token string\">\"&lt;stdin>\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    KeyboardInterrupt\n    <span class=\"token operator\">>></span><span class=\"token operator\">></span>\n    KeyboardInterrupt</code></pre></div>","position":{"start":{"line":5130,"column":1,"offset":156631},"end":{"line":5148,"column":4,"offset":156907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we leave it to run, you'd see that it continuously prints ","position":{"start":{"line":5150,"column":1,"offset":156911},"end":{"line":5150,"column":62,"offset":156972}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":5150,"column":62,"offset":156972},"end":{"line":5150,"column":65,"offset":156975}}},{"type":"text","value":" again, and again. Let's do a ","position":{"start":{"line":5150,"column":65,"offset":156975},"end":{"line":5150,"column":95,"offset":157005}}},{"type":"raw","value":"<code class=\"language-text\">&lt;CTRL-C></code>","position":{"start":{"line":5150,"column":95,"offset":157005},"end":{"line":5150,"column":105,"offset":157015}}},{"type":"text","value":" or ","position":{"start":{"line":5150,"column":105,"offset":157015},"end":{"line":5150,"column":109,"offset":157019}}},{"type":"raw","value":"<code class=\"language-text\">&lt;COMMAND-C></code>","position":{"start":{"line":5150,"column":109,"offset":157019},"end":{"line":5150,"column":122,"offset":157032}}},{"type":"text","value":" to interrupt this.","position":{"start":{"line":5150,"column":122,"offset":157032},"end":{"line":5150,"column":141,"offset":157051}}}],"position":{"start":{"line":5150,"column":1,"offset":156911},"end":{"line":5150,"column":141,"offset":157051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What is happening here?","position":{"start":{"line":5152,"column":1,"offset":157055},"end":{"line":5152,"column":24,"offset":157078}}}],"position":{"start":{"line":5152,"column":1,"offset":157055},"end":{"line":5152,"column":24,"offset":157078}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially ","position":{"start":{"line":5154,"column":1,"offset":157082},"end":{"line":5154,"column":11,"offset":157092}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":5154,"column":11,"offset":157092},"end":{"line":5154,"column":14,"offset":157095}}},{"type":"text","value":" is ","position":{"start":{"line":5154,"column":14,"offset":157095},"end":{"line":5154,"column":18,"offset":157099}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":5154,"column":18,"offset":157099},"end":{"line":5154,"column":21,"offset":157102}}},{"type":"text","value":", and the condition ","position":{"start":{"line":5154,"column":21,"offset":157102},"end":{"line":5154,"column":41,"offset":157122}}},{"type":"raw","value":"<code class=\"language-text\">i &lt; 5</code>","position":{"start":{"line":5154,"column":41,"offset":157122},"end":{"line":5154,"column":48,"offset":157129}}},{"type":"text","value":" is ","position":{"start":{"line":5154,"column":48,"offset":157129},"end":{"line":5154,"column":52,"offset":157133}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":5154,"column":52,"offset":157133},"end":{"line":5154,"column":58,"offset":157139}}},{"type":"text","value":", and ","position":{"start":{"line":5154,"column":58,"offset":157139},"end":{"line":5154,"column":64,"offset":157145}}},{"type":"raw","value":"<code class=\"language-text\">print(i)</code>","position":{"start":{"line":5154,"column":64,"offset":157145},"end":{"line":5154,"column":74,"offset":157155}}},{"type":"text","value":" is executed. Next iteration, it checks the condition, it is ","position":{"start":{"line":5154,"column":74,"offset":157155},"end":{"line":5154,"column":135,"offset":157216}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":5154,"column":135,"offset":157216},"end":{"line":5154,"column":141,"offset":157222}}},{"type":"text","value":", and ","position":{"start":{"line":5154,"column":141,"offset":157222},"end":{"line":5154,"column":147,"offset":157228}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":5154,"column":147,"offset":157228},"end":{"line":5154,"column":150,"offset":157231}}},{"type":"text","value":" is printed. This continues to happen. What's happening is an ","position":{"start":{"line":5154,"column":150,"offset":157231},"end":{"line":5154,"column":212,"offset":157293}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"infinite loop","position":{"start":{"line":5154,"column":214,"offset":157295},"end":{"line":5154,"column":227,"offset":157308}}}],"position":{"start":{"line":5154,"column":212,"offset":157293},"end":{"line":5154,"column":229,"offset":157310}}},{"type":"text","value":".","position":{"start":{"line":5154,"column":229,"offset":157310},"end":{"line":5154,"column":230,"offset":157311}}}],"position":{"start":{"line":5154,"column":1,"offset":157082},"end":{"line":5154,"column":230,"offset":157311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One of the important things to make sure in a ","position":{"start":{"line":5156,"column":1,"offset":157315},"end":{"line":5156,"column":47,"offset":157361}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5156,"column":47,"offset":157361},"end":{"line":5156,"column":54,"offset":157368}}},{"type":"text","value":" loop, is to increment the value of ","position":{"start":{"line":5156,"column":54,"offset":157368},"end":{"line":5156,"column":90,"offset":157404}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":5156,"column":90,"offset":157404},"end":{"line":5156,"column":93,"offset":157407}}},{"type":"text","value":". We need to say something like ","position":{"start":{"line":5156,"column":93,"offset":157407},"end":{"line":5156,"column":125,"offset":157439}}},{"type":"raw","value":"<code class=\"language-text\">i = i + 1</code>","position":{"start":{"line":5156,"column":125,"offset":157439},"end":{"line":5156,"column":136,"offset":157450}}},{"type":"text","value":".","position":{"start":{"line":5156,"column":136,"offset":157450},"end":{"line":5156,"column":137,"offset":157451}}}],"position":{"start":{"line":5156,"column":1,"offset":157315},"end":{"line":5156,"column":137,"offset":157451}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>   i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":5158,"column":1,"offset":157455},"end":{"line":5168,"column":4,"offset":157576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So how does it work? ","position":{"start":{"line":5170,"column":1,"offset":157580},"end":{"line":5170,"column":22,"offset":157601}}},{"type":"text","value":"*","position":{"start":{"line":5170,"column":22,"offset":157601},"end":{"line":5170,"column":24,"offset":157603}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":5170,"column":24,"offset":157603},"end":{"line":5170,"column":27,"offset":157606}}},{"type":"text","value":" initially had a value of ","position":{"start":{"line":5170,"column":27,"offset":157606},"end":{"line":5170,"column":53,"offset":157632}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":5170,"column":53,"offset":157632},"end":{"line":5170,"column":56,"offset":157635}}},{"type":"text","value":". First the condition is checked. It's ","position":{"start":{"line":5170,"column":56,"offset":157635},"end":{"line":5170,"column":95,"offset":157674}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":5170,"column":95,"offset":157674},"end":{"line":5170,"column":101,"offset":157680}}},{"type":"text","value":", so ","position":{"start":{"line":5170,"column":101,"offset":157680},"end":{"line":5170,"column":106,"offset":157685}}},{"type":"raw","value":"<code class=\"language-text\">0</code>","position":{"start":{"line":5170,"column":106,"offset":157685},"end":{"line":5170,"column":109,"offset":157688}}},{"type":"text","value":" is printed and then the value of ","position":{"start":{"line":5170,"column":109,"offset":157688},"end":{"line":5170,"column":143,"offset":157722}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":5170,"column":143,"offset":157722},"end":{"line":5170,"column":146,"offset":157725}}},{"type":"text","value":" is incremented to ","position":{"start":{"line":5170,"column":146,"offset":157725},"end":{"line":5170,"column":165,"offset":157744}}},{"type":"raw","value":"<code class=\"language-text\">1</code>","position":{"start":{"line":5170,"column":165,"offset":157744},"end":{"line":5170,"column":168,"offset":157747}}},{"type":"text","value":".","position":{"start":{"line":5170,"column":168,"offset":157747},"end":{"line":5170,"column":169,"offset":157748}}}],"position":{"start":{"line":5170,"column":1,"offset":157580},"end":{"line":5170,"column":169,"offset":157748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":5172,"column":5,"offset":157756},"end":{"line":5172,"column":8,"offset":157759}}},{"type":"text","value":" is still less than ","position":{"start":{"line":5172,"column":8,"offset":157759},"end":{"line":5172,"column":28,"offset":157779}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":5172,"column":28,"offset":157779},"end":{"line":5172,"column":31,"offset":157782}}},{"type":"text","value":", so the loop continues to execute, and this happens until ","position":{"start":{"line":5172,"column":31,"offset":157782},"end":{"line":5172,"column":90,"offset":157841}}},{"type":"raw","value":"<code class=\"language-text\">4</code>","position":{"start":{"line":5172,"column":90,"offset":157841},"end":{"line":5172,"column":93,"offset":157844}}},{"type":"text","value":" is printed. ","position":{"start":{"line":5172,"column":93,"offset":157844},"end":{"line":5172,"column":106,"offset":157857}}},{"type":"raw","value":"<code class=\"language-text\">i</code>","position":{"start":{"line":5172,"column":106,"offset":157857},"end":{"line":5172,"column":109,"offset":157860}}},{"type":"text","value":" again gets incremented to ","position":{"start":{"line":5172,"column":109,"offset":157860},"end":{"line":5172,"column":136,"offset":157887}}},{"type":"raw","value":"<code class=\"language-text\">4 + 1</code>","position":{"start":{"line":5172,"column":136,"offset":157887},"end":{"line":5172,"column":143,"offset":157894}}},{"type":"text","value":", or ","position":{"start":{"line":5172,"column":143,"offset":157894},"end":{"line":5172,"column":148,"offset":157899}}},{"type":"raw","value":"<code class=\"language-text\">5</code>","position":{"start":{"line":5172,"column":148,"offset":157899},"end":{"line":5172,"column":151,"offset":157902}}},{"type":"text","value":".","position":{"start":{"line":5172,"column":151,"offset":157902},"end":{"line":5172,"column":152,"offset":157903}}}],"position":{"start":{"line":5172,"column":1,"offset":157752},"end":{"line":5172,"column":152,"offset":157903}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Then we check the condition ","position":{"start":{"line":5173,"column":5,"offset":157909},"end":{"line":5173,"column":33,"offset":157937}}},{"type":"raw","value":"<code class=\"language-text\">i &lt; 5</code>","position":{"start":{"line":5173,"column":33,"offset":157937},"end":{"line":5173,"column":40,"offset":157944}}},{"type":"text","value":". This is now ","position":{"start":{"line":5173,"column":40,"offset":157944},"end":{"line":5173,"column":54,"offset":157958}}},{"type":"raw","value":"<code class=\"language-text\">False</code>","position":{"start":{"line":5173,"column":54,"offset":157958},"end":{"line":5173,"column":61,"offset":157965}}},{"type":"text","value":". Control goes out of the ","position":{"start":{"line":5173,"column":61,"offset":157965},"end":{"line":5173,"column":87,"offset":157991}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5173,"column":87,"offset":157991},"end":{"line":5173,"column":94,"offset":157998}}},{"type":"text","value":" loop, and terminates it.","position":{"start":{"line":5173,"column":94,"offset":157998},"end":{"line":5173,"column":119,"offset":158023}}}],"position":{"start":{"line":5173,"column":1,"offset":157905},"end":{"line":5173,"column":119,"offset":158023}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5172,"column":1,"offset":157752},"end":{"line":5173,"column":119,"offset":158023}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When executing a ","position":{"start":{"line":5175,"column":1,"offset":158027},"end":{"line":5175,"column":18,"offset":158044}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5175,"column":18,"offset":158044},"end":{"line":5175,"column":25,"offset":158051}}},{"type":"text","value":", control flow is just based on a condition. As long as the condition is ","position":{"start":{"line":5175,"column":25,"offset":158051},"end":{"line":5175,"column":98,"offset":158124}}},{"type":"raw","value":"<code class=\"language-text\">True</code>","position":{"start":{"line":5175,"column":98,"offset":158124},"end":{"line":5175,"column":104,"offset":158130}}},{"type":"text","value":", we keep executing the code. An important thing to remember, is to make sure the control variable is updated.","position":{"start":{"line":5175,"column":104,"offset":158130},"end":{"line":5175,"column":214,"offset":158240}}}],"position":{"start":{"line":5175,"column":1,"offset":158027},"end":{"line":5175,"column":214,"offset":158240}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">    <span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token number\">0</span>\n    <span class=\"token number\">1</span>\n    <span class=\"token number\">2</span>\n    <span class=\"token number\">3</span>\n    <span class=\"token number\">4</span></code></pre></div>","position":{"start":{"line":5177,"column":1,"offset":158244},"end":{"line":5185,"column":4,"offset":158341}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A ","position":{"start":{"line":5187,"column":1,"offset":158345},"end":{"line":5187,"column":3,"offset":158347}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":5187,"column":3,"offset":158347},"end":{"line":5187,"column":8,"offset":158352}}},{"type":"text","value":" loop is much simpler to code than a ","position":{"start":{"line":5187,"column":8,"offset":158352},"end":{"line":5187,"column":45,"offset":158389}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5187,"column":45,"offset":158389},"end":{"line":5187,"column":52,"offset":158396}}},{"type":"text","value":". With ","position":{"start":{"line":5187,"column":52,"offset":158396},"end":{"line":5187,"column":59,"offset":158403}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5187,"column":59,"offset":158403},"end":{"line":5187,"column":66,"offset":158410}}},{"type":"text","value":", we have to write an expression statement, to increment the value.","position":{"start":{"line":5187,"column":66,"offset":158410},"end":{"line":5187,"column":133,"offset":158477}}}],"position":{"start":{"line":5187,"column":1,"offset":158345},"end":{"line":5187,"column":133,"offset":158477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The question you might have is - What are the situations when you should use a while?","position":{"start":{"line":5189,"column":1,"offset":158481},"end":{"line":5189,"column":86,"offset":158566}}}],"position":{"start":{"line":5189,"column":1,"offset":158481},"end":{"line":5189,"column":86,"offset":158566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We will look at that very soon.","position":{"start":{"line":5191,"column":1,"offset":158570},"end":{"line":5191,"column":32,"offset":158601}}}],"position":{"start":{"line":5191,"column":1,"offset":158570},"end":{"line":5191,"column":32,"offset":158601}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":5193,"column":3,"offset":158607},"end":{"line":5193,"column":10,"offset":158614}}}],"position":{"start":{"line":5193,"column":1,"offset":158605},"end":{"line":5193,"column":12,"offset":158616}}}],"position":{"start":{"line":5193,"column":1,"offset":158605},"end":{"line":5193,"column":12,"offset":158616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this video, we:","position":{"start":{"line":5195,"column":1,"offset":158620},"end":{"line":5195,"column":19,"offset":158638}}}],"position":{"start":{"line":5195,"column":1,"offset":158620},"end":{"line":5195,"column":19,"offset":158638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Were introduced to the concept of a ","position":{"start":{"line":5197,"column":5,"offset":158646},"end":{"line":5197,"column":41,"offset":158682}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5197,"column":41,"offset":158682},"end":{"line":5197,"column":48,"offset":158689}}},{"type":"text","value":" loop in Python","position":{"start":{"line":5197,"column":48,"offset":158689},"end":{"line":5197,"column":63,"offset":158704}}}],"position":{"start":{"line":5197,"column":1,"offset":158642},"end":{"line":5197,"column":63,"offset":158704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Understood the importance of a control variable being incremented inside the loop","position":{"start":{"line":5198,"column":5,"offset":158710},"end":{"line":5198,"column":86,"offset":158791}}}],"position":{"start":{"line":5198,"column":1,"offset":158706},"end":{"line":5198,"column":86,"offset":158791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Observed differences between the working of a ","position":{"start":{"line":5199,"column":5,"offset":158797},"end":{"line":5199,"column":51,"offset":158843}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5199,"column":51,"offset":158843},"end":{"line":5199,"column":58,"offset":158850}}},{"type":"text","value":", and a ","position":{"start":{"line":5199,"column":58,"offset":158850},"end":{"line":5199,"column":66,"offset":158858}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":5199,"column":66,"offset":158858},"end":{"line":5199,"column":71,"offset":158863}}},{"type":"text","value":" loop","position":{"start":{"line":5199,"column":71,"offset":158863},"end":{"line":5199,"column":76,"offset":158868}}}],"position":{"start":{"line":5199,"column":1,"offset":158793},"end":{"line":5199,"column":76,"offset":158868}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5197,"column":1,"offset":158642},"end":{"line":5199,"column":76,"offset":158868}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 07: Programming Exercise PE-LO-02","position":{"start":{"line":5201,"column":3,"offset":158874},"end":{"line":5201,"column":41,"offset":158912}}}],"position":{"start":{"line":5201,"column":1,"offset":158872},"end":{"line":5201,"column":43,"offset":158914}}}],"position":{"start":{"line":5201,"column":1,"offset":158872},"end":{"line":5201,"column":43,"offset":158914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the previous step, we were introduced to ","position":{"start":{"line":5203,"column":1,"offset":158918},"end":{"line":5203,"column":45,"offset":158962}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5203,"column":45,"offset":158962},"end":{"line":5203,"column":52,"offset":158969}}},{"type":"text","value":" loop. In this step, let's look at a couple of exercises using the ","position":{"start":{"line":5203,"column":52,"offset":158969},"end":{"line":5203,"column":119,"offset":159036}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5203,"column":119,"offset":159036},"end":{"line":5203,"column":126,"offset":159043}}},{"type":"text","value":" loop.","position":{"start":{"line":5203,"column":126,"offset":159043},"end":{"line":5203,"column":132,"offset":159049}}}],"position":{"start":{"line":5203,"column":1,"offset":158918},"end":{"line":5203,"column":132,"offset":159049}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":5205,"column":3,"offset":159055},"end":{"line":5205,"column":12,"offset":159064}}}],"position":{"start":{"line":5205,"column":1,"offset":159053},"end":{"line":5205,"column":14,"offset":159066}}}],"position":{"start":{"line":5205,"column":1,"offset":159053},"end":{"line":5205,"column":14,"offset":159066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print_squares_upto_limit(30)</code>","position":{"start":{"line":5207,"column":4,"offset":159073},"end":{"line":5207,"column":34,"offset":159103}}},{"type":"text","value":": We need to print all the squares of numbers, up to a limit of ","position":{"start":{"line":5207,"column":34,"offset":159103},"end":{"line":5207,"column":98,"offset":159167}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":5207,"column":98,"offset":159167},"end":{"line":5207,"column":102,"offset":159171}}},{"type":"text","value":". The output needs to be ","position":{"start":{"line":5207,"column":102,"offset":159171},"end":{"line":5207,"column":127,"offset":159196}}},{"type":"raw","value":"<code class=\"language-text\">1 4 9 16 25</code>","position":{"start":{"line":5207,"column":127,"offset":159196},"end":{"line":5207,"column":140,"offset":159209}}},{"type":"text","value":".","position":{"start":{"line":5207,"column":140,"offset":159209},"end":{"line":5207,"column":141,"offset":159210}}}],"position":{"start":{"line":5207,"column":1,"offset":159070},"end":{"line":5207,"column":141,"offset":159210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">print_cubes_upto_limit(30)</code>","position":{"start":{"line":5208,"column":4,"offset":159215},"end":{"line":5208,"column":32,"offset":159243}}},{"type":"text","value":": We need to print all the cubes of numbers, up to a limit of ","position":{"start":{"line":5208,"column":32,"offset":159243},"end":{"line":5208,"column":94,"offset":159305}}},{"type":"raw","value":"<code class=\"language-text\">30</code>","position":{"start":{"line":5208,"column":94,"offset":159305},"end":{"line":5208,"column":98,"offset":159309}}},{"type":"text","value":".The output needs to be 1 8 27.","position":{"start":{"line":5208,"column":98,"offset":159309},"end":{"line":5208,"column":129,"offset":159340}}}],"position":{"start":{"line":5208,"column":1,"offset":159212},"end":{"line":5208,"column":129,"offset":159340}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5207,"column":1,"offset":159070},"end":{"line":5208,"column":129,"offset":159340}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Exercise 1: Solution","position":{"start":{"line":5210,"column":3,"offset":159346},"end":{"line":5210,"column":23,"offset":159366}}}],"position":{"start":{"line":5210,"column":1,"offset":159344},"end":{"line":5210,"column":25,"offset":159368}}}],"position":{"start":{"line":5210,"column":1,"offset":159344},"end":{"line":5210,"column":25,"offset":159368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is the entire code for your reference:","position":{"start":{"line":5212,"column":1,"offset":159372},"end":{"line":5212,"column":44,"offset":159415}}}],"position":{"start":{"line":5212,"column":1,"offset":159372},"end":{"line":5212,"column":44,"offset":159415}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">print_squares_upto_limit</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;</span> limit<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n        i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span></code></pre></div>","position":{"start":{"line":5214,"column":1,"offset":159419},"end":{"line":5220,"column":4,"offset":159558}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now the next exercise, was to print cubes up to a limit.","position":{"start":{"line":5222,"column":1,"offset":159562},"end":{"line":5222,"column":57,"offset":159618}}}],"position":{"start":{"line":5222,"column":1,"offset":159562},"end":{"line":5222,"column":57,"offset":159618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The expression in the ","position":{"start":{"line":5224,"column":1,"offset":159622},"end":{"line":5224,"column":23,"offset":159644}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5224,"column":23,"offset":159644},"end":{"line":5224,"column":30,"offset":159651}}},{"type":"text","value":" condition should now be ","position":{"start":{"line":5224,"column":30,"offset":159651},"end":{"line":5224,"column":55,"offset":159676}}},{"type":"raw","value":"<code class=\"language-text\">i*i*i &lt; 30</code>","position":{"start":{"line":5224,"column":55,"offset":159676},"end":{"line":5224,"column":67,"offset":159688}}},{"type":"text","value":".","position":{"start":{"line":5224,"column":67,"offset":159688},"end":{"line":5224,"column":68,"offset":159689}}}],"position":{"start":{"line":5224,"column":1,"offset":159622},"end":{"line":5224,"column":68,"offset":159689}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">print_cubes_upto_limit</span><span class=\"token punctuation\">(</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    i <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">while</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">*</span> i <span class=\"token operator\">&lt;</span> limit<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>i<span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\n        i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\nprint_cubes_upto_limit<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":5226,"column":1,"offset":159693},"end":{"line":5233,"column":4,"offset":159864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Could we have implemented above two examples with ","position":{"start":{"line":5235,"column":1,"offset":159868},"end":{"line":5235,"column":51,"offset":159918}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":5235,"column":51,"offset":159918},"end":{"line":5235,"column":56,"offset":159923}}},{"type":"text","value":" loop? It would've been a little more difficult.","position":{"start":{"line":5235,"column":56,"offset":159923},"end":{"line":5235,"column":104,"offset":159971}}}],"position":{"start":{"line":5235,"column":1,"offset":159868},"end":{"line":5235,"column":104,"offset":159971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Typically, we use a ","position":{"start":{"line":5237,"column":1,"offset":159975},"end":{"line":5237,"column":21,"offset":159995}}},{"type":"raw","value":"<code class=\"language-text\">for</code>","position":{"start":{"line":5237,"column":21,"offset":159995},"end":{"line":5237,"column":26,"offset":160000}}},{"type":"text","value":" loop when we know how many times the loop will be executed is clear at the start.","position":{"start":{"line":5237,"column":26,"offset":160000},"end":{"line":5237,"column":108,"offset":160082}}}],"position":{"start":{"line":5237,"column":1,"offset":159975},"end":{"line":5237,"column":108,"offset":160082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we do not know, how many times a loop will run, ","position":{"start":{"line":5239,"column":1,"offset":160086},"end":{"line":5239,"column":52,"offset":160137}}},{"type":"raw","value":"<code class=\"language-text\">while</code>","position":{"start":{"line":5239,"column":52,"offset":160137},"end":{"line":5239,"column":59,"offset":160144}}},{"type":"text","value":" is a better option.","position":{"start":{"line":5239,"column":59,"offset":160144},"end":{"line":5239,"column":79,"offset":160164}}}],"position":{"start":{"line":5239,"column":1,"offset":160086},"end":{"line":5239,"column":79,"offset":160164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Step 08: While Example","position":{"start":{"line":5241,"column":3,"offset":160170},"end":{"line":5241,"column":25,"offset":160192}}}],"position":{"start":{"line":5241,"column":1,"offset":160168},"end":{"line":5241,"column":27,"offset":160194}}}],"position":{"start":{"line":5241,"column":1,"offset":160168},"end":{"line":5241,"column":27,"offset":160194}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Earlier we used ","position":{"start":{"line":5243,"column":1,"offset":160198},"end":{"line":5243,"column":17,"offset":160214}}},{"type":"raw","value":"<code class=\"language-text\">if</code>","position":{"start":{"line":5243,"column":17,"offset":160214},"end":{"line":5243,"column":21,"offset":160218}}},{"type":"text","value":" statement to implement a solution for this:","position":{"start":{"line":5243,"column":21,"offset":160218},"end":{"line":5243,"column":65,"offset":160262}}}],"position":{"start":{"line":5243,"column":1,"offset":160198},"end":{"line":5243,"column":65,"offset":160262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ask the User for input:","position":{"start":{"line":5245,"column":5,"offset":160270},"end":{"line":5245,"column":28,"offset":160293}}}],"position":{"start":{"line":5245,"column":5,"offset":160270},"end":{"line":5245,"column":28,"offset":160293}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Enter two numbers","position":{"start":{"line":5246,"column":9,"offset":160303},"end":{"line":5246,"column":26,"offset":160320}}}],"position":{"start":{"line":5246,"column":5,"offset":160299},"end":{"line":5246,"column":26,"offset":160320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Choose the Option:","position":{"start":{"line":5247,"column":9,"offset":160330},"end":{"line":5247,"column":27,"offset":160348}}}],"position":{"start":{"line":5247,"column":9,"offset":160330},"end":{"line":5247,"column":27,"offset":160348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"1 - Add","position":{"start":{"line":5248,"column":13,"offset":160362},"end":{"line":5248,"column":20,"offset":160369}}}],"position":{"start":{"line":5248,"column":9,"offset":160358},"end":{"line":5248,"column":20,"offset":160369}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"2 - Subtract","position":{"start":{"line":5249,"column":13,"offset":160383},"end":{"line":5249,"column":25,"offset":160395}}}],"position":{"start":{"line":5249,"column":9,"offset":160379},"end":{"line":5249,"column":25,"offset":160395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"3 - Multiply","position":{"start":{"line":5250,"column":13,"offset":160409},"end":{"line":5250,"column":25,"offset":160421}}}],"position":{"start":{"line":5250,"column":9,"offset":160405},"end":{"line":5250,"column":25,"offset":160421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"4 - Divide","position":{"start":{"line":5251,"column":13,"offset":160435},"end":{"line":5251,"column":23,"offset":160445}}}],"position":{"start":{"line":5251,"column":9,"offset":160431},"end":{"line":5251,"column":23,"offset":160445}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5248,"column":9,"offset":160358},"end":{"line":5251,"column":23,"offset":160445}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5247,"column":5,"offset":160326},"end":{"line":5251,"column":23,"offset":160445}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5246,"column":5,"offset":160299},"end":{"line":5251,"column":23,"offset":160445}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5245,"column":1,"offset":160266},"end":{"line":5251,"column":23,"offset":160445}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Perform the Operation","position":{"start":{"line":5252,"column":5,"offset":160451},"end":{"line":5252,"column":26,"offset":160472}}}],"position":{"start":{"line":5252,"column":1,"offset":160447},"end":{"line":5252,"column":26,"offset":160472}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Publish the Result","position":{"start":{"line":5253,"column":5,"offset":160478},"end":{"line":5253,"column":23,"offset":160496}}}],"position":{"start":{"line":5253,"column":1,"offset":160474},"end":{"line":5253,"column":23,"offset":160496}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5245,"column":1,"offset":160266},"end":{"line":5253,"column":23,"offset":160496}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We would want to enhance it to execute in a loop multiple times, until the user chooses to exit. We will add an option 5 - Exit.","position":{"start":{"line":5255,"column":1,"offset":160500},"end":{"line":5255,"column":129,"offset":160628}}}],"position":{"start":{"line":5255,"column":1,"offset":160500},"end":{"line":5255,"column":129,"offset":160628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ask the User for input:","position":{"start":{"line":5257,"column":5,"offset":160636},"end":{"line":5257,"column":28,"offset":160659}}}],"position":{"start":{"line":5257,"column":5,"offset":160636},"end":{"line":5257,"column":28,"offset":160659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Enter two numbers","position":{"start":{"line":5258,"column":9,"offset":160669},"end":{"line":5258,"column":26,"offset":160686}}}],"position":{"start":{"line":5258,"column":5,"offset":160665},"end":{"line":5258,"column":26,"offset":160686}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Choose the Option:","position":{"start":{"line":5259,"column":9,"offset":160696},"end":{"line":5259,"column":27,"offset":160714}}}],"position":{"start":{"line":5259,"column":9,"offset":160696},"end":{"line":5259,"column":27,"offset":160714}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"1 - Add","position":{"start":{"line":5260,"column":13,"offset":160728},"end":{"line":5260,"column":20,"offset":160735}}}],"position":{"start":{"line":5260,"column":9,"offset":160724},"end":{"line":5260,"column":20,"offset":160735}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"2 - Subtract","position":{"start":{"line":5261,"column":13,"offset":160749},"end":{"line":5261,"column":25,"offset":160761}}}],"position":{"start":{"line":5261,"column":9,"offset":160745},"end":{"line":5261,"column":25,"offset":160761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"3 - Multiply","position":{"start":{"line":5262,"column":13,"offset":160775},"end":{"line":5262,"column":25,"offset":160787}}}],"position":{"start":{"line":5262,"column":9,"offset":160771},"end":{"line":5262,"column":25,"offset":160787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"4 - Divide","position":{"start":{"line":5263,"column":13,"offset":160801},"end":{"line":5263,"column":23,"offset":160811}}}],"position":{"start":{"line":5263,"column":9,"offset":160797},"end":{"line":5263,"column":23,"offset":160811}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"5 - Exit","position":{"start":{"line":5264,"column":13,"offset":160825},"end":{"line":5264,"column":21,"offset":160833}}}],"position":{"start":{"line":5264,"column":9,"offset":160821},"end":{"line":5264,"column":21,"offset":160833}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5260,"column":9,"offset":160724},"end":{"line":5264,"column":21,"offset":160833}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5259,"column":5,"offset":160692},"end":{"line":5264,"column":21,"offset":160833}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5258,"column":5,"offset":160665},"end":{"line":5264,"column":21,"offset":160833}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5257,"column":1,"offset":160632},"end":{"line":5264,"column":21,"offset":160833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Perform the Operation","position":{"start":{"line":5265,"column":5,"offset":160839},"end":{"line":5265,"column":26,"offset":160860}}}],"position":{"start":{"line":5265,"column":1,"offset":160835},"end":{"line":5265,"column":26,"offset":160860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Publish the Result","position":{"start":{"line":5266,"column":5,"offset":160866},"end":{"line":5266,"column":23,"offset":160884}}}],"position":{"start":{"line":5266,"column":1,"offset":160862},"end":{"line":5266,"column":23,"offset":160884}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Repeat until Option 5 is chosen.","position":{"start":{"line":5267,"column":5,"offset":160890},"end":{"line":5267,"column":37,"offset":160922}}}],"position":{"start":{"line":5267,"column":1,"offset":160886},"end":{"line":5267,"column":37,"offset":160922}}},{"type":"text","value":"\n"}],"position":{"start":{"line":5257,"column":1,"offset":160632},"end":{"line":5267,"column":37,"offset":160922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Snippet-01 Explained","position":{"start":{"line":5269,"column":3,"offset":160928},"end":{"line":5269,"column":23,"offset":160948}}}],"position":{"start":{"line":5269,"column":1,"offset":160926},"end":{"line":5269,"column":25,"offset":160950}}}],"position":{"start":{"line":5269,"column":1,"offset":160926},"end":{"line":5269,"column":25,"offset":160950}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's the earlier code we wrote with if:","position":{"start":{"line":5271,"column":1,"offset":160954},"end":{"line":5271,"column":42,"offset":160995}}}],"position":{"start":{"line":5271,"column":1,"offset":160954},"end":{"line":5271,"column":42,"offset":160995}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">number1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Number1: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nnumber2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Number2: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n1 - Add\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2 - Subtract\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3 - Divide\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4 - Multiply\"</span><span class=\"token punctuation\">)</span>\n\nchoice <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Choose Operation: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># print(number1 + number2)</span>\n<span class=\"token comment\"># print(choice)</span>\n<span class=\"token keyword\">if</span> choice<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> number1 <span class=\"token operator\">+</span> number2\n<span class=\"token keyword\">elif</span> choice<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> number1 <span class=\"token operator\">-</span> number2\n<span class=\"token keyword\">elif</span> choice<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> number1 <span class=\"token operator\">/</span> number2\n<span class=\"token keyword\">elif</span> choice<span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> number1 <span class=\"token operator\">*</span> number2\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    result <span class=\"token operator\">=</span> <span class=\"token string\">\"Invalid Choice\"</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":5273,"column":1,"offset":160999},"end":{"line":5298,"column":4,"offset":161527}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":5299,"column":1,"offset":161529}}}}