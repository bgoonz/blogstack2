{"expireTime":9007200911871015000,"key":"transformer-remark-markdown-html-81c8a43581fe044a88436a98dfcd81a8-gatsby-remark-prismjs-","val":"<h1>Event-Driven Programming</h1>\n<ul>\n<li><strong><a href=\"https://github.com/millermedeiros/js-signals/wiki/Comparison-between-different-Observer-Pattern-implementations\">Comparison Between Different Observer Pattern Implementations</a></strong>: The comparison below is just about the basic features of subscribing to an event type, dispatching and removing an event listener.</li>\n<li><strong><a href=\"https://otaqui.com/blog/1374/event-emitter-pub-sub-or-deferred-promises-which-should-you-choose/\">Event Emitter, Pub Sub or Deferred Promises</a></strong>: In this post Pete Otaqui explores a little about how each pattern works with (very) basic implementations and looks at the reasons why you might choose one over another.</li>\n<li>\n<p><strong>Implementations</strong>: Libraries, frameworks and tools that use Event-Driven Programming paradigm.</p>\n<ul>\n<li><strong><a href=\"https://baconjs.github.io/\">Bacon.js</a></strong>: A small functional reactive programming lib for JavaScript. Turns your event spaghetti into clean and declarative feng shui bacon, by switching from imperative to functional.</li>\n<li><strong><a href=\"http://flightjs.github.io/\">Flight</a></strong>: An event-driven web framework, from Twitter.</li>\n<li><strong><a href=\"http://thejacklawson.com/Mediator.js/\">Mediator.js</a></strong>: Mediator is a simple class that allows you to register, unregister, and call subscriber methods to help event-based, asyncronous programming.</li>\n<li><strong><a href=\"https://github.com/postaljs/postal.js\">Postal.js</a></strong>: Postal.js takes the familiar \"eventing-style\" paradigm and extends it by providing \"broker\" and subscriber implementations</li>\n<li><strong><a href=\"http://radio.uxder.com/\">Radio.js</a></strong>: Radio.js is a small dependency-free publish/subscribe JavaScript library. Use it to implement the observer pattern in your code to help decouple your application architecture for greater maintainability.</li>\n<li><strong><a href=\"http://millermedeiros.github.io/js-signals/\">js-signals</a></strong>: Custom Event/Messaging system for JavaScript.</li>\n<li><strong><a href=\"https://github.com/federico-lox/pubsub.js\">pubsub.js</a></strong>: A tiny (~600 bytes when minified, ~300 bytes when gzip'd) and robust pubsub implementation.</li>\n</ul>\n</li>\n</ul>"}