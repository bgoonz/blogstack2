{"expireTime":9007200911871012000,"key":"transformer-remark-markdown-ast-545b0b3ec607b6d885e53d87eaeddd10-gatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Definition","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":14,"offset":13},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":14,"offset":13},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"A Queue is a particular kind of abstract data type or collection in which the entities in the collection are kept in order and the principal operations are the addition of entities to the rear terminal position, known as enqueue, and removal of entities from the front terminal position, known as dequeue. This makes the Queue a First-In-First-Out (FIFO) data structure. In a FIFO data structure, the first element added to the Queue will be the first one to be removed. ","position":{"start":{"line":3,"column":3,"offset":19},"end":{"line":3,"column":474,"offset":490},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"From","position":{"start":{"line":3,"column":476,"offset":492},"end":{"line":3,"column":480,"offset":496},"indent":[]}}],"position":{"start":{"line":3,"column":474,"offset":490},"end":{"line":3,"column":482,"offset":498},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":3,"column":482,"offset":498},"end":{"line":3,"column":483,"offset":499},"indent":[]}},{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Queue_(abstract_data_type)","children":[{"type":"strong","children":[{"type":"text","value":"Wikipedia","position":{"start":{"line":3,"column":486,"offset":502},"end":{"line":3,"column":495,"offset":511},"indent":[]}}],"position":{"start":{"line":3,"column":484,"offset":500},"end":{"line":3,"column":497,"offset":513},"indent":[]}}],"position":{"start":{"line":3,"column":483,"offset":499},"end":{"line":3,"column":558,"offset":574},"indent":[]}}],"position":{"start":{"line":3,"column":3,"offset":19},"end":{"line":3,"column":558,"offset":574},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":17},"end":{"line":3,"column":558,"offset":574},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As for the Stack data structure, a peek operation is often added to the Queue data structure. It returns the value of the front element without dequeuing it.","position":{"start":{"line":5,"column":1,"offset":578},"end":{"line":5,"column":158,"offset":735},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":578},"end":{"line":5,"column":158,"offset":735},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Complexity","position":{"start":{"line":7,"column":4,"offset":742},"end":{"line":7,"column":14,"offset":752},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":739},"end":{"line":7,"column":14,"offset":752},"indent":[]}},{"type":"table","align":[null,null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Average","position":{"start":{"line":9,"column":3,"offset":758},"end":{"line":9,"column":10,"offset":765},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":758},"end":{"line":9,"column":10,"offset":765},"indent":[]}},{"type":"tableCell","children":[],"position":{"start":{"line":9,"column":20,"offset":775},"end":{"line":9,"column":20,"offset":775},"indent":[]}},{"type":"tableCell","children":[],"position":{"start":{"line":9,"column":32,"offset":787},"end":{"line":9,"column":32,"offset":787},"indent":[]}},{"type":"tableCell","children":[],"position":{"start":{"line":9,"column":43,"offset":798},"end":{"line":9,"column":43,"offset":798},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":756},"end":{"line":9,"column":44,"offset":799},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Access","position":{"start":{"line":11,"column":3,"offset":848},"end":{"line":11,"column":9,"offset":854},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":848},"end":{"line":11,"column":10,"offset":855},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Search","position":{"start":{"line":11,"column":13,"offset":858},"end":{"line":11,"column":19,"offset":864},"indent":[]}}],"position":{"start":{"line":11,"column":13,"offset":858},"end":{"line":11,"column":19,"offset":864},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Insertion","position":{"start":{"line":11,"column":22,"offset":867},"end":{"line":11,"column":31,"offset":876},"indent":[]}}],"position":{"start":{"line":11,"column":22,"offset":867},"end":{"line":11,"column":31,"offset":876},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Deletion","position":{"start":{"line":11,"column":34,"offset":879},"end":{"line":11,"column":42,"offset":887},"indent":[]}}],"position":{"start":{"line":11,"column":34,"offset":879},"end":{"line":11,"column":42,"offset":887},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":846},"end":{"line":11,"column":44,"offset":889},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"O(n)","position":{"start":{"line":12,"column":3,"offset":893},"end":{"line":12,"column":7,"offset":897},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":893},"end":{"line":12,"column":10,"offset":900},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"O(n)","position":{"start":{"line":12,"column":13,"offset":903},"end":{"line":12,"column":17,"offset":907},"indent":[]}}],"position":{"start":{"line":12,"column":13,"offset":903},"end":{"line":12,"column":19,"offset":909},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"O(1)","position":{"start":{"line":12,"column":22,"offset":912},"end":{"line":12,"column":26,"offset":916},"indent":[]}}],"position":{"start":{"line":12,"column":22,"offset":912},"end":{"line":12,"column":31,"offset":921},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"O(n)","position":{"start":{"line":12,"column":34,"offset":924},"end":{"line":12,"column":38,"offset":928},"indent":[]}}],"position":{"start":{"line":12,"column":34,"offset":924},"end":{"line":12,"column":42,"offset":932},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":891},"end":{"line":12,"column":44,"offset":934},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":756},"end":{"line":12,"column":44,"offset":934},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To get a full overview of the time and space complexity of the Queue data structure, have a look to this excellent ","position":{"start":{"line":14,"column":1,"offset":938},"end":{"line":14,"column":116,"offset":1053},"indent":[]}},{"type":"link","title":null,"url":"http://bigocheatsheet.com","children":[{"type":"text","value":"Big O cheat sheet","position":{"start":{"line":14,"column":117,"offset":1054},"end":{"line":14,"column":134,"offset":1071},"indent":[]}}],"position":{"start":{"line":14,"column":116,"offset":1053},"end":{"line":14,"column":162,"offset":1099},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":162,"offset":1099},"end":{"line":14,"column":163,"offset":1100},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":938},"end":{"line":14,"column":163,"offset":1100},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The code","position":{"start":{"line":16,"column":4,"offset":1107},"end":{"line":16,"column":12,"offset":1115},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":1104},"end":{"line":16,"column":12,"offset":1115},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function Queue() {\n  this.queue = [];\n}\n\nQueue.prototype.enqueue = function(value) {\n  this.queue.push(value);\n};\nQueue.prototype.dequeue = function() {\n  return this.queue.shift();\n};\nQueue.prototype.peek = function() {\n  return this.queue[0];\n};\nQueue.prototype.length = function() {\n  return this.queue.length;\n};\nQueue.prototype.print = function() {\n  console.log(this.queue.join(' '));\n};\n\nvar queue = new Queue();\nqueue.enqueue(1);\nqueue.enqueue(2);\nqueue.enqueue(3);\nqueue.print(); // => 1 2 3\nconsole.log('length is 3:', queue.length()); // => 3\nconsole.log('peek is 1:', queue.peek()); // => 3\nconsole.log('dequeue is 1:', queue.dequeue()); // => 1\nqueue.print(); // => 2 3\nconsole.log('dequeue is 2:', queue.dequeue());  // => 2\nconsole.log('length is 1:', queue.length()); // => 1\nconsole.log('dequeue is 3:', queue.dequeue()); // => 3\nqueue.print(); // => ''\nconsole.log('peek is undefined:', queue.peek()); // => undefined\nconsole.log('dequeue is undefined:', queue.dequeue()); // => undefined</code></pre></div>","position":{"start":{"line":18,"column":1,"offset":1119},"end":{"line":54,"column":4,"offset":2169},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":55,"column":1,"offset":2171}}}}